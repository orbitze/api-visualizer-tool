{"ast":null,"code":"/** @license react-json-editor-ajrm v2.5.13\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React, { Component } from 'react';\nimport themes from './themes';\nimport { identical, getType } from './mitsuketa';\nimport err from './err';\nimport { format } from './locale';\nimport defaultLocale from './locale/en';\n\nclass JSONInput extends Component {\n  constructor(props) {\n    super(props);\n    this.updateInternalProps = this.updateInternalProps.bind(this);\n    this.createMarkup = this.createMarkup.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.update = this.update.bind(this);\n    this.getCursorPosition = this.getCursorPosition.bind(this);\n    this.setCursorPosition = this.setCursorPosition.bind(this);\n    this.scheduledUpdate = this.scheduledUpdate.bind(this);\n    this.setUpdateTime = this.setUpdateTime.bind(this);\n    this.renderLabels = this.renderLabels.bind(this);\n    this.newSpan = this.newSpan.bind(this);\n    this.renderErrorMessage = this.renderErrorMessage.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this.showPlaceholder = this.showPlaceholder.bind(this);\n    this.tokenize = this.tokenize.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onPaste = this.onPaste.bind(this);\n    this.stopEvent = this.stopEvent.bind(this);\n    this.refContent = null;\n    this.refLabels = null;\n    this.updateInternalProps();\n    this.renderCount = 1;\n    this.state = {\n      prevPlaceholder: '',\n      markupText: '',\n      plainText: '',\n      json: '',\n      jsObject: undefined,\n      lines: false,\n      error: false\n    };\n\n    if (!this.props.locale) {\n      console.warn(\"[react-json-editor-ajrm - Deprecation Warning] You did not provide a 'locale' prop for your JSON input - This will be required in a future version. English has been set as a default.\");\n    }\n  }\n\n  updateInternalProps() {\n    let colors = {},\n        style = {},\n        theme = themes.dark_vscode_tribute;\n    if ('theme' in this.props) if (typeof this.props.theme === 'string') if (this.props.theme in themes) theme = themes[this.props.theme];\n    colors = theme;\n    if ('colors' in this.props) colors = {\n      default: 'default' in this.props.colors ? this.props.colors.default : colors.default,\n      string: 'string' in this.props.colors ? this.props.colors.string : colors.string,\n      number: 'number' in this.props.colors ? this.props.colors.number : colors.number,\n      colon: 'colon' in this.props.colors ? this.props.colors.colon : colors.colon,\n      keys: 'keys' in this.props.colors ? this.props.colors.keys : colors.keys,\n      keys_whiteSpace: 'keys_whiteSpace' in this.props.colors ? this.props.colors.keys_whiteSpace : colors.keys_whiteSpace,\n      primitive: 'primitive' in this.props.colors ? this.props.colors.primitive : colors.primitive,\n      error: 'error' in this.props.colors ? this.props.colors.error : colors.error,\n      background: 'background' in this.props.colors ? this.props.colors.background : colors.background,\n      background_warning: 'background_warning' in this.props.colors ? this.props.colors.background_warning : colors.background_warning\n    };\n    this.colors = colors;\n    if ('style' in this.props) style = {\n      outerBox: 'outerBox' in this.props.style ? this.props.style.outerBox : {},\n      container: 'container' in this.props.style ? this.props.style.container : {},\n      warningBox: 'warningBox' in this.props.style ? this.props.style.warningBox : {},\n      errorMessage: 'errorMessage' in this.props.style ? this.props.style.errorMessage : {},\n      body: 'body' in this.props.style ? this.props.style.body : {},\n      labelColumn: 'labelColumn' in this.props.style ? this.props.style.labelColumn : {},\n      labels: 'labels' in this.props.style ? this.props.style.labels : {},\n      contentBox: 'contentBox' in this.props.style ? this.props.style.contentBox : {}\n    };else style = {\n      outerBox: {},\n      container: {},\n      warningBox: {},\n      errorMessage: {},\n      body: {},\n      labelColumn: {},\n      labels: {},\n      contentBox: {}\n    };\n    this.style = style;\n    this.confirmGood = 'confirmGood' in this.props ? this.props.confirmGood : true;\n    const totalHeight = this.props.height || '610px',\n          totalWidth = this.props.width || '479px';\n    this.totalHeight = totalHeight;\n    this.totalWidth = totalWidth;\n\n    if (!('onKeyPressUpdate' in this.props) || this.props.onKeyPressUpdate) {\n      if (!this.timer) this.timer = setInterval(this.scheduledUpdate, 100);\n    } else if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = false;\n    }\n\n    this.updateTime = false;\n    this.waitAfterKeyPress = 'waitAfterKeyPress' in this.props ? this.props.waitAfterKeyPress : 1000;\n    this.resetConfiguration = 'reset' in this.props ? this.props.reset : false;\n  }\n\n  render() {\n    const id = this.props.id,\n          markupText = this.state.markupText,\n          error = this.props.error || this.state.error,\n          colors = this.colors,\n          style = this.style,\n          confirmGood = this.confirmGood,\n          totalHeight = this.totalHeight,\n          totalWidth = this.totalWidth,\n          hasError = !!this.props.error || (error ? 'token' in error : false);\n    this.renderCount++;\n    return React.createElement(\"div\", {\n      name: \"outer-box\",\n      id: id && id + '-outer-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'none',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        position: 'relative'\n      }, style.outerBox)\n    }, confirmGood ? React.createElement(\"div\", {\n      style: {\n        opacity: hasError ? 0 : 1,\n        height: '30px',\n        width: '30px',\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        transform: 'translate(-25%,25%)',\n        pointerEvents: 'none',\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }\n    }, React.createElement(\"svg\", {\n      height: \"30px\",\n      width: \"30px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"green\",\n      opacity: \"0.85\",\n      d: \"M39.363,79L16,55.49l11.347-11.419L39.694,56.49L72.983,23L84,34.085L39.363,79z\"\n    }))) : void 0, React.createElement(\"div\", {\n      name: \"container\",\n      id: id && id + '-container',\n      style: _objectSpread({\n        display: 'block',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        fontFamily: 'Roboto, sans-serif'\n      }, style.container),\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      name: \"warning-box\",\n      id: id && id + '-warning-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'hidden',\n        height: hasError ? '60px' : '0px',\n        width: '100%',\n        margin: 0,\n        backgroundColor: colors.background_warning,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.warningBox),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        top: 0,\n        left: 0,\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"svg\", {\n      height: \"25px\",\n      width: \"25px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"red\",\n      d: \"M73.9,5.75c0.467-0.467,1.067-0.7,1.8-0.7c0.7,0,1.283,0.233,1.75,0.7l16.8,16.8  c0.467,0.5,0.7,1.084,0.7,1.75c0,0.733-0.233,1.334-0.7,1.801L70.35,50l23.9,23.95c0.5,0.467,0.75,1.066,0.75,1.8  c0,0.667-0.25,1.25-0.75,1.75l-16.8,16.75c-0.534,0.467-1.117,0.7-1.75,0.7s-1.233-0.233-1.8-0.7L50,70.351L26.1,94.25  c-0.567,0.467-1.167,0.7-1.8,0.7c-0.667,0-1.283-0.233-1.85-0.7L5.75,77.5C5.25,77,5,76.417,5,75.75c0-0.733,0.25-1.333,0.75-1.8  L29.65,50L5.75,26.101C5.25,25.667,5,25.066,5,24.3c0-0.666,0.25-1.25,0.75-1.75l16.8-16.8c0.467-0.467,1.05-0.7,1.75-0.7  c0.733,0,1.333,0.233,1.8,0.7L50,29.65L73.9,5.75z\"\n    }))))), React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: 'calc(100% - 60px)',\n        margin: 0,\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        position: 'absolute',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, this.renderErrorMessage())), React.createElement(\"div\", {\n      name: \"body\",\n      id: id && id + '-body',\n      style: _objectSpread({\n        display: 'flex',\n        overflow: 'none',\n        height: hasError ? 'calc(100% - 60px)' : '100%',\n        width: '',\n        margin: 0,\n        resize: 'none',\n        fontFamily: 'Roboto Mono, Monaco, monospace',\n        fontSize: '11px',\n        backgroundColor: colors.background,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.body),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      name: \"labels\",\n      id: id && id + '-labels',\n      ref: ref => this.refLabels = ref,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '44px',\n        margin: 0,\n        padding: '5px 0px 5px 10px',\n        overflow: 'hidden',\n        color: '#D4D4D4'\n      }, style.labelColumn),\n      onClick: this.onClick\n    }, this.renderLabels()), React.createElement(\"span\", {\n      id: id,\n      ref: ref => this.refContent = ref,\n      contentEditable: true,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '',\n        flex: 1,\n        margin: 0,\n        padding: '5px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        wordWrap: 'break-word',\n        whiteSpace: 'pre-line',\n        color: '#D4D4D4',\n        outline: 'none'\n      }, style.contentBox),\n      dangerouslySetInnerHTML: this.createMarkup(markupText),\n      onKeyPress: this.onKeyPress,\n      onKeyDown: this.onKeyDown,\n      onClick: this.onClick,\n      onBlur: this.onBlur,\n      onScroll: this.onScroll,\n      onPaste: this.onPaste,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      autoCapitalize: \"off\",\n      spellCheck: false\n    }))));\n  }\n\n  renderErrorMessage() {\n    const locale = this.props.locale || defaultLocale,\n          error = this.props.error || this.state.error,\n          style = this.style;\n    if (!error) return void 0;\n    return React.createElement(\"p\", {\n      style: _objectSpread({\n        color: 'red',\n        fontSize: '12px',\n        position: 'absolute',\n        width: 'calc(100% - 60px)',\n        height: '60px',\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n        paddingRight: '10px',\n        overflowWrap: 'break-word',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }, style.errorMessage)\n    }, format(locale.format, error));\n  }\n\n  renderLabels() {\n    const colors = this.colors,\n          style = this.style,\n          error = this.props.error || this.state.error,\n          errorLine = error ? error.line : -1,\n          lines = this.state.lines ? this.state.lines : 1;\n    let labels = new Array(lines);\n\n    for (var i = 0; i < lines - 1; i++) labels[i] = i + 1;\n\n    return labels.map(number => {\n      const color = number !== errorLine ? colors.default : 'red';\n      return React.createElement(\"div\", {\n        key: number,\n        style: _objectSpread({}, style.labels, {\n          color: color\n        })\n      }, number);\n    });\n  }\n\n  createMarkup(markupText) {\n    if (markupText === undefined) return {\n      __html: ''\n    };\n    return {\n      __html: '' + markupText\n    };\n  }\n\n  newSpan(i, token, depth) {\n    let colors = this.colors,\n        type = token.type,\n        string = token.string;\n    let color = '';\n\n    switch (type) {\n      case 'string':\n      case 'number':\n      case 'primitive':\n      case 'error':\n        color = colors[token.type];\n        break;\n\n      case 'key':\n        if (string === ' ') color = colors.keys_whiteSpace;else color = colors.keys;\n        break;\n\n      case 'symbol':\n        if (string === ':') color = colors.colon;else color = colors.default;\n        break;\n\n      default:\n        color = colors.default;\n        break;\n    }\n\n    if (string.length !== string.replace(/</g, '').replace(/>/g, '').length) string = '<xmp style=display:inline;>' + string + '</xmp>';\n    return '<span' + ' type=\"' + type + '\"' + ' value=\"' + string + '\"' + ' depth=\"' + depth + '\"' + ' style=\"color:' + color + '\"' + '>' + string + '</span>';\n  }\n\n  getCursorPosition(countBR) {\n    /**\r\n     * Need to deprecate countBR\r\n     * It is used to differenciate between good markup render, and aux render when error found\r\n     * Adjustments based on coundBR account for usage of <br> instead of <span> for linebreaks to determine acurate cursor position\r\n     * Find a way to consolidate render styles\r\n     */\n    const isChildOf = node => {\n      while (node !== null) {\n        if (node === this.refContent) return true;\n        node = node.parentNode;\n      }\n\n      return false;\n    };\n\n    let selection = window.getSelection(),\n        charCount = -1,\n        linebreakCount = 0,\n        node;\n\n    if (selection.focusNode && isChildOf(selection.focusNode)) {\n      node = selection.focusNode;\n      charCount = selection.focusOffset;\n\n      while (node) {\n        if (node === this.refContent) break;\n\n        if (node.previousSibling) {\n          node = node.previousSibling;\n          if (countBR) if (node.nodeName === 'BR') linebreakCount++;\n          charCount += node.textContent.length;\n        } else {\n          node = node.parentNode;\n          if (node === null) break;\n        }\n      }\n    }\n\n    return charCount + linebreakCount;\n  }\n\n  setCursorPosition(nextPosition) {\n    if ([false, null, undefined].indexOf(nextPosition) > -1) return;\n\n    const createRange = (node, chars, range) => {\n      if (!range) {\n        range = document.createRange();\n        range.selectNode(node);\n        range.setStart(node, 0);\n      }\n\n      if (chars.count === 0) {\n        range.setEnd(node, chars.count);\n      } else if (node && chars.count > 0) {\n        if (node.nodeType === Node.TEXT_NODE) {\n          if (node.textContent.length < chars.count) chars.count -= node.textContent.length;else {\n            range.setEnd(node, chars.count);\n            chars.count = 0;\n          }\n        } else for (var lp = 0; lp < node.childNodes.length; lp++) {\n          range = createRange(node.childNodes[lp], chars, range);\n          if (chars.count === 0) break;\n        }\n      }\n\n      return range;\n    };\n\n    const setPosition = chars => {\n      if (chars < 0) return;\n      let selection = window.getSelection(),\n          range = createRange(this.refContent, {\n        count: chars\n      });\n      if (!range) return;\n      range.collapse(false);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    };\n\n    if (nextPosition > 0) setPosition(nextPosition);else this.refContent.focus();\n  }\n\n  update() {\n    let cursorOffset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let updateCursorPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onChange' in this.props) this.props.onChange({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    let cursorPosition = this.getCursorPosition(data.error) + cursorOffset;\n    this.setState({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    this.updateTime = false;\n    if (updateCursorPosition) this.setCursorPosition(cursorPosition);\n  }\n\n  scheduledUpdate() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    const {\n      updateTime\n    } = this;\n    if (updateTime === false) return;\n    if (updateTime > new Date().getTime()) return;\n    this.update();\n  }\n\n  setUpdateTime() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    this.updateTime = new Date().getTime() + this.waitAfterKeyPress;\n  }\n\n  stopEvent(event) {\n    if (!event) return;\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  onKeyPress(event) {\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n    if (this.props.viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n    if (!ctrlOrMetaIsPressed) this.setUpdateTime();\n  }\n\n  onKeyDown(event) {\n    const viewOnly = !!this.props.viewOnly;\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n\n    switch (event.key) {\n      case 'Tab':\n        this.stopEvent(event);\n        if (viewOnly) break;\n        document.execCommand(\"insertText\", false, \"  \");\n        this.setUpdateTime();\n        break;\n\n      case 'Backspace':\n      case 'Delete':\n        if (viewOnly) this.stopEvent(event);\n        this.setUpdateTime();\n        break;\n\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'ArrowUp':\n      case 'ArrowDown':\n        this.setUpdateTime();\n        break;\n\n      case 'a':\n      case 'c':\n        if (viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n        break;\n\n      default:\n        if (viewOnly) this.stopEvent(event);\n        break;\n    }\n  }\n\n  onPaste(event) {\n    if (this.props.viewOnly) {\n      this.stopEvent(event);\n    } else {\n      event.preventDefault();\n      var text = event.clipboardData.getData('text/plain');\n      document.execCommand('insertText', false, text);\n    }\n\n    this.update();\n  }\n\n  onClick() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n  }\n\n  onBlur() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onBlur' in this.props) this.props.onBlur({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  onScroll(event) {\n    this.refLabels.scrollTop = event.target.scrollTop;\n  }\n\n  componentDidUpdate() {\n    this.updateInternalProps();\n    this.showPlaceholder();\n  }\n\n  componentDidMount() {\n    this.showPlaceholder();\n  }\n\n  componentWillUnmount() {\n    if (this.timer) clearInterval(this.timer);\n  }\n\n  showPlaceholder() {\n    const placeholderDoesNotExist = !('placeholder' in this.props);\n    if (placeholderDoesNotExist) return;\n    const {\n      placeholder\n    } = this.props;\n    const placeholderHasEmptyValues = [undefined, null].indexOf(placeholder) > -1;\n    if (placeholderHasEmptyValues) return;\n    const {\n      prevPlaceholder,\n      jsObject\n    } = this.state;\n    const {\n      resetConfiguration\n    } = this;\n    const placeholderDataType = getType(placeholder);\n    const unexpectedDataType = ['object', 'array'].indexOf(placeholderDataType) === -1;\n    if (unexpectedDataType) err.throwError('showPlaceholder', 'placeholder', 'either an object or an array');\n    const samePlaceholderValues = identical(placeholder, prevPlaceholder); // Component will always re-render when new placeholder value is any different from previous placeholder value.\n\n    let componentShouldUpdate = !samePlaceholderValues;\n\n    if (!componentShouldUpdate) {\n      if (resetConfiguration) {\n        /**\r\n         * If 'reset' property is set true or is truthy,\r\n         * any difference between placeholder and current value\r\n         * should trigger component re-render\r\n         */\n        if (jsObject !== undefined) componentShouldUpdate = !identical(placeholder, jsObject);\n      }\n    }\n\n    if (!componentShouldUpdate) return;\n    const data = this.tokenize(placeholder);\n    this.setState({\n      prevPlaceholder: placeholder,\n      plainText: data.indentation,\n      markupText: data.markup,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  tokenize(something) {\n    if (typeof something !== 'object') return console.error('tokenize() expects object type properties only. Got \\'' + typeof something + '\\' type instead.');\n    const locale = this.props.locale || defaultLocale;\n    const newSpan = this.newSpan;\n    /**\r\n     *     DOM NODE || ONBLUR OR UPDATE\r\n     */\n\n    if ('nodeType' in something) {\n      const containerNode = something.cloneNode(true),\n            hasChildren = containerNode.hasChildNodes();\n      if (!hasChildren) return '';\n      const children = containerNode.childNodes;\n      let buffer = {\n        tokens_unknown: [],\n        tokens_proto: [],\n        tokens_split: [],\n        tokens_fallback: [],\n        tokens_normalize: [],\n        tokens_merge: [],\n        tokens_plainText: '',\n        indented: '',\n        json: '',\n        jsObject: undefined,\n        markup: ''\n      };\n\n      for (var i = 0; i < children.length; i++) {\n        let child = children[i];\n        let info = {};\n\n        switch (child.nodeName) {\n          case 'SPAN':\n            info = {\n              string: child.textContent,\n              type: child.attributes.type.textContent\n            };\n            buffer.tokens_unknown.push(info);\n            break;\n\n          case 'DIV':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          case 'BR':\n            if (child.textContent === '') buffer.tokens_unknown.push({\n              string: '\\n',\n              type: 'unknown'\n            });\n            break;\n\n          case '#text':\n            buffer.tokens_unknown.push({\n              string: child.wholeText,\n              type: 'unknown'\n            });\n            break;\n\n          case 'FONT':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          default:\n            console.error('Unrecognized node:', {\n              child\n            });\n            break;\n        }\n      }\n\n      function quarkize(text) {\n        let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n        let buffer = {\n          active: false,\n          string: '',\n          number: '',\n          symbol: '',\n          space: '',\n          delimiter: '',\n          quarks: []\n        };\n\n        function pushAndStore(char, type) {\n          switch (type) {\n            case 'symbol':\n            case 'delimiter':\n              if (buffer.active) buffer.quarks.push({\n                string: buffer[buffer.active],\n                type: prefix + '-' + buffer.active\n              });\n              buffer[buffer.active] = '';\n              buffer.active = type;\n              buffer[buffer.active] = char;\n              break;\n\n            default:\n              if (type !== buffer.active || [buffer.string, char].indexOf('\\n') > -1) {\n                if (buffer.active) buffer.quarks.push({\n                  string: buffer[buffer.active],\n                  type: prefix + '-' + buffer.active\n                });\n                buffer[buffer.active] = '';\n                buffer.active = type;\n                buffer[buffer.active] = char;\n              } else buffer[type] += char;\n\n              break;\n          }\n        }\n\n        function finalPush() {\n          if (buffer.active) {\n            buffer.quarks.push({\n              string: buffer[buffer.active],\n              type: prefix + '-' + buffer.active\n            });\n            buffer[buffer.active] = '';\n            buffer.active = false;\n          }\n        }\n\n        for (var i = 0; i < text.length; i++) {\n          const char = text.charAt(i);\n\n          switch (char) {\n            case '\"':\n            case \"'\":\n              pushAndStore(char, 'delimiter');\n              break;\n\n            case ' ':\n            case '\\u00A0':\n              pushAndStore(char, 'space');\n              break;\n\n            case '{':\n            case '}':\n            case '[':\n            case ']':\n            case ':':\n            case ',':\n              pushAndStore(char, 'symbol');\n              break;\n\n            case '0':\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              if (buffer.active === 'string') pushAndStore(char, 'string');else pushAndStore(char, 'number');\n              break;\n\n            case '-':\n              if (i < text.length - 1) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            case '.':\n              if (i < text.length - 1 && i > 0) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1 && '0123456789'.indexOf(text.charAt(i - 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            default:\n              pushAndStore(char, 'string');\n              break;\n          }\n        }\n\n        finalPush();\n        return buffer.quarks;\n      }\n\n      for (var i = 0; i < buffer.tokens_unknown.length; i++) {\n        let token = buffer.tokens_unknown[i];\n        buffer.tokens_proto = buffer.tokens_proto.concat(quarkize(token.string, 'proto'));\n      }\n\n      function validToken(string, type) {\n        const quotes = '\\'\"';\n        let firstChar = '',\n            lastChar = '',\n            quoteType = false;\n\n        switch (type) {\n          case 'primitive':\n            if (['true', 'false', 'null', 'undefined'].indexOf(string) === -1) return false;\n            break;\n\n          case 'string':\n            if (string.length < 2) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n            if (quoteType === -1) return false;\n            if (firstChar !== lastChar) return false;\n\n            for (var i = 0; i < string.length; i++) {\n              if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n            }\n\n            break;\n\n          case 'key':\n            if (string.length === 0) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n\n            if (quoteType > -1) {\n              if (string.length === 1) return false;\n              if (firstChar !== lastChar) return false;\n\n              for (var i = 0; i < string.length; i++) {\n                if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n              }\n            } else {\n              const nonAlphanumeric = '\\'\"`.,:;{}[]&<>=~*%\\\\|/-+!?@^ \\xa0';\n\n              for (var i = 0; i < nonAlphanumeric.length; i++) {\n                const nonAlpha = nonAlphanumeric.charAt(i);\n                if (string.indexOf(nonAlpha) > -1) return false;\n              }\n            }\n\n            break;\n\n          case 'number':\n            for (var i = 0; i < string.length; i++) {\n              if ('0123456789'.indexOf(string.charAt(i)) === -1) if (i === 0) {\n                if ('-' !== string.charAt(0)) return false;\n              } else if ('.' !== string.charAt(i)) return false;\n            }\n\n            break;\n\n          case 'symbol':\n            if (string.length > 1) return false;\n            if ('{[:]},'.indexOf(string) === -1) return false;\n            break;\n\n          case 'colon':\n            if (string.length > 1) return false;\n            if (':' !== string) return false;\n            break;\n\n          default:\n            return true;\n            break;\n        }\n\n        return true;\n      }\n\n      for (var i = 0; i < buffer.tokens_proto.length; i++) {\n        let token = buffer.tokens_proto[i];\n\n        if (token.type.indexOf('proto') === -1) {\n          if (!validToken(token.string, token.type)) {\n            buffer.tokens_split = buffer.tokens_split.concat(quarkize(token.string, 'split'));\n          } else buffer.tokens_split.push(token);\n        } else buffer.tokens_split.push(token);\n      }\n\n      for (var i = 0; i < buffer.tokens_split.length; i++) {\n        let token = buffer.tokens_split[i];\n        let type = token.type,\n            string = token.string,\n            length = string.length,\n            fallback = [];\n\n        if (type.indexOf('-') > -1) {\n          type = type.slice(type.indexOf('-') + 1);\n          if (type !== 'string') fallback.push('string');\n          fallback.push('key');\n          fallback.push('error');\n        }\n\n        let tokul = {\n          string: string,\n          length: length,\n          type: type,\n          fallback: fallback\n        };\n        buffer.tokens_fallback.push(tokul);\n      }\n\n      function tokenFollowed() {\n        const last = buffer.tokens_normalize.length - 1;\n        if (last < 1) return false;\n\n        for (var i = last; i >= 0; i--) {\n          const previousToken = buffer.tokens_normalize[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      for (var i = 0; i < buffer.tokens_fallback.length; i++) {\n        let token = buffer.tokens_fallback[i];\n        const type = token.type,\n              string = token.string;\n        let normalToken = {\n          type: type,\n          string: string\n        };\n\n        switch (type) {\n          case 'symbol':\n          case 'colon':\n            if (buffer2.stringOpen) {\n              if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n            }\n\n            switch (string) {\n              case '[':\n              case '{':\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ']':\n              case '}':\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ',':\n                if (tokenFollowed().type === 'colon') break;\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ':':\n                normalToken.type = 'colon';\n                buffer2.isValue = true;\n                break;\n            }\n\n            break;\n\n          case 'delimiter':\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n\n            if (!buffer2.stringOpen) {\n              buffer2.stringOpen = string;\n              break;\n            }\n\n            if (i > 0) {\n              const previousToken = buffer.tokens_fallback[i - 1],\n                    _string = previousToken.string,\n                    _type = previousToken.type,\n                    _char = _string.charAt(_string.length - 1);\n\n              if (_type === 'string' && _char === '\\\\') break;\n            }\n\n            if (buffer2.stringOpen === string) {\n              buffer2.stringOpen = false;\n              break;\n            }\n\n            break;\n\n          case 'primitive':\n          case 'string':\n            if (['false', 'true', 'null', 'undefined'].indexOf(string) > -1) {\n              const lastIndex = buffer.tokens_normalize.length - 1;\n\n              if (lastIndex >= 0) {\n                if (buffer.tokens_normalize[lastIndex].type !== 'string') {\n                  normalToken.type = 'primitive';\n                  break;\n                }\n\n                normalToken.type = 'string';\n                break;\n              }\n\n              normalToken.type = 'primitive';\n              break;\n            }\n\n            if (string === '\\n') if (!buffer2.stringOpen) {\n              normalToken.type = 'linebreak';\n              break;\n            }\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'space':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'number':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          default:\n            break;\n        }\n\n        buffer.tokens_normalize.push(normalToken);\n      }\n\n      for (var i = 0; i < buffer.tokens_normalize.length; i++) {\n        const token = buffer.tokens_normalize[i];\n        let mergedToken = {\n          string: token.string,\n          type: token.type,\n          tokens: [i]\n        };\n        if (['symbol', 'colon'].indexOf(token.type) === -1) if (i + 1 < buffer.tokens_normalize.length) {\n          let count = 0;\n\n          for (var u = i + 1; u < buffer.tokens_normalize.length; u++) {\n            const nextToken = buffer.tokens_normalize[u];\n            if (token.type !== nextToken.type) break;\n            mergedToken.string += nextToken.string;\n            mergedToken.tokens.push(u);\n            count++;\n          }\n\n          i += count;\n        }\n        buffer.tokens_merge.push(mergedToken);\n      }\n\n      const quotes = '\\'\"',\n            alphanumeric = 'abcdefghijklmnopqrstuvwxyz' + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + '0123456789' + '_$';\n      var error = false,\n          line = buffer.tokens_merge.length > 0 ? 1 : 0;\n      buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      function setError(tokenID, reason) {\n        let offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n        error = {\n          token: tokenID,\n          line: line,\n          reason: reason\n        };\n        buffer.tokens_merge[tokenID + offset].type = 'error';\n      }\n\n      function followedBySymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === buffer.tokens_merge.length - 1) return false;\n\n        for (var i = tokenID + 1; i < buffer.tokens_merge.length; i++) {\n          const nextToken = buffer.tokens_merge[i];\n\n          switch (nextToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(nextToken.string) > -1) return i;else return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function followsSymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(previousToken.string) > -1) return true;\n              return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function typeFollowed(tokenID) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken.type;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let bracketList = [];\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        if (error) break;\n        let token = buffer.tokens_merge[i],\n            string = token.string,\n            type = token.type,\n            found = false;\n\n        switch (type) {\n          case 'space':\n            break;\n\n          case 'linebreak':\n            line++;\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '{':\n              case '[':\n                found = followsSymbol(i, ['}', ']']);\n\n                if (found) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: buffer.tokens_merge[found].string,\n                    secondToken: string\n                  }));\n                  break;\n                }\n\n                if (string === '[' && i > 0) if (!followsSymbol(i, [':', '[', ','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                    firstToken: \"[\",\n                    secondToken: [\":\", \"[\", \",\"]\n                  }));\n                  break;\n                }\n                if (string === '{') if (followsSymbol(i, ['{'])) {\n                  setError(i, format(locale.invalidToken.double, {\n                    token: \"{\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case '}':\n              case ']':\n                if (string === '}') if (buffer2.brackets[buffer2.brackets.length - 1] !== '{') {\n                  setError(i, format(locale.brace.curly.missingOpen));\n                  break;\n                }\n                if (string === '}') if (followsSymbol(i, [','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \",\",\n                    secondToken: \"}\"\n                  }));\n                  break;\n                }\n                if (string === ']') if (buffer2.brackets[buffer2.brackets.length - 1] !== '[') {\n                  setError(i, format(locale.brace.square.missingOpen));\n                  break;\n                }\n                if (string === ']') if (followsSymbol(i, [':'])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \":\",\n                    secondToken: \"]\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case ',':\n                found = followsSymbol(i, ['{']);\n\n                if (found) {\n                  if (followedBySymbol(i, ['}'])) {\n                    setError(i, format(locale.brace.curly.cannotWrap, {\n                      token: \",\"\n                    }));\n                    break;\n                  }\n\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \"{\",\n                    secondToken: \",\"\n                  }));\n                  break;\n                }\n\n                if (followedBySymbol(i, ['}', ',', ']'])) {\n                  setError(i, format(locale.noTrailingOrLeadingComma));\n                  break;\n                }\n\n                found = typeFollowed(i);\n\n                switch (found) {\n                  case 'key':\n                  case 'colon':\n                    setError(i, format(locale.invalidToken.termSequence.prohibited, {\n                      firstTerm: found === 'key' ? locale.types.key : locale.symbols.colon,\n                      secondTerm: locale.symbols.comma\n                    }));\n                    break;\n\n                  case 'symbol':\n                    if (followsSymbol(i, ['{'])) {\n                      setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                        firstToken: \"{\",\n                        secondToken: \",\"\n                      }));\n                      break;\n                    }\n\n                    break;\n\n                  default:\n                    break;\n                }\n\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              default:\n                break;\n            }\n\n            buffer.json += string;\n            break;\n\n          case 'colon':\n            found = followsSymbol(i, ['[']);\n\n            if (found && followedBySymbol(i, [']'])) {\n              setError(i, format(locale.brace.square.cannotWrap, {\n                token: \":\"\n              }));\n              break;\n            }\n\n            if (found) {\n              setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                firstToken: \"[\",\n                secondToken: \":\"\n              }));\n              break;\n            }\n\n            if (typeFollowed(i) !== 'key') {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.key\n              }));\n              break;\n            }\n\n            if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.value\n              }));\n              break;\n            }\n\n            buffer2.isValue = true;\n            buffer.json += string;\n            break;\n\n          case 'key':\n          case 'string':\n            let firstChar = string.charAt(0),\n                lastChar = string.charAt(string.length - 1),\n                quote_primary = quotes.indexOf(firstChar);\n            if (quotes.indexOf(firstChar) === -1) if (quotes.indexOf(lastChar) !== -1) {\n              setError(i, format(locale.string.missingOpen, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(lastChar) === -1) if (quotes.indexOf(firstChar) !== -1) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(firstChar) > -1) if (firstChar !== lastChar) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if ('string' === type) if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) {\n              setError(i, format(locale.string.mustBeWrappedByQuotes));\n              break;\n            }\n            if ('key' === type) if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.types.key,\n                secondTerm: locale.symbols.colon\n              }));\n            }\n            if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) for (var h = 0; h < string.length; h++) {\n              if (error) break;\n              const c = string.charAt(h);\n\n              if (alphanumeric.indexOf(c) === -1) {\n                setError(i, format(locale.string.nonAlphanumeric, {\n                  token: c\n                }));\n                break;\n              }\n            }\n            if (firstChar === \"'\") string = '\"' + string.slice(1, -1) + '\"';else if (firstChar !== '\"') string = '\"' + string + '\"';\n            if ('key' === type) if ('key' === typeFollowed(i)) {\n              if (i > 0) if (!isNaN(buffer.tokens_merge[i - 1])) {\n                buffer.tokens_merge[i - 1] += buffer.tokens_merge[i];\n                setError(i, format(locale.key.numberAndLetterMissingQuotes));\n                break;\n              }\n              setError(i, format(locale.key.spaceMissingQuotes));\n              break;\n            }\n            if ('key' === type) if (!followsSymbol(i, ['{', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"{\", \",\"]\n              }));\n              break;\n            }\n            if ('string' === type) if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n            if ('key' === type) if (buffer2.isValue) {\n              setError(i, format(locale.string.unexpectedKey));\n              break;\n            }\n            if ('string' === type) if (!buffer2.isValue) {\n              setError(i, format(locale.key.unexpectedString));\n              break;\n            }\n            buffer.json += string;\n            break;\n\n          case 'number':\n          case 'primitive':\n            if (followsSymbol(i, ['{'])) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            } else if (typeFollowed(i) === 'key') {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n            } else if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n\n            if (type !== 'key') if (!buffer2.isValue) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            }\n            if (type === 'primitive') if (string === 'undefined') setError(i, format(locale.invalidToken.useInstead, {\n              badToken: \"undefined\",\n              goodToken: \"null\"\n            }));\n            buffer.json += string;\n            break;\n        }\n      }\n\n      let noEscapedSingleQuote = '';\n\n      for (var i = 0; i < buffer.json.length; i++) {\n        let current = buffer.json.charAt(i),\n            next = '';\n\n        if (i + 1 < buffer.json.length) {\n          next = buffer.json.charAt(i + 1);\n\n          if (current === '\\\\' && next === \"'\") {\n            noEscapedSingleQuote += next;\n            i++;\n            continue;\n          }\n        }\n\n        noEscapedSingleQuote += current;\n      }\n\n      buffer.json = noEscapedSingleQuote;\n\n      if (!error) {\n        const maxIterations = Math.ceil(bracketList.length / 2);\n        let round = 0,\n            delta = false;\n\n        function removePair(index) {\n          bracketList.splice(index + 1, 1);\n          bracketList.splice(index, 1);\n          if (!delta) delta = true;\n        }\n\n        while (bracketList.length > 0) {\n          delta = false;\n\n          for (var tokenCount = 0; tokenCount < bracketList.length - 1; tokenCount++) {\n            const pair = bracketList[tokenCount].string + bracketList[tokenCount + 1].string;\n            if (['[]', '{}'].indexOf(pair) > -1) removePair(tokenCount);\n          }\n\n          round++;\n          if (!delta) break;\n          if (round >= maxIterations) break;\n        }\n\n        if (bracketList.length > 0) {\n          const _tokenString = bracketList[0].string,\n                _tokenPosition = bracketList[0].i,\n                _closingBracketType = _tokenString === '[' ? ']' : '}';\n\n          line = bracketList[0].line;\n          setError(_tokenPosition, format(locale.brace[_closingBracketType === ']' ? 'square' : 'curly'].missingClose));\n        }\n      }\n\n      if (!error) if ([undefined, ''].indexOf(buffer.json) === -1) try {\n        buffer.jsObject = JSON.parse(buffer.json);\n      } catch (err) {\n        const errorMessage = err.message,\n              subsMark = errorMessage.indexOf('position');\n        if (subsMark === -1) throw new Error('Error parsing failed');\n        const errPositionStr = errorMessage.substring(subsMark + 9, errorMessage.length),\n              errPosition = parseInt(errPositionStr);\n        let charTotal = 0,\n            tokenIndex = 0,\n            token = false,\n            _line = 1,\n            exitWhile = false;\n\n        while (charTotal < errPosition && !exitWhile) {\n          token = buffer.tokens_merge[tokenIndex];\n          if ('linebreak' === token.type) _line++;\n          if (['space', 'linebreak'].indexOf(token.type) === -1) charTotal += token.string.length;\n          if (charTotal >= errPosition) break;\n          tokenIndex++;\n          if (!buffer.tokens_merge[tokenIndex + 1]) exitWhile = true;\n        }\n\n        line = _line;\n        let backslashCount = 0;\n\n        for (let i = 0; i < token.string.length; i++) {\n          const char = token.string.charAt(i);\n          if (char === '\\\\') backslashCount = backslashCount > 0 ? backslashCount + 1 : 1;else {\n            if (backslashCount % 2 !== 0 || backslashCount === 0) if ('\\'\"bfnrt'.indexOf(char) === -1) {\n              setError(tokenIndex, format(locale.invalidToken.unexpected, {\n                token: '\\\\'\n              }));\n            }\n            backslashCount = 0;\n          }\n        }\n\n        if (!error) setError(tokenIndex, format(locale.invalidToken.unexpected, {\n          token: token.string\n        }));\n      }\n      let _line = 1,\n          _depth = 0;\n\n      function newIndent() {\n        var space = [];\n\n        for (var i = 0; i < _depth * 2; i++) space.push('&nbsp;');\n\n        return space.join('');\n      }\n\n      function newLineBreak() {\n        let byPass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        _line++;\n\n        if (_depth > 0 || byPass) {\n          return '<br>';\n        }\n\n        return '';\n      }\n\n      function newLineBreakAndIndent() {\n        let byPass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n        return newLineBreak(byPass) + newIndent();\n      }\n\n      ;\n      if (!error) for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        const token = buffer.tokens_merge[i],\n              string = token.string,\n              type = token.type;\n\n        switch (type) {\n          case 'space':\n          case 'linebreak':\n            break;\n\n          case 'string':\n          case 'number':\n          case 'primitive':\n          case 'error':\n            buffer.markup += (followsSymbol(i, [',', '[']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n            break;\n\n          case 'key':\n            buffer.markup += newLineBreakAndIndent() + newSpan(i, token, _depth);\n            break;\n\n          case 'colon':\n            buffer.markup += newSpan(i, token, _depth) + '&nbsp;';\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '[':\n              case '{':\n                buffer.markup += (!followsSymbol(i, [':']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n                _depth++;\n                break;\n\n              case ']':\n              case '}':\n                _depth--;\n\n                const islastToken = i === buffer.tokens_merge.length - 1,\n                      _adjustment = i > 0 ? ['[', '{'].indexOf(buffer.tokens_merge[i - 1].string) > -1 ? '' : newLineBreakAndIndent(islastToken) : '';\n\n                buffer.markup += _adjustment + newSpan(i, token, _depth);\n                break;\n\n              case ',':\n                buffer.markup += newSpan(i, token, _depth);\n                break;\n            }\n\n            break;\n        }\n      }\n\n      if (error) {\n        let _line_fallback = 1;\n\n        function countCarrigeReturn(string) {\n          let count = 0;\n\n          for (var i = 0; i < string.length; i++) {\n            if (['\\n', '\\r'].indexOf(string[i]) > -1) count++;\n          }\n\n          return count;\n        }\n\n        _line = 1;\n\n        for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          const token = buffer.tokens_merge[i],\n                type = token.type,\n                string = token.string;\n          if (type === 'linebreak') _line++;\n          buffer.markup += newSpan(i, token, _depth);\n          _line_fallback += countCarrigeReturn(string);\n        }\n\n        _line++;\n        _line_fallback++;\n        if (_line < _line_fallback) _line = _line_fallback;\n      }\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        let token = buffer.tokens_merge[i];\n        buffer.indented += token.string;\n        if (['space', 'linebreak'].indexOf(token.type) === -1) buffer.tokens_plainText += token.string;\n      }\n\n      if (error) {\n        function isFunction(functionToCheck) {\n          return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n        }\n\n        if ('modifyErrorText' in this.props) if (isFunction(this.props.modifyErrorText)) error.reason = this.props.modifyErrorText(error.reason);\n      }\n\n      return {\n        tokens: buffer.tokens_merge,\n        noSpaces: buffer.tokens_plainText,\n        indented: buffer.indented,\n        json: buffer.json,\n        jsObject: buffer.jsObject,\n        markup: buffer.markup,\n        lines: _line,\n        error: error\n      };\n    }\n\n    ;\n    /**\r\n     *     JS OBJECTS || PLACEHOLDER\r\n     */\n\n    if (!('nodeType' in something)) {\n      let buffer = {\n        inputText: JSON.stringify(something),\n        position: 0,\n        currentChar: '',\n        tokenPrimary: '',\n        tokenSecondary: '',\n        brackets: [],\n        isValue: false,\n        stringOpen: false,\n        stringStart: 0,\n        tokens: []\n      };\n\n      function escape_character() {\n        if (buffer.currentChar !== '\\\\') return false;\n        return true;\n      }\n\n      function extract(string, position) {\n        return string.slice(0, position) + string.slice(position + 1);\n      }\n\n      function determine_string() {\n        if ('\\'\"'.indexOf(buffer.currentChar) === -1) return false;\n\n        if (!buffer.stringOpen) {\n          add_tokenSecondary();\n          buffer.stringStart = buffer.position;\n          buffer.stringOpen = buffer.currentChar;\n          return true;\n        }\n\n        if (buffer.stringOpen === buffer.currentChar) {\n          add_tokenSecondary();\n          const stringToken = buffer.inputText.substring(buffer.stringStart, buffer.position + 1);\n          add_tokenPrimary(stringToken);\n          buffer.stringOpen = false;\n          return true;\n        }\n\n        return false;\n      }\n\n      function determine_value() {\n        if (':,{}[]'.indexOf(buffer.currentChar) === -1) return false;\n        if (buffer.stringOpen) return false;\n        add_tokenSecondary();\n        add_tokenPrimary(buffer.currentChar);\n\n        switch (buffer.currentChar) {\n          case ':':\n            buffer.isValue = true;\n            return true;\n            break;\n\n          case '{':\n          case '[':\n            buffer.brackets.push(buffer.currentChar);\n            break;\n\n          case '}':\n          case ']':\n            buffer.brackets.pop();\n            break;\n        }\n\n        if (buffer.currentChar !== ':') buffer.isValue = buffer.brackets[buffer.brackets.length - 1] === '[';\n        return true;\n      }\n\n      function add_tokenSecondary() {\n        if (buffer.tokenSecondary.length === 0) return false;\n        buffer.tokens.push(buffer.tokenSecondary);\n        buffer.tokenSecondary = '';\n        return true;\n      }\n\n      function add_tokenPrimary(value) {\n        if (value.length === 0) return false;\n        buffer.tokens.push(value);\n        return true;\n      }\n\n      for (var i = 0; i < buffer.inputText.length; i++) {\n        buffer.position = i;\n        buffer.currentChar = buffer.inputText.charAt(buffer.position);\n        const a = determine_value(),\n              b = determine_string(),\n              c = escape_character();\n        if (!a && !b && !c) if (!buffer.stringOpen) buffer.tokenSecondary += buffer.currentChar;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        isValue: false,\n        tokens: []\n      };\n      buffer2.tokens = buffer.tokens.map(token => {\n        let type = '',\n            string = '',\n            value = '';\n\n        switch (token) {\n          case ',':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case ':':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = true;\n            break;\n\n          case '{':\n          case '[':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.push(token);\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case '}':\n          case ']':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.pop();\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case 'undefined':\n            type = 'primitive';\n            string = token;\n            value = undefined;\n            break;\n\n          case 'null':\n            type = 'primitive';\n            string = token;\n            value = null;\n            break;\n\n          case 'false':\n            type = 'primitive';\n            string = token;\n            value = false;\n            break;\n\n          case 'true':\n            type = 'primitive';\n            string = token;\n            value = true;\n            break;\n\n          default:\n            const C = token.charAt(0);\n\n            function stripQuotesFromKey(text) {\n              if (text.length === 0) return text;\n              if (['\"\"', \"''\"].indexOf(text) > -1) return \"''\";\n              let wrappedInQuotes = false;\n\n              for (var i = 0; i < 2; i++) {\n                if ([text.charAt(0), text.charAt(text.length - 1)].indexOf(['\"', \"'\"][i]) > -1) {\n                  wrappedInQuotes = true;\n                  break;\n                }\n              }\n\n              if (wrappedInQuotes && text.length >= 2) text = text.slice(1, -1);\n\n              const nonAlphaNumeric = text.replace(/\\w/g, ''),\n                    alphaNumeric = text.replace(/\\W+/g, ''),\n                    mayRemoveQuotes = ((nonAlphaNumeric, text) => {\n                let numberAndLetter = false;\n\n                for (var i = 0; i < text.length; i++) {\n                  if (i === 0) if (isNaN(text.charAt(i))) break;\n\n                  if (isNaN(text.charAt(i))) {\n                    numberAndLetter = true;\n                    break;\n                  }\n                }\n\n                return !(nonAlphaNumeric.length > 0 || numberAndLetter);\n              })(nonAlphaNumeric, text),\n                    hasQuotes = (string => {\n                for (var i = 0; i < string.length; i++) {\n                  if ([\"'\", '\"'].indexOf(string.charAt(i)) > -1) return true;\n                }\n\n                return false;\n              })(nonAlphaNumeric);\n\n              if (hasQuotes) {\n                let newText = '';\n                const charList = text.split('');\n\n                for (var ii = 0; ii < charList.length; ii++) {\n                  let char = charList[ii];\n                  if ([\"'\", '\"'].indexOf(char) > -1) char = '\\\\' + char;\n                  newText += char;\n                }\n\n                text = newText;\n              }\n\n              if (!mayRemoveQuotes) return \"'\" + text + \"'\";else return text;\n            }\n\n            if ('\\'\"'.indexOf(C) > -1) {\n              if (buffer2.isValue) type = 'string';else type = 'key';\n              if (type === 'key') string = stripQuotesFromKey(token);\n\n              if (type === 'string') {\n                string = '';\n                const charList2 = token.slice(1, -1).split('');\n\n                for (var ii = 0; ii < charList2.length; ii++) {\n                  let char = charList2[ii];\n                  if ('\\'\\\"'.indexOf(char) > -1) char = '\\\\' + char;\n                  string += char;\n                }\n\n                string = \"'\" + string + \"'\";\n              }\n\n              value = string;\n              break;\n            }\n\n            if (!isNaN(token)) {\n              type = 'number';\n              string = token;\n              value = Number(token);\n              break;\n            }\n\n            if (token.length > 0) if (!buffer2.isValue) {\n              type = 'key';\n              string = token;\n              if (string.indexOf(' ') > -1) string = \"'\" + string + \"'\";\n              value = string;\n              break;\n            }\n        }\n\n        return {\n          type: type,\n          string: string,\n          value: value,\n          depth: buffer2.brackets.length\n        };\n      });\n      let clean = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        clean += token.string;\n      }\n\n      function indent(number) {\n        var space = [];\n\n        for (var i = 0; i < number * 2; i++) space.push(' ');\n\n        return (number > 0 ? '\\n' : '') + space.join('');\n      }\n\n      ;\n      let indentation = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n\n        switch (token.string) {\n          case '[':\n          case '{':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) indentation += token.string + indent(token.depth);else indentation += token.string;\n            break;\n\n          case ']':\n          case '}':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) indentation += indent(token.depth) + token.string;else indentation += token.string;\n            break;\n\n          case ':':\n            indentation += token.string + ' ';\n            break;\n\n          case ',':\n            indentation += token.string + indent(token.depth);\n            break;\n\n          default:\n            indentation += token.string;\n            break;\n        }\n      }\n\n      let lines = 1;\n\n      function indentII(number) {\n        var space = [];\n        if (number > 0) lines++;\n\n        for (var i = 0; i < number * 2; i++) space.push('&nbsp;');\n\n        return (number > 0 ? '<br>' : '') + space.join('');\n      }\n\n      ;\n      let markup = '';\n      const lastIndex = buffer2.tokens.length - 1;\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        let span = newSpan(i, token, token.depth);\n\n        switch (token.string) {\n          case '{':\n          case '[':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) markup += span + indentII(token.depth);else markup += span;\n            break;\n\n          case '}':\n          case ']':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) markup += indentII(token.depth) + (lastIndex === i ? '<br>' : '') + span;else markup += span;\n            break;\n\n          case ':':\n            markup += span + ' ';\n            break;\n\n          case ',':\n            markup += span + indentII(token.depth);\n            break;\n\n          default:\n            markup += span;\n            break;\n        }\n      }\n\n      lines += 2;\n      return {\n        tokens: buffer2.tokens,\n        noSpaces: clean,\n        indented: indentation,\n        json: JSON.stringify(something),\n        jsObject: something,\n        markup: markup,\n        lines: lines\n      };\n    }\n  }\n\n}\n\nexport default JSONInput;","map":{"version":3,"names":["_objectSpread","React","Component","themes","identical","getType","err","format","defaultLocale","JSONInput","constructor","props","updateInternalProps","bind","createMarkup","onClick","onBlur","update","getCursorPosition","setCursorPosition","scheduledUpdate","setUpdateTime","renderLabels","newSpan","renderErrorMessage","onScroll","showPlaceholder","tokenize","onKeyPress","onKeyDown","onPaste","stopEvent","refContent","refLabels","renderCount","state","prevPlaceholder","markupText","plainText","json","jsObject","undefined","lines","error","locale","console","warn","colors","style","theme","dark_vscode_tribute","default","string","number","colon","keys","keys_whiteSpace","primitive","background","background_warning","outerBox","container","warningBox","errorMessage","body","labelColumn","labels","contentBox","confirmGood","totalHeight","height","totalWidth","width","onKeyPressUpdate","timer","setInterval","clearInterval","updateTime","waitAfterKeyPress","resetConfiguration","reset","render","id","hasError","createElement","name","display","overflow","margin","boxSizing","position","opacity","top","right","transform","pointerEvents","transitionDuration","transitionTimingFunction","viewBox","fillRule","clipRule","fill","d","fontFamily","backgroundColor","verticalAlign","left","resize","fontSize","ref","padding","color","contentEditable","flex","overflowX","overflowY","wordWrap","whiteSpace","outline","dangerouslySetInnerHTML","autoComplete","autoCorrect","autoCapitalize","spellCheck","paddingRight","overflowWrap","flexDirection","justifyContent","errorLine","line","Array","i","map","key","__html","token","depth","type","length","replace","countBR","isChildOf","node","parentNode","selection","window","getSelection","charCount","linebreakCount","focusNode","focusOffset","previousSibling","nodeName","textContent","nextPosition","indexOf","createRange","chars","range","document","selectNode","setStart","count","setEnd","nodeType","Node","TEXT_NODE","lp","childNodes","setPosition","collapse","removeAllRanges","addRange","focus","cursorOffset","updateCursorPosition","data","onChange","indented","markup","cursorPosition","setState","Date","getTime","event","preventDefault","stopPropagation","ctrlOrMetaIsPressed","ctrlKey","metaKey","viewOnly","execCommand","text","clipboardData","getData","scrollTop","target","componentDidUpdate","componentDidMount","componentWillUnmount","placeholderDoesNotExist","placeholder","placeholderHasEmptyValues","placeholderDataType","unexpectedDataType","throwError","samePlaceholderValues","componentShouldUpdate","indentation","something","containerNode","cloneNode","hasChildren","hasChildNodes","children","buffer","tokens_unknown","tokens_proto","tokens_split","tokens_fallback","tokens_normalize","tokens_merge","tokens_plainText","child","info","attributes","push","wholeText","quarkize","prefix","active","symbol","space","delimiter","quarks","pushAndStore","char","finalPush","charAt","concat","validToken","quotes","firstChar","lastChar","quoteType","nonAlphanumeric","nonAlpha","fallback","slice","tokul","tokenFollowed","last","previousToken","buffer2","brackets","stringOpen","isValue","normalToken","pop","_string","_type","_char","lastIndex","mergedToken","tokens","u","nextToken","alphanumeric","setError","tokenID","reason","offset","followedBySymbol","options","followsSymbol","typeFollowed","bracketList","found","invalidToken","tokenSequence","prohibited","firstToken","secondToken","permitted","double","brace","curly","missingOpen","square","cannotWrap","noTrailingOrLeadingComma","termSequence","firstTerm","types","symbols","secondTerm","comma","value","quote_primary","quote","missingClose","mustBeWrappedByQuotes","h","c","isNaN","numberAndLetterMissingQuotes","spaceMissingQuotes","unexpectedKey","unexpectedString","useInstead","badToken","goodToken","noEscapedSingleQuote","current","next","maxIterations","Math","ceil","round","delta","removePair","index","splice","tokenCount","pair","_tokenString","_tokenPosition","_closingBracketType","JSON","parse","message","subsMark","Error","errPositionStr","substring","errPosition","parseInt","charTotal","tokenIndex","_line","exitWhile","backslashCount","unexpected","_depth","newIndent","join","newLineBreak","byPass","newLineBreakAndIndent","islastToken","_adjustment","_line_fallback","countCarrigeReturn","isFunction","functionToCheck","toString","call","modifyErrorText","noSpaces","inputText","stringify","currentChar","tokenPrimary","tokenSecondary","stringStart","escape_character","extract","determine_string","add_tokenSecondary","stringToken","add_tokenPrimary","determine_value","a","b","C","stripQuotesFromKey","wrappedInQuotes","nonAlphaNumeric","alphaNumeric","mayRemoveQuotes","numberAndLetter","hasQuotes","newText","charList","split","ii","charList2","Number","clean","indent","prevToken","indentII","span"],"sources":["D:/Projects/New/api-visualizer-tool/node_modules/react-json-editor-ajrm/es/index.js"],"sourcesContent":["/** @license react-json-editor-ajrm v2.5.13\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React, { Component } from 'react';\nimport themes from './themes';\nimport { identical, getType } from './mitsuketa';\nimport err from './err';\nimport { format } from './locale';\nimport defaultLocale from './locale/en';\n\nclass JSONInput extends Component {\n  constructor(props) {\n    super(props);\n    this.updateInternalProps = this.updateInternalProps.bind(this);\n    this.createMarkup = this.createMarkup.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.update = this.update.bind(this);\n    this.getCursorPosition = this.getCursorPosition.bind(this);\n    this.setCursorPosition = this.setCursorPosition.bind(this);\n    this.scheduledUpdate = this.scheduledUpdate.bind(this);\n    this.setUpdateTime = this.setUpdateTime.bind(this);\n    this.renderLabels = this.renderLabels.bind(this);\n    this.newSpan = this.newSpan.bind(this);\n    this.renderErrorMessage = this.renderErrorMessage.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this.showPlaceholder = this.showPlaceholder.bind(this);\n    this.tokenize = this.tokenize.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onPaste = this.onPaste.bind(this);\n    this.stopEvent = this.stopEvent.bind(this);\n    this.refContent = null;\n    this.refLabels = null;\n    this.updateInternalProps();\n    this.renderCount = 1;\n    this.state = {\n      prevPlaceholder: '',\n      markupText: '',\n      plainText: '',\n      json: '',\n      jsObject: undefined,\n      lines: false,\n      error: false\n    };\n\n    if (!this.props.locale) {\n      console.warn(\"[react-json-editor-ajrm - Deprecation Warning] You did not provide a 'locale' prop for your JSON input - This will be required in a future version. English has been set as a default.\");\n    }\n  }\n\n  updateInternalProps() {\n    let colors = {},\n        style = {},\n        theme = themes.dark_vscode_tribute;\n    if ('theme' in this.props) if (typeof this.props.theme === 'string') if (this.props.theme in themes) theme = themes[this.props.theme];\n    colors = theme;\n    if ('colors' in this.props) colors = {\n      default: 'default' in this.props.colors ? this.props.colors.default : colors.default,\n      string: 'string' in this.props.colors ? this.props.colors.string : colors.string,\n      number: 'number' in this.props.colors ? this.props.colors.number : colors.number,\n      colon: 'colon' in this.props.colors ? this.props.colors.colon : colors.colon,\n      keys: 'keys' in this.props.colors ? this.props.colors.keys : colors.keys,\n      keys_whiteSpace: 'keys_whiteSpace' in this.props.colors ? this.props.colors.keys_whiteSpace : colors.keys_whiteSpace,\n      primitive: 'primitive' in this.props.colors ? this.props.colors.primitive : colors.primitive,\n      error: 'error' in this.props.colors ? this.props.colors.error : colors.error,\n      background: 'background' in this.props.colors ? this.props.colors.background : colors.background,\n      background_warning: 'background_warning' in this.props.colors ? this.props.colors.background_warning : colors.background_warning\n    };\n    this.colors = colors;\n    if ('style' in this.props) style = {\n      outerBox: 'outerBox' in this.props.style ? this.props.style.outerBox : {},\n      container: 'container' in this.props.style ? this.props.style.container : {},\n      warningBox: 'warningBox' in this.props.style ? this.props.style.warningBox : {},\n      errorMessage: 'errorMessage' in this.props.style ? this.props.style.errorMessage : {},\n      body: 'body' in this.props.style ? this.props.style.body : {},\n      labelColumn: 'labelColumn' in this.props.style ? this.props.style.labelColumn : {},\n      labels: 'labels' in this.props.style ? this.props.style.labels : {},\n      contentBox: 'contentBox' in this.props.style ? this.props.style.contentBox : {}\n    };else style = {\n      outerBox: {},\n      container: {},\n      warningBox: {},\n      errorMessage: {},\n      body: {},\n      labelColumn: {},\n      labels: {},\n      contentBox: {}\n    };\n    this.style = style;\n    this.confirmGood = 'confirmGood' in this.props ? this.props.confirmGood : true;\n    const totalHeight = this.props.height || '610px',\n          totalWidth = this.props.width || '479px';\n    this.totalHeight = totalHeight;\n    this.totalWidth = totalWidth;\n\n    if (!('onKeyPressUpdate' in this.props) || this.props.onKeyPressUpdate) {\n      if (!this.timer) this.timer = setInterval(this.scheduledUpdate, 100);\n    } else if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = false;\n    }\n\n    this.updateTime = false;\n    this.waitAfterKeyPress = 'waitAfterKeyPress' in this.props ? this.props.waitAfterKeyPress : 1000;\n    this.resetConfiguration = 'reset' in this.props ? this.props.reset : false;\n  }\n\n  render() {\n    const id = this.props.id,\n          markupText = this.state.markupText,\n          error = this.props.error || this.state.error,\n          colors = this.colors,\n          style = this.style,\n          confirmGood = this.confirmGood,\n          totalHeight = this.totalHeight,\n          totalWidth = this.totalWidth,\n          hasError = !!this.props.error || (error ? 'token' in error : false);\n    this.renderCount++;\n    return React.createElement(\"div\", {\n      name: \"outer-box\",\n      id: id && id + '-outer-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'none',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        position: 'relative'\n      }, style.outerBox)\n    }, confirmGood ? React.createElement(\"div\", {\n      style: {\n        opacity: hasError ? 0 : 1,\n        height: '30px',\n        width: '30px',\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        transform: 'translate(-25%,25%)',\n        pointerEvents: 'none',\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }\n    }, React.createElement(\"svg\", {\n      height: \"30px\",\n      width: \"30px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"green\",\n      opacity: \"0.85\",\n      d: \"M39.363,79L16,55.49l11.347-11.419L39.694,56.49L72.983,23L84,34.085L39.363,79z\"\n    }))) : void 0, React.createElement(\"div\", {\n      name: \"container\",\n      id: id && id + '-container',\n      style: _objectSpread({\n        display: 'block',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        fontFamily: 'Roboto, sans-serif'\n      }, style.container),\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      name: \"warning-box\",\n      id: id && id + '-warning-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'hidden',\n        height: hasError ? '60px' : '0px',\n        width: '100%',\n        margin: 0,\n        backgroundColor: colors.background_warning,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.warningBox),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        top: 0,\n        left: 0,\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"svg\", {\n      height: \"25px\",\n      width: \"25px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"red\",\n      d: \"M73.9,5.75c0.467-0.467,1.067-0.7,1.8-0.7c0.7,0,1.283,0.233,1.75,0.7l16.8,16.8  c0.467,0.5,0.7,1.084,0.7,1.75c0,0.733-0.233,1.334-0.7,1.801L70.35,50l23.9,23.95c0.5,0.467,0.75,1.066,0.75,1.8  c0,0.667-0.25,1.25-0.75,1.75l-16.8,16.75c-0.534,0.467-1.117,0.7-1.75,0.7s-1.233-0.233-1.8-0.7L50,70.351L26.1,94.25  c-0.567,0.467-1.167,0.7-1.8,0.7c-0.667,0-1.283-0.233-1.85-0.7L5.75,77.5C5.25,77,5,76.417,5,75.75c0-0.733,0.25-1.333,0.75-1.8  L29.65,50L5.75,26.101C5.25,25.667,5,25.066,5,24.3c0-0.666,0.25-1.25,0.75-1.75l16.8-16.8c0.467-0.467,1.05-0.7,1.75-0.7  c0.733,0,1.333,0.233,1.8,0.7L50,29.65L73.9,5.75z\"\n    }))))), React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: 'calc(100% - 60px)',\n        margin: 0,\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        position: 'absolute',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, this.renderErrorMessage())), React.createElement(\"div\", {\n      name: \"body\",\n      id: id && id + '-body',\n      style: _objectSpread({\n        display: 'flex',\n        overflow: 'none',\n        height: hasError ? 'calc(100% - 60px)' : '100%',\n        width: '',\n        margin: 0,\n        resize: 'none',\n        fontFamily: 'Roboto Mono, Monaco, monospace',\n        fontSize: '11px',\n        backgroundColor: colors.background,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.body),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      name: \"labels\",\n      id: id && id + '-labels',\n      ref: ref => this.refLabels = ref,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '44px',\n        margin: 0,\n        padding: '5px 0px 5px 10px',\n        overflow: 'hidden',\n        color: '#D4D4D4'\n      }, style.labelColumn),\n      onClick: this.onClick\n    }, this.renderLabels()), React.createElement(\"span\", {\n      id: id,\n      ref: ref => this.refContent = ref,\n      contentEditable: true,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '',\n        flex: 1,\n        margin: 0,\n        padding: '5px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        wordWrap: 'break-word',\n        whiteSpace: 'pre-line',\n        color: '#D4D4D4',\n        outline: 'none'\n      }, style.contentBox),\n      dangerouslySetInnerHTML: this.createMarkup(markupText),\n      onKeyPress: this.onKeyPress,\n      onKeyDown: this.onKeyDown,\n      onClick: this.onClick,\n      onBlur: this.onBlur,\n      onScroll: this.onScroll,\n      onPaste: this.onPaste,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      autoCapitalize: \"off\",\n      spellCheck: false\n    }))));\n  }\n\n  renderErrorMessage() {\n    const locale = this.props.locale || defaultLocale,\n          error = this.props.error || this.state.error,\n          style = this.style;\n    if (!error) return void 0;\n    return React.createElement(\"p\", {\n      style: _objectSpread({\n        color: 'red',\n        fontSize: '12px',\n        position: 'absolute',\n        width: 'calc(100% - 60px)',\n        height: '60px',\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n        paddingRight: '10px',\n        overflowWrap: 'break-word',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }, style.errorMessage)\n    }, format(locale.format, error));\n  }\n\n  renderLabels() {\n    const colors = this.colors,\n          style = this.style,\n          error = this.props.error || this.state.error,\n          errorLine = error ? error.line : -1,\n          lines = this.state.lines ? this.state.lines : 1;\n    let labels = new Array(lines);\n\n    for (var i = 0; i < lines - 1; i++) labels[i] = i + 1;\n\n    return labels.map(number => {\n      const color = number !== errorLine ? colors.default : 'red';\n      return React.createElement(\"div\", {\n        key: number,\n        style: _objectSpread({}, style.labels, {\n          color: color\n        })\n      }, number);\n    });\n  }\n\n  createMarkup(markupText) {\n    if (markupText === undefined) return {\n      __html: ''\n    };\n    return {\n      __html: '' + markupText\n    };\n  }\n\n  newSpan(i, token, depth) {\n    let colors = this.colors,\n        type = token.type,\n        string = token.string;\n    let color = '';\n\n    switch (type) {\n      case 'string':\n      case 'number':\n      case 'primitive':\n      case 'error':\n        color = colors[token.type];\n        break;\n\n      case 'key':\n        if (string === ' ') color = colors.keys_whiteSpace;else color = colors.keys;\n        break;\n\n      case 'symbol':\n        if (string === ':') color = colors.colon;else color = colors.default;\n        break;\n\n      default:\n        color = colors.default;\n        break;\n    }\n\n    if (string.length !== string.replace(/</g, '').replace(/>/g, '').length) string = '<xmp style=display:inline;>' + string + '</xmp>';\n    return '<span' + ' type=\"' + type + '\"' + ' value=\"' + string + '\"' + ' depth=\"' + depth + '\"' + ' style=\"color:' + color + '\"' + '>' + string + '</span>';\n  }\n\n  getCursorPosition(countBR) {\n    /**\r\n     * Need to deprecate countBR\r\n     * It is used to differenciate between good markup render, and aux render when error found\r\n     * Adjustments based on coundBR account for usage of <br> instead of <span> for linebreaks to determine acurate cursor position\r\n     * Find a way to consolidate render styles\r\n     */\n    const isChildOf = node => {\n      while (node !== null) {\n        if (node === this.refContent) return true;\n        node = node.parentNode;\n      }\n\n      return false;\n    };\n\n    let selection = window.getSelection(),\n        charCount = -1,\n        linebreakCount = 0,\n        node;\n\n    if (selection.focusNode && isChildOf(selection.focusNode)) {\n      node = selection.focusNode;\n      charCount = selection.focusOffset;\n\n      while (node) {\n        if (node === this.refContent) break;\n\n        if (node.previousSibling) {\n          node = node.previousSibling;\n          if (countBR) if (node.nodeName === 'BR') linebreakCount++;\n          charCount += node.textContent.length;\n        } else {\n          node = node.parentNode;\n          if (node === null) break;\n        }\n      }\n    }\n\n    return charCount + linebreakCount;\n  }\n\n  setCursorPosition(nextPosition) {\n    if ([false, null, undefined].indexOf(nextPosition) > -1) return;\n\n    const createRange = (node, chars, range) => {\n      if (!range) {\n        range = document.createRange();\n        range.selectNode(node);\n        range.setStart(node, 0);\n      }\n\n      if (chars.count === 0) {\n        range.setEnd(node, chars.count);\n      } else if (node && chars.count > 0) {\n        if (node.nodeType === Node.TEXT_NODE) {\n          if (node.textContent.length < chars.count) chars.count -= node.textContent.length;else {\n            range.setEnd(node, chars.count);\n            chars.count = 0;\n          }\n        } else for (var lp = 0; lp < node.childNodes.length; lp++) {\n          range = createRange(node.childNodes[lp], chars, range);\n          if (chars.count === 0) break;\n        }\n      }\n\n      return range;\n    };\n\n    const setPosition = chars => {\n      if (chars < 0) return;\n      let selection = window.getSelection(),\n          range = createRange(this.refContent, {\n        count: chars\n      });\n      if (!range) return;\n      range.collapse(false);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    };\n\n    if (nextPosition > 0) setPosition(nextPosition);else this.refContent.focus();\n  }\n\n  update(cursorOffset = 0, updateCursorPosition = true) {\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onChange' in this.props) this.props.onChange({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    let cursorPosition = this.getCursorPosition(data.error) + cursorOffset;\n    this.setState({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    this.updateTime = false;\n    if (updateCursorPosition) this.setCursorPosition(cursorPosition);\n  }\n\n  scheduledUpdate() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    const {\n      updateTime\n    } = this;\n    if (updateTime === false) return;\n    if (updateTime > new Date().getTime()) return;\n    this.update();\n  }\n\n  setUpdateTime() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    this.updateTime = new Date().getTime() + this.waitAfterKeyPress;\n  }\n\n  stopEvent(event) {\n    if (!event) return;\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  onKeyPress(event) {\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n    if (this.props.viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n    if (!ctrlOrMetaIsPressed) this.setUpdateTime();\n  }\n\n  onKeyDown(event) {\n    const viewOnly = !!this.props.viewOnly;\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n\n    switch (event.key) {\n      case 'Tab':\n        this.stopEvent(event);\n        if (viewOnly) break;\n        document.execCommand(\"insertText\", false, \"  \");\n        this.setUpdateTime();\n        break;\n\n      case 'Backspace':\n      case 'Delete':\n        if (viewOnly) this.stopEvent(event);\n        this.setUpdateTime();\n        break;\n\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'ArrowUp':\n      case 'ArrowDown':\n        this.setUpdateTime();\n        break;\n\n      case 'a':\n      case 'c':\n        if (viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n        break;\n\n      default:\n        if (viewOnly) this.stopEvent(event);\n        break;\n    }\n  }\n\n  onPaste(event) {\n    if (this.props.viewOnly) {\n      this.stopEvent(event);\n    } else {\n      event.preventDefault();\n      var text = event.clipboardData.getData('text/plain');\n      document.execCommand('insertText', false, text);\n    }\n\n    this.update();\n  }\n\n  onClick() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n  }\n\n  onBlur() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onBlur' in this.props) this.props.onBlur({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  onScroll(event) {\n    this.refLabels.scrollTop = event.target.scrollTop;\n  }\n\n  componentDidUpdate() {\n    this.updateInternalProps();\n    this.showPlaceholder();\n  }\n\n  componentDidMount() {\n    this.showPlaceholder();\n  }\n\n  componentWillUnmount() {\n    if (this.timer) clearInterval(this.timer);\n  }\n\n  showPlaceholder() {\n    const placeholderDoesNotExist = !('placeholder' in this.props);\n    if (placeholderDoesNotExist) return;\n    const {\n      placeholder\n    } = this.props;\n    const placeholderHasEmptyValues = [undefined, null].indexOf(placeholder) > -1;\n    if (placeholderHasEmptyValues) return;\n    const {\n      prevPlaceholder,\n      jsObject\n    } = this.state;\n    const {\n      resetConfiguration\n    } = this;\n    const placeholderDataType = getType(placeholder);\n    const unexpectedDataType = ['object', 'array'].indexOf(placeholderDataType) === -1;\n    if (unexpectedDataType) err.throwError('showPlaceholder', 'placeholder', 'either an object or an array');\n    const samePlaceholderValues = identical(placeholder, prevPlaceholder); // Component will always re-render when new placeholder value is any different from previous placeholder value.\n\n    let componentShouldUpdate = !samePlaceholderValues;\n\n    if (!componentShouldUpdate) {\n      if (resetConfiguration) {\n        /**\r\n         * If 'reset' property is set true or is truthy,\r\n         * any difference between placeholder and current value\r\n         * should trigger component re-render\r\n         */\n        if (jsObject !== undefined) componentShouldUpdate = !identical(placeholder, jsObject);\n      }\n    }\n\n    if (!componentShouldUpdate) return;\n    const data = this.tokenize(placeholder);\n    this.setState({\n      prevPlaceholder: placeholder,\n      plainText: data.indentation,\n      markupText: data.markup,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  tokenize(something) {\n    if (typeof something !== 'object') return console.error('tokenize() expects object type properties only. Got \\'' + typeof something + '\\' type instead.');\n    const locale = this.props.locale || defaultLocale;\n    const newSpan = this.newSpan;\n    /**\r\n     *     DOM NODE || ONBLUR OR UPDATE\r\n     */\n\n    if ('nodeType' in something) {\n      const containerNode = something.cloneNode(true),\n            hasChildren = containerNode.hasChildNodes();\n      if (!hasChildren) return '';\n      const children = containerNode.childNodes;\n      let buffer = {\n        tokens_unknown: [],\n        tokens_proto: [],\n        tokens_split: [],\n        tokens_fallback: [],\n        tokens_normalize: [],\n        tokens_merge: [],\n        tokens_plainText: '',\n        indented: '',\n        json: '',\n        jsObject: undefined,\n        markup: ''\n      };\n\n      for (var i = 0; i < children.length; i++) {\n        let child = children[i];\n        let info = {};\n\n        switch (child.nodeName) {\n          case 'SPAN':\n            info = {\n              string: child.textContent,\n              type: child.attributes.type.textContent\n            };\n            buffer.tokens_unknown.push(info);\n            break;\n\n          case 'DIV':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          case 'BR':\n            if (child.textContent === '') buffer.tokens_unknown.push({\n              string: '\\n',\n              type: 'unknown'\n            });\n            break;\n\n          case '#text':\n            buffer.tokens_unknown.push({\n              string: child.wholeText,\n              type: 'unknown'\n            });\n            break;\n\n          case 'FONT':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          default:\n            console.error('Unrecognized node:', {\n              child\n            });\n            break;\n        }\n      }\n\n      function quarkize(text, prefix = '') {\n        let buffer = {\n          active: false,\n          string: '',\n          number: '',\n          symbol: '',\n          space: '',\n          delimiter: '',\n          quarks: []\n        };\n\n        function pushAndStore(char, type) {\n          switch (type) {\n            case 'symbol':\n            case 'delimiter':\n              if (buffer.active) buffer.quarks.push({\n                string: buffer[buffer.active],\n                type: prefix + '-' + buffer.active\n              });\n              buffer[buffer.active] = '';\n              buffer.active = type;\n              buffer[buffer.active] = char;\n              break;\n\n            default:\n              if (type !== buffer.active || [buffer.string, char].indexOf('\\n') > -1) {\n                if (buffer.active) buffer.quarks.push({\n                  string: buffer[buffer.active],\n                  type: prefix + '-' + buffer.active\n                });\n                buffer[buffer.active] = '';\n                buffer.active = type;\n                buffer[buffer.active] = char;\n              } else buffer[type] += char;\n\n              break;\n          }\n        }\n\n        function finalPush() {\n          if (buffer.active) {\n            buffer.quarks.push({\n              string: buffer[buffer.active],\n              type: prefix + '-' + buffer.active\n            });\n            buffer[buffer.active] = '';\n            buffer.active = false;\n          }\n        }\n\n        for (var i = 0; i < text.length; i++) {\n          const char = text.charAt(i);\n\n          switch (char) {\n            case '\"':\n            case \"'\":\n              pushAndStore(char, 'delimiter');\n              break;\n\n            case ' ':\n            case '\\u00A0':\n              pushAndStore(char, 'space');\n              break;\n\n            case '{':\n            case '}':\n            case '[':\n            case ']':\n            case ':':\n            case ',':\n              pushAndStore(char, 'symbol');\n              break;\n\n            case '0':\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              if (buffer.active === 'string') pushAndStore(char, 'string');else pushAndStore(char, 'number');\n              break;\n\n            case '-':\n              if (i < text.length - 1) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            case '.':\n              if (i < text.length - 1 && i > 0) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1 && '0123456789'.indexOf(text.charAt(i - 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            default:\n              pushAndStore(char, 'string');\n              break;\n          }\n        }\n\n        finalPush();\n        return buffer.quarks;\n      }\n\n      for (var i = 0; i < buffer.tokens_unknown.length; i++) {\n        let token = buffer.tokens_unknown[i];\n        buffer.tokens_proto = buffer.tokens_proto.concat(quarkize(token.string, 'proto'));\n      }\n\n      function validToken(string, type) {\n        const quotes = '\\'\"';\n        let firstChar = '',\n            lastChar = '',\n            quoteType = false;\n\n        switch (type) {\n          case 'primitive':\n            if (['true', 'false', 'null', 'undefined'].indexOf(string) === -1) return false;\n            break;\n\n          case 'string':\n            if (string.length < 2) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n            if (quoteType === -1) return false;\n            if (firstChar !== lastChar) return false;\n\n            for (var i = 0; i < string.length; i++) {\n              if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n            }\n\n            break;\n\n          case 'key':\n            if (string.length === 0) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n\n            if (quoteType > -1) {\n              if (string.length === 1) return false;\n              if (firstChar !== lastChar) return false;\n\n              for (var i = 0; i < string.length; i++) {\n                if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n              }\n            } else {\n              const nonAlphanumeric = '\\'\"`.,:;{}[]&<>=~*%\\\\|/-+!?@^ \\xa0';\n\n              for (var i = 0; i < nonAlphanumeric.length; i++) {\n                const nonAlpha = nonAlphanumeric.charAt(i);\n                if (string.indexOf(nonAlpha) > -1) return false;\n              }\n            }\n\n            break;\n\n          case 'number':\n            for (var i = 0; i < string.length; i++) {\n              if ('0123456789'.indexOf(string.charAt(i)) === -1) if (i === 0) {\n                if ('-' !== string.charAt(0)) return false;\n              } else if ('.' !== string.charAt(i)) return false;\n            }\n\n            break;\n\n          case 'symbol':\n            if (string.length > 1) return false;\n            if ('{[:]},'.indexOf(string) === -1) return false;\n            break;\n\n          case 'colon':\n            if (string.length > 1) return false;\n            if (':' !== string) return false;\n            break;\n\n          default:\n            return true;\n            break;\n        }\n\n        return true;\n      }\n\n      for (var i = 0; i < buffer.tokens_proto.length; i++) {\n        let token = buffer.tokens_proto[i];\n\n        if (token.type.indexOf('proto') === -1) {\n          if (!validToken(token.string, token.type)) {\n            buffer.tokens_split = buffer.tokens_split.concat(quarkize(token.string, 'split'));\n          } else buffer.tokens_split.push(token);\n        } else buffer.tokens_split.push(token);\n      }\n\n      for (var i = 0; i < buffer.tokens_split.length; i++) {\n        let token = buffer.tokens_split[i];\n        let type = token.type,\n            string = token.string,\n            length = string.length,\n            fallback = [];\n\n        if (type.indexOf('-') > -1) {\n          type = type.slice(type.indexOf('-') + 1);\n          if (type !== 'string') fallback.push('string');\n          fallback.push('key');\n          fallback.push('error');\n        }\n\n        let tokul = {\n          string: string,\n          length: length,\n          type: type,\n          fallback: fallback\n        };\n        buffer.tokens_fallback.push(tokul);\n      }\n\n      function tokenFollowed() {\n        const last = buffer.tokens_normalize.length - 1;\n        if (last < 1) return false;\n\n        for (var i = last; i >= 0; i--) {\n          const previousToken = buffer.tokens_normalize[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      for (var i = 0; i < buffer.tokens_fallback.length; i++) {\n        let token = buffer.tokens_fallback[i];\n        const type = token.type,\n              string = token.string;\n        let normalToken = {\n          type: type,\n          string: string\n        };\n\n        switch (type) {\n          case 'symbol':\n          case 'colon':\n            if (buffer2.stringOpen) {\n              if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n            }\n\n            switch (string) {\n              case '[':\n              case '{':\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ']':\n              case '}':\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ',':\n                if (tokenFollowed().type === 'colon') break;\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ':':\n                normalToken.type = 'colon';\n                buffer2.isValue = true;\n                break;\n            }\n\n            break;\n\n          case 'delimiter':\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n\n            if (!buffer2.stringOpen) {\n              buffer2.stringOpen = string;\n              break;\n            }\n\n            if (i > 0) {\n              const previousToken = buffer.tokens_fallback[i - 1],\n                    _string = previousToken.string,\n                    _type = previousToken.type,\n                    _char = _string.charAt(_string.length - 1);\n\n              if (_type === 'string' && _char === '\\\\') break;\n            }\n\n            if (buffer2.stringOpen === string) {\n              buffer2.stringOpen = false;\n              break;\n            }\n\n            break;\n\n          case 'primitive':\n          case 'string':\n            if (['false', 'true', 'null', 'undefined'].indexOf(string) > -1) {\n              const lastIndex = buffer.tokens_normalize.length - 1;\n\n              if (lastIndex >= 0) {\n                if (buffer.tokens_normalize[lastIndex].type !== 'string') {\n                  normalToken.type = 'primitive';\n                  break;\n                }\n\n                normalToken.type = 'string';\n                break;\n              }\n\n              normalToken.type = 'primitive';\n              break;\n            }\n\n            if (string === '\\n') if (!buffer2.stringOpen) {\n              normalToken.type = 'linebreak';\n              break;\n            }\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'space':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'number':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          default:\n            break;\n        }\n\n        buffer.tokens_normalize.push(normalToken);\n      }\n\n      for (var i = 0; i < buffer.tokens_normalize.length; i++) {\n        const token = buffer.tokens_normalize[i];\n        let mergedToken = {\n          string: token.string,\n          type: token.type,\n          tokens: [i]\n        };\n        if (['symbol', 'colon'].indexOf(token.type) === -1) if (i + 1 < buffer.tokens_normalize.length) {\n          let count = 0;\n\n          for (var u = i + 1; u < buffer.tokens_normalize.length; u++) {\n            const nextToken = buffer.tokens_normalize[u];\n            if (token.type !== nextToken.type) break;\n            mergedToken.string += nextToken.string;\n            mergedToken.tokens.push(u);\n            count++;\n          }\n\n          i += count;\n        }\n        buffer.tokens_merge.push(mergedToken);\n      }\n\n      const quotes = '\\'\"',\n            alphanumeric = 'abcdefghijklmnopqrstuvwxyz' + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + '0123456789' + '_$';\n      var error = false,\n          line = buffer.tokens_merge.length > 0 ? 1 : 0;\n      buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      function setError(tokenID, reason, offset = 0) {\n        error = {\n          token: tokenID,\n          line: line,\n          reason: reason\n        };\n        buffer.tokens_merge[tokenID + offset].type = 'error';\n      }\n\n      function followedBySymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === buffer.tokens_merge.length - 1) return false;\n\n        for (var i = tokenID + 1; i < buffer.tokens_merge.length; i++) {\n          const nextToken = buffer.tokens_merge[i];\n\n          switch (nextToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(nextToken.string) > -1) return i;else return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function followsSymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(previousToken.string) > -1) return true;\n              return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function typeFollowed(tokenID) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken.type;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let bracketList = [];\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        if (error) break;\n        let token = buffer.tokens_merge[i],\n            string = token.string,\n            type = token.type,\n            found = false;\n\n        switch (type) {\n          case 'space':\n            break;\n\n          case 'linebreak':\n            line++;\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '{':\n              case '[':\n                found = followsSymbol(i, ['}', ']']);\n\n                if (found) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: buffer.tokens_merge[found].string,\n                    secondToken: string\n                  }));\n                  break;\n                }\n\n                if (string === '[' && i > 0) if (!followsSymbol(i, [':', '[', ','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                    firstToken: \"[\",\n                    secondToken: [\":\", \"[\", \",\"]\n                  }));\n                  break;\n                }\n                if (string === '{') if (followsSymbol(i, ['{'])) {\n                  setError(i, format(locale.invalidToken.double, {\n                    token: \"{\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case '}':\n              case ']':\n                if (string === '}') if (buffer2.brackets[buffer2.brackets.length - 1] !== '{') {\n                  setError(i, format(locale.brace.curly.missingOpen));\n                  break;\n                }\n                if (string === '}') if (followsSymbol(i, [','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \",\",\n                    secondToken: \"}\"\n                  }));\n                  break;\n                }\n                if (string === ']') if (buffer2.brackets[buffer2.brackets.length - 1] !== '[') {\n                  setError(i, format(locale.brace.square.missingOpen));\n                  break;\n                }\n                if (string === ']') if (followsSymbol(i, [':'])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \":\",\n                    secondToken: \"]\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case ',':\n                found = followsSymbol(i, ['{']);\n\n                if (found) {\n                  if (followedBySymbol(i, ['}'])) {\n                    setError(i, format(locale.brace.curly.cannotWrap, {\n                      token: \",\"\n                    }));\n                    break;\n                  }\n\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \"{\",\n                    secondToken: \",\"\n                  }));\n                  break;\n                }\n\n                if (followedBySymbol(i, ['}', ',', ']'])) {\n                  setError(i, format(locale.noTrailingOrLeadingComma));\n                  break;\n                }\n\n                found = typeFollowed(i);\n\n                switch (found) {\n                  case 'key':\n                  case 'colon':\n                    setError(i, format(locale.invalidToken.termSequence.prohibited, {\n                      firstTerm: found === 'key' ? locale.types.key : locale.symbols.colon,\n                      secondTerm: locale.symbols.comma\n                    }));\n                    break;\n\n                  case 'symbol':\n                    if (followsSymbol(i, ['{'])) {\n                      setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                        firstToken: \"{\",\n                        secondToken: \",\"\n                      }));\n                      break;\n                    }\n\n                    break;\n\n                  default:\n                    break;\n                }\n\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              default:\n                break;\n            }\n\n            buffer.json += string;\n            break;\n\n          case 'colon':\n            found = followsSymbol(i, ['[']);\n\n            if (found && followedBySymbol(i, [']'])) {\n              setError(i, format(locale.brace.square.cannotWrap, {\n                token: \":\"\n              }));\n              break;\n            }\n\n            if (found) {\n              setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                firstToken: \"[\",\n                secondToken: \":\"\n              }));\n              break;\n            }\n\n            if (typeFollowed(i) !== 'key') {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.key\n              }));\n              break;\n            }\n\n            if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.value\n              }));\n              break;\n            }\n\n            buffer2.isValue = true;\n            buffer.json += string;\n            break;\n\n          case 'key':\n          case 'string':\n            let firstChar = string.charAt(0),\n                lastChar = string.charAt(string.length - 1),\n                quote_primary = quotes.indexOf(firstChar);\n            if (quotes.indexOf(firstChar) === -1) if (quotes.indexOf(lastChar) !== -1) {\n              setError(i, format(locale.string.missingOpen, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(lastChar) === -1) if (quotes.indexOf(firstChar) !== -1) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(firstChar) > -1) if (firstChar !== lastChar) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if ('string' === type) if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) {\n              setError(i, format(locale.string.mustBeWrappedByQuotes));\n              break;\n            }\n            if ('key' === type) if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.types.key,\n                secondTerm: locale.symbols.colon\n              }));\n            }\n            if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) for (var h = 0; h < string.length; h++) {\n              if (error) break;\n              const c = string.charAt(h);\n\n              if (alphanumeric.indexOf(c) === -1) {\n                setError(i, format(locale.string.nonAlphanumeric, {\n                  token: c\n                }));\n                break;\n              }\n            }\n            if (firstChar === \"'\") string = '\"' + string.slice(1, -1) + '\"';else if (firstChar !== '\"') string = '\"' + string + '\"';\n            if ('key' === type) if ('key' === typeFollowed(i)) {\n              if (i > 0) if (!isNaN(buffer.tokens_merge[i - 1])) {\n                buffer.tokens_merge[i - 1] += buffer.tokens_merge[i];\n                setError(i, format(locale.key.numberAndLetterMissingQuotes));\n                break;\n              }\n              setError(i, format(locale.key.spaceMissingQuotes));\n              break;\n            }\n            if ('key' === type) if (!followsSymbol(i, ['{', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"{\", \",\"]\n              }));\n              break;\n            }\n            if ('string' === type) if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n            if ('key' === type) if (buffer2.isValue) {\n              setError(i, format(locale.string.unexpectedKey));\n              break;\n            }\n            if ('string' === type) if (!buffer2.isValue) {\n              setError(i, format(locale.key.unexpectedString));\n              break;\n            }\n            buffer.json += string;\n            break;\n\n          case 'number':\n          case 'primitive':\n            if (followsSymbol(i, ['{'])) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            } else if (typeFollowed(i) === 'key') {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n            } else if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n\n            if (type !== 'key') if (!buffer2.isValue) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            }\n            if (type === 'primitive') if (string === 'undefined') setError(i, format(locale.invalidToken.useInstead, {\n              badToken: \"undefined\",\n              goodToken: \"null\"\n            }));\n            buffer.json += string;\n            break;\n        }\n      }\n\n      let noEscapedSingleQuote = '';\n\n      for (var i = 0; i < buffer.json.length; i++) {\n        let current = buffer.json.charAt(i),\n            next = '';\n\n        if (i + 1 < buffer.json.length) {\n          next = buffer.json.charAt(i + 1);\n\n          if (current === '\\\\' && next === \"'\") {\n            noEscapedSingleQuote += next;\n            i++;\n            continue;\n          }\n        }\n\n        noEscapedSingleQuote += current;\n      }\n\n      buffer.json = noEscapedSingleQuote;\n\n      if (!error) {\n        const maxIterations = Math.ceil(bracketList.length / 2);\n        let round = 0,\n            delta = false;\n\n        function removePair(index) {\n          bracketList.splice(index + 1, 1);\n          bracketList.splice(index, 1);\n          if (!delta) delta = true;\n        }\n\n        while (bracketList.length > 0) {\n          delta = false;\n\n          for (var tokenCount = 0; tokenCount < bracketList.length - 1; tokenCount++) {\n            const pair = bracketList[tokenCount].string + bracketList[tokenCount + 1].string;\n            if (['[]', '{}'].indexOf(pair) > -1) removePair(tokenCount);\n          }\n\n          round++;\n          if (!delta) break;\n          if (round >= maxIterations) break;\n        }\n\n        if (bracketList.length > 0) {\n          const _tokenString = bracketList[0].string,\n                _tokenPosition = bracketList[0].i,\n                _closingBracketType = _tokenString === '[' ? ']' : '}';\n\n          line = bracketList[0].line;\n          setError(_tokenPosition, format(locale.brace[_closingBracketType === ']' ? 'square' : 'curly'].missingClose));\n        }\n      }\n\n      if (!error) if ([undefined, ''].indexOf(buffer.json) === -1) try {\n        buffer.jsObject = JSON.parse(buffer.json);\n      } catch (err) {\n        const errorMessage = err.message,\n              subsMark = errorMessage.indexOf('position');\n        if (subsMark === -1) throw new Error('Error parsing failed');\n        const errPositionStr = errorMessage.substring(subsMark + 9, errorMessage.length),\n              errPosition = parseInt(errPositionStr);\n        let charTotal = 0,\n            tokenIndex = 0,\n            token = false,\n            _line = 1,\n            exitWhile = false;\n\n        while (charTotal < errPosition && !exitWhile) {\n          token = buffer.tokens_merge[tokenIndex];\n          if ('linebreak' === token.type) _line++;\n          if (['space', 'linebreak'].indexOf(token.type) === -1) charTotal += token.string.length;\n          if (charTotal >= errPosition) break;\n          tokenIndex++;\n          if (!buffer.tokens_merge[tokenIndex + 1]) exitWhile = true;\n        }\n\n        line = _line;\n        let backslashCount = 0;\n\n        for (let i = 0; i < token.string.length; i++) {\n          const char = token.string.charAt(i);\n          if (char === '\\\\') backslashCount = backslashCount > 0 ? backslashCount + 1 : 1;else {\n            if (backslashCount % 2 !== 0 || backslashCount === 0) if ('\\'\"bfnrt'.indexOf(char) === -1) {\n              setError(tokenIndex, format(locale.invalidToken.unexpected, {\n                token: '\\\\'\n              }));\n            }\n            backslashCount = 0;\n          }\n        }\n\n        if (!error) setError(tokenIndex, format(locale.invalidToken.unexpected, {\n          token: token.string\n        }));\n      }\n      let _line = 1,\n          _depth = 0;\n\n      function newIndent() {\n        var space = [];\n\n        for (var i = 0; i < _depth * 2; i++) space.push('&nbsp;');\n\n        return space.join('');\n      }\n\n      function newLineBreak(byPass = false) {\n        _line++;\n\n        if (_depth > 0 || byPass) {\n          return '<br>';\n        }\n\n        return '';\n      }\n\n      function newLineBreakAndIndent(byPass = false) {\n        return newLineBreak(byPass) + newIndent();\n      }\n\n      ;\n      if (!error) for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        const token = buffer.tokens_merge[i],\n              string = token.string,\n              type = token.type;\n\n        switch (type) {\n          case 'space':\n          case 'linebreak':\n            break;\n\n          case 'string':\n          case 'number':\n          case 'primitive':\n          case 'error':\n            buffer.markup += (followsSymbol(i, [',', '[']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n            break;\n\n          case 'key':\n            buffer.markup += newLineBreakAndIndent() + newSpan(i, token, _depth);\n            break;\n\n          case 'colon':\n            buffer.markup += newSpan(i, token, _depth) + '&nbsp;';\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '[':\n              case '{':\n                buffer.markup += (!followsSymbol(i, [':']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n                _depth++;\n                break;\n\n              case ']':\n              case '}':\n                _depth--;\n\n                const islastToken = i === buffer.tokens_merge.length - 1,\n                      _adjustment = i > 0 ? ['[', '{'].indexOf(buffer.tokens_merge[i - 1].string) > -1 ? '' : newLineBreakAndIndent(islastToken) : '';\n\n                buffer.markup += _adjustment + newSpan(i, token, _depth);\n                break;\n\n              case ',':\n                buffer.markup += newSpan(i, token, _depth);\n                break;\n            }\n\n            break;\n        }\n      }\n\n      if (error) {\n        let _line_fallback = 1;\n\n        function countCarrigeReturn(string) {\n          let count = 0;\n\n          for (var i = 0; i < string.length; i++) {\n            if (['\\n', '\\r'].indexOf(string[i]) > -1) count++;\n          }\n\n          return count;\n        }\n\n        _line = 1;\n\n        for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          const token = buffer.tokens_merge[i],\n                type = token.type,\n                string = token.string;\n          if (type === 'linebreak') _line++;\n          buffer.markup += newSpan(i, token, _depth);\n          _line_fallback += countCarrigeReturn(string);\n        }\n\n        _line++;\n        _line_fallback++;\n        if (_line < _line_fallback) _line = _line_fallback;\n      }\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        let token = buffer.tokens_merge[i];\n        buffer.indented += token.string;\n        if (['space', 'linebreak'].indexOf(token.type) === -1) buffer.tokens_plainText += token.string;\n      }\n\n      if (error) {\n        function isFunction(functionToCheck) {\n          return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n        }\n\n        if ('modifyErrorText' in this.props) if (isFunction(this.props.modifyErrorText)) error.reason = this.props.modifyErrorText(error.reason);\n      }\n\n      return {\n        tokens: buffer.tokens_merge,\n        noSpaces: buffer.tokens_plainText,\n        indented: buffer.indented,\n        json: buffer.json,\n        jsObject: buffer.jsObject,\n        markup: buffer.markup,\n        lines: _line,\n        error: error\n      };\n    }\n\n    ;\n    /**\r\n     *     JS OBJECTS || PLACEHOLDER\r\n     */\n\n    if (!('nodeType' in something)) {\n      let buffer = {\n        inputText: JSON.stringify(something),\n        position: 0,\n        currentChar: '',\n        tokenPrimary: '',\n        tokenSecondary: '',\n        brackets: [],\n        isValue: false,\n        stringOpen: false,\n        stringStart: 0,\n        tokens: []\n      };\n\n      function escape_character() {\n        if (buffer.currentChar !== '\\\\') return false;\n        return true;\n      }\n\n      function extract(string, position) {\n        return string.slice(0, position) + string.slice(position + 1);\n      }\n\n      function determine_string() {\n        if ('\\'\"'.indexOf(buffer.currentChar) === -1) return false;\n\n        if (!buffer.stringOpen) {\n          add_tokenSecondary();\n          buffer.stringStart = buffer.position;\n          buffer.stringOpen = buffer.currentChar;\n          return true;\n        }\n\n        if (buffer.stringOpen === buffer.currentChar) {\n          add_tokenSecondary();\n          const stringToken = buffer.inputText.substring(buffer.stringStart, buffer.position + 1);\n          add_tokenPrimary(stringToken);\n          buffer.stringOpen = false;\n          return true;\n        }\n\n        return false;\n      }\n\n      function determine_value() {\n        if (':,{}[]'.indexOf(buffer.currentChar) === -1) return false;\n        if (buffer.stringOpen) return false;\n        add_tokenSecondary();\n        add_tokenPrimary(buffer.currentChar);\n\n        switch (buffer.currentChar) {\n          case ':':\n            buffer.isValue = true;\n            return true;\n            break;\n\n          case '{':\n          case '[':\n            buffer.brackets.push(buffer.currentChar);\n            break;\n\n          case '}':\n          case ']':\n            buffer.brackets.pop();\n            break;\n        }\n\n        if (buffer.currentChar !== ':') buffer.isValue = buffer.brackets[buffer.brackets.length - 1] === '[';\n        return true;\n      }\n\n      function add_tokenSecondary() {\n        if (buffer.tokenSecondary.length === 0) return false;\n        buffer.tokens.push(buffer.tokenSecondary);\n        buffer.tokenSecondary = '';\n        return true;\n      }\n\n      function add_tokenPrimary(value) {\n        if (value.length === 0) return false;\n        buffer.tokens.push(value);\n        return true;\n      }\n\n      for (var i = 0; i < buffer.inputText.length; i++) {\n        buffer.position = i;\n        buffer.currentChar = buffer.inputText.charAt(buffer.position);\n        const a = determine_value(),\n              b = determine_string(),\n              c = escape_character();\n        if (!a && !b && !c) if (!buffer.stringOpen) buffer.tokenSecondary += buffer.currentChar;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        isValue: false,\n        tokens: []\n      };\n      buffer2.tokens = buffer.tokens.map(token => {\n        let type = '',\n            string = '',\n            value = '';\n\n        switch (token) {\n          case ',':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case ':':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = true;\n            break;\n\n          case '{':\n          case '[':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.push(token);\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case '}':\n          case ']':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.pop();\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case 'undefined':\n            type = 'primitive';\n            string = token;\n            value = undefined;\n            break;\n\n          case 'null':\n            type = 'primitive';\n            string = token;\n            value = null;\n            break;\n\n          case 'false':\n            type = 'primitive';\n            string = token;\n            value = false;\n            break;\n\n          case 'true':\n            type = 'primitive';\n            string = token;\n            value = true;\n            break;\n\n          default:\n            const C = token.charAt(0);\n\n            function stripQuotesFromKey(text) {\n              if (text.length === 0) return text;\n              if (['\"\"', \"''\"].indexOf(text) > -1) return \"''\";\n              let wrappedInQuotes = false;\n\n              for (var i = 0; i < 2; i++) {\n                if ([text.charAt(0), text.charAt(text.length - 1)].indexOf(['\"', \"'\"][i]) > -1) {\n                  wrappedInQuotes = true;\n                  break;\n                }\n              }\n\n              if (wrappedInQuotes && text.length >= 2) text = text.slice(1, -1);\n\n              const nonAlphaNumeric = text.replace(/\\w/g, ''),\n                    alphaNumeric = text.replace(/\\W+/g, ''),\n                    mayRemoveQuotes = ((nonAlphaNumeric, text) => {\n                let numberAndLetter = false;\n\n                for (var i = 0; i < text.length; i++) {\n                  if (i === 0) if (isNaN(text.charAt(i))) break;\n\n                  if (isNaN(text.charAt(i))) {\n                    numberAndLetter = true;\n                    break;\n                  }\n                }\n\n                return !(nonAlphaNumeric.length > 0 || numberAndLetter);\n              })(nonAlphaNumeric, text),\n                    hasQuotes = (string => {\n                for (var i = 0; i < string.length; i++) {\n                  if ([\"'\", '\"'].indexOf(string.charAt(i)) > -1) return true;\n                }\n\n                return false;\n              })(nonAlphaNumeric);\n\n              if (hasQuotes) {\n                let newText = '';\n                const charList = text.split('');\n\n                for (var ii = 0; ii < charList.length; ii++) {\n                  let char = charList[ii];\n                  if ([\"'\", '\"'].indexOf(char) > -1) char = '\\\\' + char;\n                  newText += char;\n                }\n\n                text = newText;\n              }\n\n              if (!mayRemoveQuotes) return \"'\" + text + \"'\";else return text;\n            }\n\n            if ('\\'\"'.indexOf(C) > -1) {\n              if (buffer2.isValue) type = 'string';else type = 'key';\n              if (type === 'key') string = stripQuotesFromKey(token);\n\n              if (type === 'string') {\n                string = '';\n                const charList2 = token.slice(1, -1).split('');\n\n                for (var ii = 0; ii < charList2.length; ii++) {\n                  let char = charList2[ii];\n                  if ('\\'\\\"'.indexOf(char) > -1) char = '\\\\' + char;\n                  string += char;\n                }\n\n                string = \"'\" + string + \"'\";\n              }\n\n              value = string;\n              break;\n            }\n\n            if (!isNaN(token)) {\n              type = 'number';\n              string = token;\n              value = Number(token);\n              break;\n            }\n\n            if (token.length > 0) if (!buffer2.isValue) {\n              type = 'key';\n              string = token;\n              if (string.indexOf(' ') > -1) string = \"'\" + string + \"'\";\n              value = string;\n              break;\n            }\n        }\n\n        return {\n          type: type,\n          string: string,\n          value: value,\n          depth: buffer2.brackets.length\n        };\n      });\n      let clean = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        clean += token.string;\n      }\n\n      function indent(number) {\n        var space = [];\n\n        for (var i = 0; i < number * 2; i++) space.push(' ');\n\n        return (number > 0 ? '\\n' : '') + space.join('');\n      }\n\n      ;\n      let indentation = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n\n        switch (token.string) {\n          case '[':\n          case '{':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) indentation += token.string + indent(token.depth);else indentation += token.string;\n            break;\n\n          case ']':\n          case '}':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) indentation += indent(token.depth) + token.string;else indentation += token.string;\n            break;\n\n          case ':':\n            indentation += token.string + ' ';\n            break;\n\n          case ',':\n            indentation += token.string + indent(token.depth);\n            break;\n\n          default:\n            indentation += token.string;\n            break;\n        }\n      }\n\n      let lines = 1;\n\n      function indentII(number) {\n        var space = [];\n        if (number > 0) lines++;\n\n        for (var i = 0; i < number * 2; i++) space.push('&nbsp;');\n\n        return (number > 0 ? '<br>' : '') + space.join('');\n      }\n\n      ;\n      let markup = '';\n      const lastIndex = buffer2.tokens.length - 1;\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        let span = newSpan(i, token, token.depth);\n\n        switch (token.string) {\n          case '{':\n          case '[':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) markup += span + indentII(token.depth);else markup += span;\n            break;\n\n          case '}':\n          case ']':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) markup += indentII(token.depth) + (lastIndex === i ? '<br>' : '') + span;else markup += span;\n            break;\n\n          case ':':\n            markup += span + ' ';\n            break;\n\n          case ',':\n            markup += span + indentII(token.depth);\n            break;\n\n          default:\n            markup += span;\n            break;\n        }\n      }\n\n      lines += 2;\n      return {\n        tokens: buffer2.tokens,\n        noSpaces: clean,\n        indented: indentation,\n        json: JSON.stringify(something),\n        jsObject: something,\n        markup: markup,\n        lines: lines\n      };\n    }\n  }\n\n}\n\nexport default JSONInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}