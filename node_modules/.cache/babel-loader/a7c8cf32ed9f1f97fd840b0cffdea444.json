{"ast":null,"code":"const BYTE_UNITS = ['B', 'kB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\nconst BIBYTE_UNITS = ['B', 'kiB', 'MiB', 'GiB', 'TiB', 'PiB', 'EiB', 'ZiB', 'YiB'];\nconst BIT_UNITS = ['b', 'kbit', 'Mbit', 'Gbit', 'Tbit', 'Pbit', 'Ebit', 'Zbit', 'Ybit'];\nconst BIBIT_UNITS = ['b', 'kibit', 'Mibit', 'Gibit', 'Tibit', 'Pibit', 'Eibit', 'Zibit', 'Yibit'];\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\n\nconst toLocaleString = (number, locale, options) => {\n  let result = number;\n\n  if (typeof locale === 'string' || Array.isArray(locale)) {\n    result = number.toLocaleString(locale, options);\n  } else if (locale === true || options !== undefined) {\n    result = number.toLocaleString(undefined, options);\n  }\n\n  return result;\n};\n\nexport default function prettyBytes(number, options) {\n  if (!Number.isFinite(number)) {\n    throw new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n  }\n\n  options = {\n    bits: false,\n    binary: false,\n    ...options\n  };\n  const UNITS = options.bits ? options.binary ? BIBIT_UNITS : BIT_UNITS : options.binary ? BIBYTE_UNITS : BYTE_UNITS;\n\n  if (options.signed && number === 0) {\n    return ` 0 ${UNITS[0]}`;\n  }\n\n  const isNegative = number < 0;\n  const prefix = isNegative ? '-' : options.signed ? '+' : '';\n\n  if (isNegative) {\n    number = -number;\n  }\n\n  let localeOptions;\n\n  if (options.minimumFractionDigits !== undefined) {\n    localeOptions = {\n      minimumFractionDigits: options.minimumFractionDigits\n    };\n  }\n\n  if (options.maximumFractionDigits !== undefined) {\n    localeOptions = {\n      maximumFractionDigits: options.maximumFractionDigits,\n      ...localeOptions\n    };\n  }\n\n  if (number < 1) {\n    const numberString = toLocaleString(number, options.locale, localeOptions);\n    return prefix + numberString + ' ' + UNITS[0];\n  }\n\n  const exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n  number /= (options.binary ? 1024 : 1000) ** exponent;\n\n  if (!localeOptions) {\n    number = number.toPrecision(3);\n  }\n\n  const numberString = toLocaleString(Number(number), options.locale, localeOptions);\n  const unit = UNITS[exponent];\n  return prefix + numberString + ' ' + unit;\n}","map":{"version":3,"names":["BYTE_UNITS","BIBYTE_UNITS","BIT_UNITS","BIBIT_UNITS","toLocaleString","number","locale","options","result","Array","isArray","undefined","prettyBytes","Number","isFinite","TypeError","bits","binary","UNITS","signed","isNegative","prefix","localeOptions","minimumFractionDigits","maximumFractionDigits","numberString","exponent","Math","min","floor","log","log10","length","toPrecision","unit"],"sources":["D:/Projects/New/api-visualizer-tool/node_modules/pretty-bytes/index.js"],"sourcesContent":["const BYTE_UNITS = [\n\t'B',\n\t'kB',\n\t'MB',\n\t'GB',\n\t'TB',\n\t'PB',\n\t'EB',\n\t'ZB',\n\t'YB',\n];\n\nconst BIBYTE_UNITS = [\n\t'B',\n\t'kiB',\n\t'MiB',\n\t'GiB',\n\t'TiB',\n\t'PiB',\n\t'EiB',\n\t'ZiB',\n\t'YiB',\n];\n\nconst BIT_UNITS = [\n\t'b',\n\t'kbit',\n\t'Mbit',\n\t'Gbit',\n\t'Tbit',\n\t'Pbit',\n\t'Ebit',\n\t'Zbit',\n\t'Ybit',\n];\n\nconst BIBIT_UNITS = [\n\t'b',\n\t'kibit',\n\t'Mibit',\n\t'Gibit',\n\t'Tibit',\n\t'Pibit',\n\t'Eibit',\n\t'Zibit',\n\t'Yibit',\n];\n\n/*\nFormats the given number using `Number#toLocaleString`.\n- If locale is a string, the value is expected to be a locale-key (for example: `de`).\n- If locale is true, the system default locale is used for translation.\n- If no value for locale is specified, the number is returned unmodified.\n*/\nconst toLocaleString = (number, locale, options) => {\n\tlet result = number;\n\tif (typeof locale === 'string' || Array.isArray(locale)) {\n\t\tresult = number.toLocaleString(locale, options);\n\t} else if (locale === true || options !== undefined) {\n\t\tresult = number.toLocaleString(undefined, options);\n\t}\n\n\treturn result;\n};\n\nexport default function prettyBytes(number, options) {\n\tif (!Number.isFinite(number)) {\n\t\tthrow new TypeError(`Expected a finite number, got ${typeof number}: ${number}`);\n\t}\n\n\toptions = {\n\t\tbits: false,\n\t\tbinary: false,\n\t\t...options,\n\t};\n\n\tconst UNITS = options.bits\n\t\t? (options.binary ? BIBIT_UNITS : BIT_UNITS)\n\t\t: (options.binary ? BIBYTE_UNITS : BYTE_UNITS);\n\n\tif (options.signed && number === 0) {\n\t\treturn ` 0 ${UNITS[0]}`;\n\t}\n\n\tconst isNegative = number < 0;\n\tconst prefix = isNegative ? '-' : (options.signed ? '+' : '');\n\n\tif (isNegative) {\n\t\tnumber = -number;\n\t}\n\n\tlet localeOptions;\n\n\tif (options.minimumFractionDigits !== undefined) {\n\t\tlocaleOptions = {minimumFractionDigits: options.minimumFractionDigits};\n\t}\n\n\tif (options.maximumFractionDigits !== undefined) {\n\t\tlocaleOptions = {maximumFractionDigits: options.maximumFractionDigits, ...localeOptions};\n\t}\n\n\tif (number < 1) {\n\t\tconst numberString = toLocaleString(number, options.locale, localeOptions);\n\t\treturn prefix + numberString + ' ' + UNITS[0];\n\t}\n\n\tconst exponent = Math.min(Math.floor(options.binary ? Math.log(number) / Math.log(1024) : Math.log10(number) / 3), UNITS.length - 1);\n\tnumber /= (options.binary ? 1024 : 1000) ** exponent;\n\n\tif (!localeOptions) {\n\t\tnumber = number.toPrecision(3);\n\t}\n\n\tconst numberString = toLocaleString(Number(number), options.locale, localeOptions);\n\n\tconst unit = UNITS[exponent];\n\n\treturn prefix + numberString + ' ' + unit;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}