{"ast":null,"code":"import _classCallCheck from \"D:/Projects/New/api-visualizer-tool/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"D:/Projects/New/api-visualizer-tool/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _assertThisInitialized from \"D:/Projects/New/api-visualizer-tool/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"D:/Projects/New/api-visualizer-tool/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"D:/Projects/New/api-visualizer-tool/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\n\n/** @license react-json-editor-ajrm v2.5.13\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React, { Component } from 'react';\nimport themes from './themes';\nimport { identical, getType } from './mitsuketa';\nimport err from './err';\nimport { format } from './locale';\nimport defaultLocale from './locale/en';\n\nvar JSONInput = /*#__PURE__*/function (_Component) {\n  _inherits(JSONInput, _Component);\n\n  var _super = _createSuper(JSONInput);\n\n  function JSONInput(props) {\n    var _this;\n\n    _classCallCheck(this, JSONInput);\n\n    _this = _super.call(this, props);\n    _this.updateInternalProps = _this.updateInternalProps.bind(_assertThisInitialized(_this));\n    _this.createMarkup = _this.createMarkup.bind(_assertThisInitialized(_this));\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    _this.onBlur = _this.onBlur.bind(_assertThisInitialized(_this));\n    _this.update = _this.update.bind(_assertThisInitialized(_this));\n    _this.getCursorPosition = _this.getCursorPosition.bind(_assertThisInitialized(_this));\n    _this.setCursorPosition = _this.setCursorPosition.bind(_assertThisInitialized(_this));\n    _this.scheduledUpdate = _this.scheduledUpdate.bind(_assertThisInitialized(_this));\n    _this.setUpdateTime = _this.setUpdateTime.bind(_assertThisInitialized(_this));\n    _this.renderLabels = _this.renderLabels.bind(_assertThisInitialized(_this));\n    _this.newSpan = _this.newSpan.bind(_assertThisInitialized(_this));\n    _this.renderErrorMessage = _this.renderErrorMessage.bind(_assertThisInitialized(_this));\n    _this.onScroll = _this.onScroll.bind(_assertThisInitialized(_this));\n    _this.showPlaceholder = _this.showPlaceholder.bind(_assertThisInitialized(_this));\n    _this.tokenize = _this.tokenize.bind(_assertThisInitialized(_this));\n    _this.onKeyPress = _this.onKeyPress.bind(_assertThisInitialized(_this));\n    _this.onKeyDown = _this.onKeyDown.bind(_assertThisInitialized(_this));\n    _this.onPaste = _this.onPaste.bind(_assertThisInitialized(_this));\n    _this.stopEvent = _this.stopEvent.bind(_assertThisInitialized(_this));\n    _this.refContent = null;\n    _this.refLabels = null;\n\n    _this.updateInternalProps();\n\n    _this.renderCount = 1;\n    _this.state = {\n      prevPlaceholder: '',\n      markupText: '',\n      plainText: '',\n      json: '',\n      jsObject: undefined,\n      lines: false,\n      error: false\n    };\n\n    if (!_this.props.locale) {\n      console.warn(\"[react-json-editor-ajrm - Deprecation Warning] You did not provide a 'locale' prop for your JSON input - This will be required in a future version. English has been set as a default.\");\n    }\n\n    return _this;\n  }\n\n  _createClass(JSONInput, [{\n    key: \"updateInternalProps\",\n    value: function updateInternalProps() {\n      var colors = {},\n          style = {},\n          theme = themes.dark_vscode_tribute;\n      if ('theme' in this.props) if (typeof this.props.theme === 'string') if (this.props.theme in themes) theme = themes[this.props.theme];\n      colors = theme;\n      if ('colors' in this.props) colors = {\n        default: 'default' in this.props.colors ? this.props.colors.default : colors.default,\n        string: 'string' in this.props.colors ? this.props.colors.string : colors.string,\n        number: 'number' in this.props.colors ? this.props.colors.number : colors.number,\n        colon: 'colon' in this.props.colors ? this.props.colors.colon : colors.colon,\n        keys: 'keys' in this.props.colors ? this.props.colors.keys : colors.keys,\n        keys_whiteSpace: 'keys_whiteSpace' in this.props.colors ? this.props.colors.keys_whiteSpace : colors.keys_whiteSpace,\n        primitive: 'primitive' in this.props.colors ? this.props.colors.primitive : colors.primitive,\n        error: 'error' in this.props.colors ? this.props.colors.error : colors.error,\n        background: 'background' in this.props.colors ? this.props.colors.background : colors.background,\n        background_warning: 'background_warning' in this.props.colors ? this.props.colors.background_warning : colors.background_warning\n      };\n      this.colors = colors;\n      if ('style' in this.props) style = {\n        outerBox: 'outerBox' in this.props.style ? this.props.style.outerBox : {},\n        container: 'container' in this.props.style ? this.props.style.container : {},\n        warningBox: 'warningBox' in this.props.style ? this.props.style.warningBox : {},\n        errorMessage: 'errorMessage' in this.props.style ? this.props.style.errorMessage : {},\n        body: 'body' in this.props.style ? this.props.style.body : {},\n        labelColumn: 'labelColumn' in this.props.style ? this.props.style.labelColumn : {},\n        labels: 'labels' in this.props.style ? this.props.style.labels : {},\n        contentBox: 'contentBox' in this.props.style ? this.props.style.contentBox : {}\n      };else style = {\n        outerBox: {},\n        container: {},\n        warningBox: {},\n        errorMessage: {},\n        body: {},\n        labelColumn: {},\n        labels: {},\n        contentBox: {}\n      };\n      this.style = style;\n      this.confirmGood = 'confirmGood' in this.props ? this.props.confirmGood : true;\n      var totalHeight = this.props.height || '610px',\n          totalWidth = this.props.width || '479px';\n      this.totalHeight = totalHeight;\n      this.totalWidth = totalWidth;\n\n      if (!('onKeyPressUpdate' in this.props) || this.props.onKeyPressUpdate) {\n        if (!this.timer) this.timer = setInterval(this.scheduledUpdate, 100);\n      } else if (this.timer) {\n        clearInterval(this.timer);\n        this.timer = false;\n      }\n\n      this.updateTime = false;\n      this.waitAfterKeyPress = 'waitAfterKeyPress' in this.props ? this.props.waitAfterKeyPress : 1000;\n      this.resetConfiguration = 'reset' in this.props ? this.props.reset : false;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var id = this.props.id,\n          markupText = this.state.markupText,\n          error = this.props.error || this.state.error,\n          colors = this.colors,\n          style = this.style,\n          confirmGood = this.confirmGood,\n          totalHeight = this.totalHeight,\n          totalWidth = this.totalWidth,\n          hasError = !!this.props.error || (error ? 'token' in error : false);\n      this.renderCount++;\n      return React.createElement(\"div\", {\n        name: \"outer-box\",\n        id: id && id + '-outer-box',\n        style: _objectSpread({\n          display: 'block',\n          overflow: 'none',\n          height: totalHeight,\n          width: totalWidth,\n          margin: 0,\n          boxSizing: 'border-box',\n          position: 'relative'\n        }, style.outerBox)\n      }, confirmGood ? React.createElement(\"div\", {\n        style: {\n          opacity: hasError ? 0 : 1,\n          height: '30px',\n          width: '30px',\n          position: 'absolute',\n          top: 0,\n          right: 0,\n          transform: 'translate(-25%,25%)',\n          pointerEvents: 'none',\n          transitionDuration: '0.2s',\n          transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n        }\n      }, React.createElement(\"svg\", {\n        height: \"30px\",\n        width: \"30px\",\n        viewBox: \"0 0 100 100\"\n      }, React.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        fill: \"green\",\n        opacity: \"0.85\",\n        d: \"M39.363,79L16,55.49l11.347-11.419L39.694,56.49L72.983,23L84,34.085L39.363,79z\"\n      }))) : void 0, React.createElement(\"div\", {\n        name: \"container\",\n        id: id && id + '-container',\n        style: _objectSpread({\n          display: 'block',\n          height: totalHeight,\n          width: totalWidth,\n          margin: 0,\n          boxSizing: 'border-box',\n          overflow: 'hidden',\n          fontFamily: 'Roboto, sans-serif'\n        }, style.container),\n        onClick: this.onClick\n      }, React.createElement(\"div\", {\n        name: \"warning-box\",\n        id: id && id + '-warning-box',\n        style: _objectSpread({\n          display: 'block',\n          overflow: 'hidden',\n          height: hasError ? '60px' : '0px',\n          width: '100%',\n          margin: 0,\n          backgroundColor: colors.background_warning,\n          transitionDuration: '0.2s',\n          transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n        }, style.warningBox),\n        onClick: this.onClick\n      }, React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          height: '60px',\n          width: '60px',\n          margin: 0,\n          boxSizing: 'border-box',\n          overflow: 'hidden',\n          verticalAlign: 'top',\n          pointerEvents: 'none'\n        },\n        onClick: this.onClick\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'relative',\n          top: 0,\n          left: 0,\n          height: '60px',\n          width: '60px',\n          margin: 0,\n          pointerEvents: 'none'\n        },\n        onClick: this.onClick\n      }, React.createElement(\"div\", {\n        style: {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          pointerEvents: 'none'\n        },\n        onClick: this.onClick\n      }, React.createElement(\"svg\", {\n        height: \"25px\",\n        width: \"25px\",\n        viewBox: \"0 0 100 100\"\n      }, React.createElement(\"path\", {\n        fillRule: \"evenodd\",\n        clipRule: \"evenodd\",\n        fill: \"red\",\n        d: \"M73.9,5.75c0.467-0.467,1.067-0.7,1.8-0.7c0.7,0,1.283,0.233,1.75,0.7l16.8,16.8  c0.467,0.5,0.7,1.084,0.7,1.75c0,0.733-0.233,1.334-0.7,1.801L70.35,50l23.9,23.95c0.5,0.467,0.75,1.066,0.75,1.8  c0,0.667-0.25,1.25-0.75,1.75l-16.8,16.75c-0.534,0.467-1.117,0.7-1.75,0.7s-1.233-0.233-1.8-0.7L50,70.351L26.1,94.25  c-0.567,0.467-1.167,0.7-1.8,0.7c-0.667,0-1.283-0.233-1.85-0.7L5.75,77.5C5.25,77,5,76.417,5,75.75c0-0.733,0.25-1.333,0.75-1.8  L29.65,50L5.75,26.101C5.25,25.667,5,25.066,5,24.3c0-0.666,0.25-1.25,0.75-1.75l16.8-16.8c0.467-0.467,1.05-0.7,1.75-0.7  c0.733,0,1.333,0.233,1.8,0.7L50,29.65L73.9,5.75z\"\n      }))))), React.createElement(\"span\", {\n        style: {\n          display: 'inline-block',\n          height: '60px',\n          width: 'calc(100% - 60px)',\n          margin: 0,\n          overflow: 'hidden',\n          verticalAlign: 'top',\n          position: 'absolute',\n          pointerEvents: 'none'\n        },\n        onClick: this.onClick\n      }, this.renderErrorMessage())), React.createElement(\"div\", {\n        name: \"body\",\n        id: id && id + '-body',\n        style: _objectSpread({\n          display: 'flex',\n          overflow: 'none',\n          height: hasError ? 'calc(100% - 60px)' : '100%',\n          width: '',\n          margin: 0,\n          resize: 'none',\n          fontFamily: 'Roboto Mono, Monaco, monospace',\n          fontSize: '11px',\n          backgroundColor: colors.background,\n          transitionDuration: '0.2s',\n          transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n        }, style.body),\n        onClick: this.onClick\n      }, React.createElement(\"span\", {\n        name: \"labels\",\n        id: id && id + '-labels',\n        ref: function ref(_ref) {\n          return _this2.refLabels = _ref;\n        },\n        style: _objectSpread({\n          display: 'inline-block',\n          boxSizing: 'border-box',\n          verticalAlign: 'top',\n          height: '100%',\n          width: '44px',\n          margin: 0,\n          padding: '5px 0px 5px 10px',\n          overflow: 'hidden',\n          color: '#D4D4D4'\n        }, style.labelColumn),\n        onClick: this.onClick\n      }, this.renderLabels()), React.createElement(\"span\", {\n        id: id,\n        ref: function ref(_ref2) {\n          return _this2.refContent = _ref2;\n        },\n        contentEditable: true,\n        style: _objectSpread({\n          display: 'inline-block',\n          boxSizing: 'border-box',\n          verticalAlign: 'top',\n          height: '100%',\n          width: '',\n          flex: 1,\n          margin: 0,\n          padding: '5px',\n          overflowX: 'hidden',\n          overflowY: 'auto',\n          wordWrap: 'break-word',\n          whiteSpace: 'pre-line',\n          color: '#D4D4D4',\n          outline: 'none'\n        }, style.contentBox),\n        dangerouslySetInnerHTML: this.createMarkup(markupText),\n        onKeyPress: this.onKeyPress,\n        onKeyDown: this.onKeyDown,\n        onClick: this.onClick,\n        onBlur: this.onBlur,\n        onScroll: this.onScroll,\n        onPaste: this.onPaste,\n        autoComplete: \"off\",\n        autoCorrect: \"off\",\n        autoCapitalize: \"off\",\n        spellCheck: false\n      }))));\n    }\n  }, {\n    key: \"renderErrorMessage\",\n    value: function renderErrorMessage() {\n      var locale = this.props.locale || defaultLocale,\n          error = this.props.error || this.state.error,\n          style = this.style;\n      if (!error) return void 0;\n      return React.createElement(\"p\", {\n        style: _objectSpread({\n          color: 'red',\n          fontSize: '12px',\n          position: 'absolute',\n          width: 'calc(100% - 60px)',\n          height: '60px',\n          boxSizing: 'border-box',\n          margin: 0,\n          padding: 0,\n          paddingRight: '10px',\n          overflowWrap: 'break-word',\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center'\n        }, style.errorMessage)\n      }, format(locale.format, error));\n    }\n  }, {\n    key: \"renderLabels\",\n    value: function renderLabels() {\n      var colors = this.colors,\n          style = this.style,\n          error = this.props.error || this.state.error,\n          errorLine = error ? error.line : -1,\n          lines = this.state.lines ? this.state.lines : 1;\n      var labels = new Array(lines);\n\n      for (var i = 0; i < lines - 1; i++) {\n        labels[i] = i + 1;\n      }\n\n      return labels.map(function (number) {\n        var color = number !== errorLine ? colors.default : 'red';\n        return React.createElement(\"div\", {\n          key: number,\n          style: _objectSpread({}, style.labels, {\n            color: color\n          })\n        }, number);\n      });\n    }\n  }, {\n    key: \"createMarkup\",\n    value: function createMarkup(markupText) {\n      if (markupText === undefined) return {\n        __html: ''\n      };\n      return {\n        __html: '' + markupText\n      };\n    }\n  }, {\n    key: \"newSpan\",\n    value: function newSpan(i, token, depth) {\n      var colors = this.colors,\n          type = token.type,\n          string = token.string;\n      var color = '';\n\n      switch (type) {\n        case 'string':\n        case 'number':\n        case 'primitive':\n        case 'error':\n          color = colors[token.type];\n          break;\n\n        case 'key':\n          if (string === ' ') color = colors.keys_whiteSpace;else color = colors.keys;\n          break;\n\n        case 'symbol':\n          if (string === ':') color = colors.colon;else color = colors.default;\n          break;\n\n        default:\n          color = colors.default;\n          break;\n      }\n\n      if (string.length !== string.replace(/</g, '').replace(/>/g, '').length) string = '<xmp style=display:inline;>' + string + '</xmp>';\n      return '<span' + ' type=\"' + type + '\"' + ' value=\"' + string + '\"' + ' depth=\"' + depth + '\"' + ' style=\"color:' + color + '\"' + '>' + string + '</span>';\n    }\n  }, {\n    key: \"getCursorPosition\",\n    value: function getCursorPosition(countBR) {\n      var _this3 = this;\n\n      /**\r\n       * Need to deprecate countBR\r\n       * It is used to differenciate between good markup render, and aux render when error found\r\n       * Adjustments based on coundBR account for usage of <br> instead of <span> for linebreaks to determine acurate cursor position\r\n       * Find a way to consolidate render styles\r\n       */\n      var isChildOf = function isChildOf(node) {\n        while (node !== null) {\n          if (node === _this3.refContent) return true;\n          node = node.parentNode;\n        }\n\n        return false;\n      };\n\n      var selection = window.getSelection(),\n          charCount = -1,\n          linebreakCount = 0,\n          node;\n\n      if (selection.focusNode && isChildOf(selection.focusNode)) {\n        node = selection.focusNode;\n        charCount = selection.focusOffset;\n\n        while (node) {\n          if (node === this.refContent) break;\n\n          if (node.previousSibling) {\n            node = node.previousSibling;\n            if (countBR) if (node.nodeName === 'BR') linebreakCount++;\n            charCount += node.textContent.length;\n          } else {\n            node = node.parentNode;\n            if (node === null) break;\n          }\n        }\n      }\n\n      return charCount + linebreakCount;\n    }\n  }, {\n    key: \"setCursorPosition\",\n    value: function setCursorPosition(nextPosition) {\n      var _this4 = this;\n\n      if ([false, null, undefined].indexOf(nextPosition) > -1) return;\n\n      var createRange = function createRange(node, chars, range) {\n        if (!range) {\n          range = document.createRange();\n          range.selectNode(node);\n          range.setStart(node, 0);\n        }\n\n        if (chars.count === 0) {\n          range.setEnd(node, chars.count);\n        } else if (node && chars.count > 0) {\n          if (node.nodeType === Node.TEXT_NODE) {\n            if (node.textContent.length < chars.count) chars.count -= node.textContent.length;else {\n              range.setEnd(node, chars.count);\n              chars.count = 0;\n            }\n          } else for (var lp = 0; lp < node.childNodes.length; lp++) {\n            range = createRange(node.childNodes[lp], chars, range);\n            if (chars.count === 0) break;\n          }\n        }\n\n        return range;\n      };\n\n      var setPosition = function setPosition(chars) {\n        if (chars < 0) return;\n        var selection = window.getSelection(),\n            range = createRange(_this4.refContent, {\n          count: chars\n        });\n        if (!range) return;\n        range.collapse(false);\n        selection.removeAllRanges();\n        selection.addRange(range);\n      };\n\n      if (nextPosition > 0) setPosition(nextPosition);else this.refContent.focus();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var cursorOffset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var updateCursorPosition = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var container = this.refContent,\n          data = this.tokenize(container);\n      if ('onChange' in this.props) this.props.onChange({\n        plainText: data.indented,\n        markupText: data.markup,\n        json: data.json,\n        jsObject: data.jsObject,\n        lines: data.lines,\n        error: data.error\n      });\n      var cursorPosition = this.getCursorPosition(data.error) + cursorOffset;\n      this.setState({\n        plainText: data.indented,\n        markupText: data.markup,\n        json: data.json,\n        jsObject: data.jsObject,\n        lines: data.lines,\n        error: data.error\n      });\n      this.updateTime = false;\n      if (updateCursorPosition) this.setCursorPosition(cursorPosition);\n    }\n  }, {\n    key: \"scheduledUpdate\",\n    value: function scheduledUpdate() {\n      if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n      var updateTime = this.updateTime;\n      if (updateTime === false) return;\n      if (updateTime > new Date().getTime()) return;\n      this.update();\n    }\n  }, {\n    key: \"setUpdateTime\",\n    value: function setUpdateTime() {\n      if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n      this.updateTime = new Date().getTime() + this.waitAfterKeyPress;\n    }\n  }, {\n    key: \"stopEvent\",\n    value: function stopEvent(event) {\n      if (!event) return;\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }, {\n    key: \"onKeyPress\",\n    value: function onKeyPress(event) {\n      var ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n      if (this.props.viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n      if (!ctrlOrMetaIsPressed) this.setUpdateTime();\n    }\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(event) {\n      var viewOnly = !!this.props.viewOnly;\n      var ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n\n      switch (event.key) {\n        case 'Tab':\n          this.stopEvent(event);\n          if (viewOnly) break;\n          document.execCommand(\"insertText\", false, \"  \");\n          this.setUpdateTime();\n          break;\n\n        case 'Backspace':\n        case 'Delete':\n          if (viewOnly) this.stopEvent(event);\n          this.setUpdateTime();\n          break;\n\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case 'ArrowUp':\n        case 'ArrowDown':\n          this.setUpdateTime();\n          break;\n\n        case 'a':\n        case 'c':\n          if (viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n          break;\n\n        default:\n          if (viewOnly) this.stopEvent(event);\n          break;\n      }\n    }\n  }, {\n    key: \"onPaste\",\n    value: function onPaste(event) {\n      if (this.props.viewOnly) {\n        this.stopEvent(event);\n      } else {\n        event.preventDefault();\n        var text = event.clipboardData.getData('text/plain');\n        document.execCommand('insertText', false, text);\n      }\n\n      this.update();\n    }\n  }, {\n    key: \"onClick\",\n    value: function onClick() {\n      if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n    }\n  }, {\n    key: \"onBlur\",\n    value: function onBlur() {\n      if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n      var container = this.refContent,\n          data = this.tokenize(container);\n      if ('onBlur' in this.props) this.props.onBlur({\n        plainText: data.indented,\n        markupText: data.markup,\n        json: data.json,\n        jsObject: data.jsObject,\n        lines: data.lines,\n        error: data.error\n      });\n    }\n  }, {\n    key: \"onScroll\",\n    value: function onScroll(event) {\n      this.refLabels.scrollTop = event.target.scrollTop;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.updateInternalProps();\n      this.showPlaceholder();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.showPlaceholder();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.timer) clearInterval(this.timer);\n    }\n  }, {\n    key: \"showPlaceholder\",\n    value: function showPlaceholder() {\n      var placeholderDoesNotExist = !('placeholder' in this.props);\n      if (placeholderDoesNotExist) return;\n      var placeholder = this.props.placeholder;\n      var placeholderHasEmptyValues = [undefined, null].indexOf(placeholder) > -1;\n      if (placeholderHasEmptyValues) return;\n      var _this$state = this.state,\n          prevPlaceholder = _this$state.prevPlaceholder,\n          jsObject = _this$state.jsObject;\n      var resetConfiguration = this.resetConfiguration;\n      var placeholderDataType = getType(placeholder);\n      var unexpectedDataType = ['object', 'array'].indexOf(placeholderDataType) === -1;\n      if (unexpectedDataType) err.throwError('showPlaceholder', 'placeholder', 'either an object or an array');\n      var samePlaceholderValues = identical(placeholder, prevPlaceholder); // Component will always re-render when new placeholder value is any different from previous placeholder value.\n\n      var componentShouldUpdate = !samePlaceholderValues;\n\n      if (!componentShouldUpdate) {\n        if (resetConfiguration) {\n          /**\r\n           * If 'reset' property is set true or is truthy,\r\n           * any difference between placeholder and current value\r\n           * should trigger component re-render\r\n           */\n          if (jsObject !== undefined) componentShouldUpdate = !identical(placeholder, jsObject);\n        }\n      }\n\n      if (!componentShouldUpdate) return;\n      var data = this.tokenize(placeholder);\n      this.setState({\n        prevPlaceholder: placeholder,\n        plainText: data.indentation,\n        markupText: data.markup,\n        lines: data.lines,\n        error: data.error\n      });\n    }\n  }, {\n    key: \"tokenize\",\n    value: function tokenize(something) {\n      if (typeof something !== 'object') return console.error('tokenize() expects object type properties only. Got \\'' + typeof something + '\\' type instead.');\n      var locale = this.props.locale || defaultLocale;\n      var newSpan = this.newSpan;\n      /**\r\n       *     DOM NODE || ONBLUR OR UPDATE\r\n       */\n\n      if ('nodeType' in something) {\n        var quarkize = function quarkize(text) {\n          var prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n          var buffer = {\n            active: false,\n            string: '',\n            number: '',\n            symbol: '',\n            space: '',\n            delimiter: '',\n            quarks: []\n          };\n\n          function pushAndStore(char, type) {\n            switch (type) {\n              case 'symbol':\n              case 'delimiter':\n                if (buffer.active) buffer.quarks.push({\n                  string: buffer[buffer.active],\n                  type: prefix + '-' + buffer.active\n                });\n                buffer[buffer.active] = '';\n                buffer.active = type;\n                buffer[buffer.active] = char;\n                break;\n\n              default:\n                if (type !== buffer.active || [buffer.string, char].indexOf('\\n') > -1) {\n                  if (buffer.active) buffer.quarks.push({\n                    string: buffer[buffer.active],\n                    type: prefix + '-' + buffer.active\n                  });\n                  buffer[buffer.active] = '';\n                  buffer.active = type;\n                  buffer[buffer.active] = char;\n                } else buffer[type] += char;\n\n                break;\n            }\n          }\n\n          function finalPush() {\n            if (buffer.active) {\n              buffer.quarks.push({\n                string: buffer[buffer.active],\n                type: prefix + '-' + buffer.active\n              });\n              buffer[buffer.active] = '';\n              buffer.active = false;\n            }\n          }\n\n          for (var i = 0; i < text.length; i++) {\n            var char = text.charAt(i);\n\n            switch (char) {\n              case '\"':\n              case \"'\":\n                pushAndStore(char, 'delimiter');\n                break;\n\n              case ' ':\n              case \"\\xA0\":\n                pushAndStore(char, 'space');\n                break;\n\n              case '{':\n              case '}':\n              case '[':\n              case ']':\n              case ':':\n              case ',':\n                pushAndStore(char, 'symbol');\n                break;\n\n              case '0':\n              case '1':\n              case '2':\n              case '3':\n              case '4':\n              case '5':\n              case '6':\n              case '7':\n              case '8':\n              case '9':\n                if (buffer.active === 'string') pushAndStore(char, 'string');else pushAndStore(char, 'number');\n                break;\n\n              case '-':\n                if (i < text.length - 1) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1) {\n                  pushAndStore(char, 'number');\n                  break;\n                }\n\n              case '.':\n                if (i < text.length - 1 && i > 0) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1 && '0123456789'.indexOf(text.charAt(i - 1)) > -1) {\n                  pushAndStore(char, 'number');\n                  break;\n                }\n\n              default:\n                pushAndStore(char, 'string');\n                break;\n            }\n          }\n\n          finalPush();\n          return buffer.quarks;\n        };\n\n        var validToken = function validToken(string, type) {\n          var quotes = '\\'\"';\n          var firstChar = '',\n              lastChar = '',\n              quoteType = false;\n\n          switch (type) {\n            case 'primitive':\n              if (['true', 'false', 'null', 'undefined'].indexOf(string) === -1) return false;\n              break;\n\n            case 'string':\n              if (string.length < 2) return false;\n              firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n              if (quoteType === -1) return false;\n              if (firstChar !== lastChar) return false;\n\n              for (var i = 0; i < string.length; i++) {\n                if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n              }\n\n              break;\n\n            case 'key':\n              if (string.length === 0) return false;\n              firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n\n              if (quoteType > -1) {\n                if (string.length === 1) return false;\n                if (firstChar !== lastChar) return false;\n\n                for (var i = 0; i < string.length; i++) {\n                  if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n                }\n              } else {\n                var nonAlphanumeric = '\\'\"`.,:;{}[]&<>=~*%\\\\|/-+!?@^ \\xa0';\n\n                for (var i = 0; i < nonAlphanumeric.length; i++) {\n                  var nonAlpha = nonAlphanumeric.charAt(i);\n                  if (string.indexOf(nonAlpha) > -1) return false;\n                }\n              }\n\n              break;\n\n            case 'number':\n              for (var i = 0; i < string.length; i++) {\n                if ('0123456789'.indexOf(string.charAt(i)) === -1) if (i === 0) {\n                  if ('-' !== string.charAt(0)) return false;\n                } else if ('.' !== string.charAt(i)) return false;\n              }\n\n              break;\n\n            case 'symbol':\n              if (string.length > 1) return false;\n              if ('{[:]},'.indexOf(string) === -1) return false;\n              break;\n\n            case 'colon':\n              if (string.length > 1) return false;\n              if (':' !== string) return false;\n              break;\n\n            default:\n              return true;\n              break;\n          }\n\n          return true;\n        };\n\n        var tokenFollowed = function tokenFollowed() {\n          var last = buffer.tokens_normalize.length - 1;\n          if (last < 1) return false;\n\n          for (var i = last; i >= 0; i--) {\n            var previousToken = buffer.tokens_normalize[i];\n\n            switch (previousToken.type) {\n              case 'space':\n              case 'linebreak':\n                break;\n\n              default:\n                return previousToken;\n                break;\n            }\n          }\n\n          return false;\n        };\n\n        var setError = function setError(tokenID, reason) {\n          var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n          error = {\n            token: tokenID,\n            line: line,\n            reason: reason\n          };\n          buffer.tokens_merge[tokenID + offset].type = 'error';\n        };\n\n        var followedBySymbol = function followedBySymbol(tokenID, options) {\n          if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n          if (options === undefined) console.error('options argument must be an array.');\n          if (tokenID === buffer.tokens_merge.length - 1) return false;\n\n          for (var i = tokenID + 1; i < buffer.tokens_merge.length; i++) {\n            var _nextToken = buffer.tokens_merge[i];\n\n            switch (_nextToken.type) {\n              case 'space':\n              case 'linebreak':\n                break;\n\n              case 'symbol':\n              case 'colon':\n                if (options.indexOf(_nextToken.string) > -1) return i;else return false;\n                break;\n\n              default:\n                return false;\n                break;\n            }\n          }\n\n          return false;\n        };\n\n        var followsSymbol = function followsSymbol(tokenID, options) {\n          if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n          if (options === undefined) console.error('options argument must be an array.');\n          if (tokenID === 0) return false;\n\n          for (var i = tokenID - 1; i >= 0; i--) {\n            var _previousToken = buffer.tokens_merge[i];\n\n            switch (_previousToken.type) {\n              case 'space':\n              case 'linebreak':\n                break;\n\n              case 'symbol':\n              case 'colon':\n                if (options.indexOf(_previousToken.string) > -1) return true;\n                return false;\n                break;\n\n              default:\n                return false;\n                break;\n            }\n          }\n\n          return false;\n        };\n\n        var typeFollowed = function typeFollowed(tokenID) {\n          if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n          if (tokenID === 0) return false;\n\n          for (var i = tokenID - 1; i >= 0; i--) {\n            var _previousToken2 = buffer.tokens_merge[i];\n\n            switch (_previousToken2.type) {\n              case 'space':\n              case 'linebreak':\n                break;\n\n              default:\n                return _previousToken2.type;\n                break;\n            }\n          }\n\n          return false;\n        };\n\n        var newIndent = function newIndent() {\n          var space = [];\n\n          for (var i = 0; i < _depth * 2; i++) {\n            space.push('&nbsp;');\n          }\n\n          return space.join('');\n        };\n\n        var newLineBreak = function newLineBreak() {\n          var byPass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          _line++;\n\n          if (_depth > 0 || byPass) {\n            return '<br>';\n          }\n\n          return '';\n        };\n\n        var newLineBreakAndIndent = function newLineBreakAndIndent() {\n          var byPass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          return newLineBreak(byPass) + newIndent();\n        };\n\n        var containerNode = something.cloneNode(true),\n            hasChildren = containerNode.hasChildNodes();\n        if (!hasChildren) return '';\n        var children = containerNode.childNodes;\n        var buffer = {\n          tokens_unknown: [],\n          tokens_proto: [],\n          tokens_split: [],\n          tokens_fallback: [],\n          tokens_normalize: [],\n          tokens_merge: [],\n          tokens_plainText: '',\n          indented: '',\n          json: '',\n          jsObject: undefined,\n          markup: ''\n        };\n\n        for (var i = 0; i < children.length; i++) {\n          var child = children[i];\n          var info = {};\n\n          switch (child.nodeName) {\n            case 'SPAN':\n              info = {\n                string: child.textContent,\n                type: child.attributes.type.textContent\n              };\n              buffer.tokens_unknown.push(info);\n              break;\n\n            case 'DIV':\n              buffer.tokens_unknown.push({\n                string: child.textContent,\n                type: 'unknown'\n              });\n              break;\n\n            case 'BR':\n              if (child.textContent === '') buffer.tokens_unknown.push({\n                string: '\\n',\n                type: 'unknown'\n              });\n              break;\n\n            case '#text':\n              buffer.tokens_unknown.push({\n                string: child.wholeText,\n                type: 'unknown'\n              });\n              break;\n\n            case 'FONT':\n              buffer.tokens_unknown.push({\n                string: child.textContent,\n                type: 'unknown'\n              });\n              break;\n\n            default:\n              console.error('Unrecognized node:', {\n                child: child\n              });\n              break;\n          }\n        }\n\n        for (var i = 0; i < buffer.tokens_unknown.length; i++) {\n          var token = buffer.tokens_unknown[i];\n          buffer.tokens_proto = buffer.tokens_proto.concat(quarkize(token.string, 'proto'));\n        }\n\n        for (var i = 0; i < buffer.tokens_proto.length; i++) {\n          var _token = buffer.tokens_proto[i];\n\n          if (_token.type.indexOf('proto') === -1) {\n            if (!validToken(_token.string, _token.type)) {\n              buffer.tokens_split = buffer.tokens_split.concat(quarkize(_token.string, 'split'));\n            } else buffer.tokens_split.push(_token);\n          } else buffer.tokens_split.push(_token);\n        }\n\n        for (var i = 0; i < buffer.tokens_split.length; i++) {\n          var _token2 = buffer.tokens_split[i];\n          var type = _token2.type,\n              string = _token2.string,\n              length = string.length,\n              fallback = [];\n\n          if (type.indexOf('-') > -1) {\n            type = type.slice(type.indexOf('-') + 1);\n            if (type !== 'string') fallback.push('string');\n            fallback.push('key');\n            fallback.push('error');\n          }\n\n          var tokul = {\n            string: string,\n            length: length,\n            type: type,\n            fallback: fallback\n          };\n          buffer.tokens_fallback.push(tokul);\n        }\n\n        var buffer2 = {\n          brackets: [],\n          stringOpen: false,\n          isValue: false\n        };\n\n        for (var i = 0; i < buffer.tokens_fallback.length; i++) {\n          var _token3 = buffer.tokens_fallback[i];\n          var _type2 = _token3.type,\n              _string2 = _token3.string;\n          var normalToken = {\n            type: _type2,\n            string: _string2\n          };\n\n          switch (_type2) {\n            case 'symbol':\n            case 'colon':\n              if (buffer2.stringOpen) {\n                if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n                break;\n              }\n\n              switch (_string2) {\n                case '[':\n                case '{':\n                  buffer2.brackets.push(_string2);\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  break;\n\n                case ']':\n                case '}':\n                  buffer2.brackets.pop();\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  break;\n\n                case ',':\n                  if (tokenFollowed().type === 'colon') break;\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  break;\n\n                case ':':\n                  normalToken.type = 'colon';\n                  buffer2.isValue = true;\n                  break;\n              }\n\n              break;\n\n            case 'delimiter':\n              if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n\n              if (!buffer2.stringOpen) {\n                buffer2.stringOpen = _string2;\n                break;\n              }\n\n              if (i > 0) {\n                var previousToken = buffer.tokens_fallback[i - 1],\n                    _string = previousToken.string,\n                    _type = previousToken.type,\n                    _char = _string.charAt(_string.length - 1);\n\n                if (_type === 'string' && _char === '\\\\') break;\n              }\n\n              if (buffer2.stringOpen === _string2) {\n                buffer2.stringOpen = false;\n                break;\n              }\n\n              break;\n\n            case 'primitive':\n            case 'string':\n              if (['false', 'true', 'null', 'undefined'].indexOf(_string2) > -1) {\n                var lastIndex = buffer.tokens_normalize.length - 1;\n\n                if (lastIndex >= 0) {\n                  if (buffer.tokens_normalize[lastIndex].type !== 'string') {\n                    normalToken.type = 'primitive';\n                    break;\n                  }\n\n                  normalToken.type = 'string';\n                  break;\n                }\n\n                normalToken.type = 'primitive';\n                break;\n              }\n\n              if (_string2 === '\\n') if (!buffer2.stringOpen) {\n                normalToken.type = 'linebreak';\n                break;\n              }\n              if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n\n            case 'space':\n              if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n\n            case 'number':\n              if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n\n            default:\n              break;\n          }\n\n          buffer.tokens_normalize.push(normalToken);\n        }\n\n        for (var i = 0; i < buffer.tokens_normalize.length; i++) {\n          var _token4 = buffer.tokens_normalize[i];\n          var mergedToken = {\n            string: _token4.string,\n            type: _token4.type,\n            tokens: [i]\n          };\n          if (['symbol', 'colon'].indexOf(_token4.type) === -1) if (i + 1 < buffer.tokens_normalize.length) {\n            var count = 0;\n\n            for (var u = i + 1; u < buffer.tokens_normalize.length; u++) {\n              var nextToken = buffer.tokens_normalize[u];\n              if (_token4.type !== nextToken.type) break;\n              mergedToken.string += nextToken.string;\n              mergedToken.tokens.push(u);\n              count++;\n            }\n\n            i += count;\n          }\n          buffer.tokens_merge.push(mergedToken);\n        }\n\n        var quotes = '\\'\"',\n            alphanumeric = 'abcdefghijklmnopqrstuvwxyz' + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + '0123456789' + '_$';\n        var error = false,\n            line = buffer.tokens_merge.length > 0 ? 1 : 0;\n        buffer2 = {\n          brackets: [],\n          stringOpen: false,\n          isValue: false\n        };\n        var bracketList = [];\n\n        for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          if (error) break;\n          var _token5 = buffer.tokens_merge[i],\n              _string3 = _token5.string,\n              _type3 = _token5.type,\n              found = false;\n\n          switch (_type3) {\n            case 'space':\n              break;\n\n            case 'linebreak':\n              line++;\n              break;\n\n            case 'symbol':\n              switch (_string3) {\n                case '{':\n                case '[':\n                  found = followsSymbol(i, ['}', ']']);\n\n                  if (found) {\n                    setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                      firstToken: buffer.tokens_merge[found].string,\n                      secondToken: _string3\n                    }));\n                    break;\n                  }\n\n                  if (_string3 === '[' && i > 0) if (!followsSymbol(i, [':', '[', ','])) {\n                    setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                      firstToken: \"[\",\n                      secondToken: [\":\", \"[\", \",\"]\n                    }));\n                    break;\n                  }\n                  if (_string3 === '{') if (followsSymbol(i, ['{'])) {\n                    setError(i, format(locale.invalidToken.double, {\n                      token: \"{\"\n                    }));\n                    break;\n                  }\n                  buffer2.brackets.push(_string3);\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  bracketList.push({\n                    i: i,\n                    line: line,\n                    string: _string3\n                  });\n                  break;\n\n                case '}':\n                case ']':\n                  if (_string3 === '}') if (buffer2.brackets[buffer2.brackets.length - 1] !== '{') {\n                    setError(i, format(locale.brace.curly.missingOpen));\n                    break;\n                  }\n                  if (_string3 === '}') if (followsSymbol(i, [','])) {\n                    setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                      firstToken: \",\",\n                      secondToken: \"}\"\n                    }));\n                    break;\n                  }\n                  if (_string3 === ']') if (buffer2.brackets[buffer2.brackets.length - 1] !== '[') {\n                    setError(i, format(locale.brace.square.missingOpen));\n                    break;\n                  }\n                  if (_string3 === ']') if (followsSymbol(i, [':'])) {\n                    setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                      firstToken: \":\",\n                      secondToken: \"]\"\n                    }));\n                    break;\n                  }\n                  buffer2.brackets.pop();\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  bracketList.push({\n                    i: i,\n                    line: line,\n                    string: _string3\n                  });\n                  break;\n\n                case ',':\n                  found = followsSymbol(i, ['{']);\n\n                  if (found) {\n                    if (followedBySymbol(i, ['}'])) {\n                      setError(i, format(locale.brace.curly.cannotWrap, {\n                        token: \",\"\n                      }));\n                      break;\n                    }\n\n                    setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                      firstToken: \"{\",\n                      secondToken: \",\"\n                    }));\n                    break;\n                  }\n\n                  if (followedBySymbol(i, ['}', ',', ']'])) {\n                    setError(i, format(locale.noTrailingOrLeadingComma));\n                    break;\n                  }\n\n                  found = typeFollowed(i);\n\n                  switch (found) {\n                    case 'key':\n                    case 'colon':\n                      setError(i, format(locale.invalidToken.termSequence.prohibited, {\n                        firstTerm: found === 'key' ? locale.types.key : locale.symbols.colon,\n                        secondTerm: locale.symbols.comma\n                      }));\n                      break;\n\n                    case 'symbol':\n                      if (followsSymbol(i, ['{'])) {\n                        setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                          firstToken: \"{\",\n                          secondToken: \",\"\n                        }));\n                        break;\n                      }\n\n                      break;\n\n                    default:\n                      break;\n                  }\n\n                  buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                  break;\n\n                default:\n                  break;\n              }\n\n              buffer.json += _string3;\n              break;\n\n            case 'colon':\n              found = followsSymbol(i, ['[']);\n\n              if (found && followedBySymbol(i, [']'])) {\n                setError(i, format(locale.brace.square.cannotWrap, {\n                  token: \":\"\n                }));\n                break;\n              }\n\n              if (found) {\n                setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                  firstToken: \"[\",\n                  secondToken: \":\"\n                }));\n                break;\n              }\n\n              if (typeFollowed(i) !== 'key') {\n                setError(i, format(locale.invalidToken.termSequence.permitted, {\n                  firstTerm: locale.symbols.colon,\n                  secondTerm: locale.types.key\n                }));\n                break;\n              }\n\n              if (followedBySymbol(i, ['}', ']'])) {\n                setError(i, format(locale.invalidToken.termSequence.permitted, {\n                  firstTerm: locale.symbols.colon,\n                  secondTerm: locale.types.value\n                }));\n                break;\n              }\n\n              buffer2.isValue = true;\n              buffer.json += _string3;\n              break;\n\n            case 'key':\n            case 'string':\n              var firstChar = _string3.charAt(0),\n                  lastChar = _string3.charAt(_string3.length - 1),\n                  quote_primary = quotes.indexOf(firstChar);\n\n              if (quotes.indexOf(firstChar) === -1) if (quotes.indexOf(lastChar) !== -1) {\n                setError(i, format(locale.string.missingOpen, {\n                  quote: firstChar\n                }));\n                break;\n              }\n              if (quotes.indexOf(lastChar) === -1) if (quotes.indexOf(firstChar) !== -1) {\n                setError(i, format(locale.string.missingClose, {\n                  quote: firstChar\n                }));\n                break;\n              }\n              if (quotes.indexOf(firstChar) > -1) if (firstChar !== lastChar) {\n                setError(i, format(locale.string.missingClose, {\n                  quote: firstChar\n                }));\n                break;\n              }\n              if ('string' === _type3) if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) {\n                setError(i, format(locale.string.mustBeWrappedByQuotes));\n                break;\n              }\n              if ('key' === _type3) if (followedBySymbol(i, ['}', ']'])) {\n                setError(i, format(locale.invalidToken.termSequence.permitted, {\n                  firstTerm: locale.types.key,\n                  secondTerm: locale.symbols.colon\n                }));\n              }\n              if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) for (var h = 0; h < _string3.length; h++) {\n                if (error) break;\n\n                var c = _string3.charAt(h);\n\n                if (alphanumeric.indexOf(c) === -1) {\n                  setError(i, format(locale.string.nonAlphanumeric, {\n                    token: c\n                  }));\n                  break;\n                }\n              }\n              if (firstChar === \"'\") _string3 = '\"' + _string3.slice(1, -1) + '\"';else if (firstChar !== '\"') _string3 = '\"' + _string3 + '\"';\n              if ('key' === _type3) if ('key' === typeFollowed(i)) {\n                if (i > 0) if (!isNaN(buffer.tokens_merge[i - 1])) {\n                  buffer.tokens_merge[i - 1] += buffer.tokens_merge[i];\n                  setError(i, format(locale.key.numberAndLetterMissingQuotes));\n                  break;\n                }\n                setError(i, format(locale.key.spaceMissingQuotes));\n                break;\n              }\n              if ('key' === _type3) if (!followsSymbol(i, ['{', ','])) {\n                setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                  firstToken: _type3,\n                  secondToken: [\"{\", \",\"]\n                }));\n                break;\n              }\n              if ('string' === _type3) if (!followsSymbol(i, ['[', ':', ','])) {\n                setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                  firstToken: _type3,\n                  secondToken: [\"[\", \":\", \",\"]\n                }));\n                break;\n              }\n              if ('key' === _type3) if (buffer2.isValue) {\n                setError(i, format(locale.string.unexpectedKey));\n                break;\n              }\n              if ('string' === _type3) if (!buffer2.isValue) {\n                setError(i, format(locale.key.unexpectedString));\n                break;\n              }\n              buffer.json += _string3;\n              break;\n\n            case 'number':\n            case 'primitive':\n              if (followsSymbol(i, ['{'])) {\n                buffer.tokens_merge[i].type = 'key';\n                _type3 = buffer.tokens_merge[i].type;\n                _string3 = '\"' + _string3 + '\"';\n              } else if (typeFollowed(i) === 'key') {\n                buffer.tokens_merge[i].type = 'key';\n                _type3 = buffer.tokens_merge[i].type;\n              } else if (!followsSymbol(i, ['[', ':', ','])) {\n                setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                  firstToken: _type3,\n                  secondToken: [\"[\", \":\", \",\"]\n                }));\n                break;\n              }\n\n              if (_type3 !== 'key') if (!buffer2.isValue) {\n                buffer.tokens_merge[i].type = 'key';\n                _type3 = buffer.tokens_merge[i].type;\n                _string3 = '\"' + _string3 + '\"';\n              }\n              if (_type3 === 'primitive') if (_string3 === 'undefined') setError(i, format(locale.invalidToken.useInstead, {\n                badToken: \"undefined\",\n                goodToken: \"null\"\n              }));\n              buffer.json += _string3;\n              break;\n          }\n        }\n\n        var noEscapedSingleQuote = '';\n\n        for (var i = 0; i < buffer.json.length; i++) {\n          var current = buffer.json.charAt(i),\n              next = '';\n\n          if (i + 1 < buffer.json.length) {\n            next = buffer.json.charAt(i + 1);\n\n            if (current === '\\\\' && next === \"'\") {\n              noEscapedSingleQuote += next;\n              i++;\n              continue;\n            }\n          }\n\n          noEscapedSingleQuote += current;\n        }\n\n        buffer.json = noEscapedSingleQuote;\n\n        if (!error) {\n          var removePair = function removePair(index) {\n            bracketList.splice(index + 1, 1);\n            bracketList.splice(index, 1);\n            if (!delta) delta = true;\n          };\n\n          var maxIterations = Math.ceil(bracketList.length / 2);\n          var round = 0,\n              delta = false;\n\n          while (bracketList.length > 0) {\n            delta = false;\n\n            for (var tokenCount = 0; tokenCount < bracketList.length - 1; tokenCount++) {\n              var pair = bracketList[tokenCount].string + bracketList[tokenCount + 1].string;\n              if (['[]', '{}'].indexOf(pair) > -1) removePair(tokenCount);\n            }\n\n            round++;\n            if (!delta) break;\n            if (round >= maxIterations) break;\n          }\n\n          if (bracketList.length > 0) {\n            var _tokenString = bracketList[0].string,\n                _tokenPosition = bracketList[0].i,\n                _closingBracketType = _tokenString === '[' ? ']' : '}';\n\n            line = bracketList[0].line;\n            setError(_tokenPosition, format(locale.brace[_closingBracketType === ']' ? 'square' : 'curly'].missingClose));\n          }\n        }\n\n        if (!error) if ([undefined, ''].indexOf(buffer.json) === -1) try {\n          buffer.jsObject = JSON.parse(buffer.json);\n        } catch (err) {\n          var errorMessage = err.message,\n              subsMark = errorMessage.indexOf('position');\n          if (subsMark === -1) throw new Error('Error parsing failed');\n          var errPositionStr = errorMessage.substring(subsMark + 9, errorMessage.length),\n              errPosition = parseInt(errPositionStr);\n          var charTotal = 0,\n              tokenIndex = 0,\n              _token6 = false,\n              _line2 = 1,\n              exitWhile = false;\n\n          while (charTotal < errPosition && !exitWhile) {\n            _token6 = buffer.tokens_merge[tokenIndex];\n            if ('linebreak' === _token6.type) _line2++;\n            if (['space', 'linebreak'].indexOf(_token6.type) === -1) charTotal += _token6.string.length;\n            if (charTotal >= errPosition) break;\n            tokenIndex++;\n            if (!buffer.tokens_merge[tokenIndex + 1]) exitWhile = true;\n          }\n\n          line = _line2;\n          var backslashCount = 0;\n\n          for (var _i = 0; _i < _token6.string.length; _i++) {\n            var char = _token6.string.charAt(_i);\n\n            if (char === '\\\\') backslashCount = backslashCount > 0 ? backslashCount + 1 : 1;else {\n              if (backslashCount % 2 !== 0 || backslashCount === 0) if ('\\'\"bfnrt'.indexOf(char) === -1) {\n                setError(tokenIndex, format(locale.invalidToken.unexpected, {\n                  token: '\\\\'\n                }));\n              }\n              backslashCount = 0;\n            }\n          }\n\n          if (!error) setError(tokenIndex, format(locale.invalidToken.unexpected, {\n            token: _token6.string\n          }));\n        }\n        var _line = 1,\n            _depth = 0;\n        ;\n        if (!error) for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          var _token7 = buffer.tokens_merge[i],\n              _string4 = _token7.string,\n              _type4 = _token7.type;\n\n          switch (_type4) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'string':\n            case 'number':\n            case 'primitive':\n            case 'error':\n              buffer.markup += (followsSymbol(i, [',', '[']) ? newLineBreakAndIndent() : '') + newSpan(i, _token7, _depth);\n              break;\n\n            case 'key':\n              buffer.markup += newLineBreakAndIndent() + newSpan(i, _token7, _depth);\n              break;\n\n            case 'colon':\n              buffer.markup += newSpan(i, _token7, _depth) + '&nbsp;';\n              break;\n\n            case 'symbol':\n              switch (_string4) {\n                case '[':\n                case '{':\n                  buffer.markup += (!followsSymbol(i, [':']) ? newLineBreakAndIndent() : '') + newSpan(i, _token7, _depth);\n                  _depth++;\n                  break;\n\n                case ']':\n                case '}':\n                  _depth--;\n\n                  var islastToken = i === buffer.tokens_merge.length - 1,\n                      _adjustment = i > 0 ? ['[', '{'].indexOf(buffer.tokens_merge[i - 1].string) > -1 ? '' : newLineBreakAndIndent(islastToken) : '';\n\n                  buffer.markup += _adjustment + newSpan(i, _token7, _depth);\n                  break;\n\n                case ',':\n                  buffer.markup += newSpan(i, _token7, _depth);\n                  break;\n              }\n\n              break;\n          }\n        }\n\n        if (error) {\n          var countCarrigeReturn = function countCarrigeReturn(string) {\n            var count = 0;\n\n            for (var i = 0; i < string.length; i++) {\n              if (['\\n', '\\r'].indexOf(string[i]) > -1) count++;\n            }\n\n            return count;\n          };\n\n          var _line_fallback = 1;\n          _line = 1;\n\n          for (var i = 0; i < buffer.tokens_merge.length; i++) {\n            var _token8 = buffer.tokens_merge[i],\n                _type5 = _token8.type,\n                _string5 = _token8.string;\n            if (_type5 === 'linebreak') _line++;\n            buffer.markup += newSpan(i, _token8, _depth);\n            _line_fallback += countCarrigeReturn(_string5);\n          }\n\n          _line++;\n          _line_fallback++;\n          if (_line < _line_fallback) _line = _line_fallback;\n        }\n\n        for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          var _token9 = buffer.tokens_merge[i];\n          buffer.indented += _token9.string;\n          if (['space', 'linebreak'].indexOf(_token9.type) === -1) buffer.tokens_plainText += _token9.string;\n        }\n\n        if (error) {\n          var isFunction = function isFunction(functionToCheck) {\n            return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n          };\n\n          if ('modifyErrorText' in this.props) if (isFunction(this.props.modifyErrorText)) error.reason = this.props.modifyErrorText(error.reason);\n        }\n\n        return {\n          tokens: buffer.tokens_merge,\n          noSpaces: buffer.tokens_plainText,\n          indented: buffer.indented,\n          json: buffer.json,\n          jsObject: buffer.jsObject,\n          markup: buffer.markup,\n          lines: _line,\n          error: error\n        };\n      }\n\n      ;\n      /**\r\n       *     JS OBJECTS || PLACEHOLDER\r\n       */\n\n      if (!('nodeType' in something)) {\n        var escape_character = function escape_character() {\n          if (_buffer.currentChar !== '\\\\') return false;\n          return true;\n        };\n\n        var extract = function extract(string, position) {\n          return string.slice(0, position) + string.slice(position + 1);\n        };\n\n        var determine_string = function determine_string() {\n          if ('\\'\"'.indexOf(_buffer.currentChar) === -1) return false;\n\n          if (!_buffer.stringOpen) {\n            add_tokenSecondary();\n            _buffer.stringStart = _buffer.position;\n            _buffer.stringOpen = _buffer.currentChar;\n            return true;\n          }\n\n          if (_buffer.stringOpen === _buffer.currentChar) {\n            add_tokenSecondary();\n\n            var stringToken = _buffer.inputText.substring(_buffer.stringStart, _buffer.position + 1);\n\n            add_tokenPrimary(stringToken);\n            _buffer.stringOpen = false;\n            return true;\n          }\n\n          return false;\n        };\n\n        var determine_value = function determine_value() {\n          if (':,{}[]'.indexOf(_buffer.currentChar) === -1) return false;\n          if (_buffer.stringOpen) return false;\n          add_tokenSecondary();\n          add_tokenPrimary(_buffer.currentChar);\n\n          switch (_buffer.currentChar) {\n            case ':':\n              _buffer.isValue = true;\n              return true;\n              break;\n\n            case '{':\n            case '[':\n              _buffer.brackets.push(_buffer.currentChar);\n\n              break;\n\n            case '}':\n            case ']':\n              _buffer.brackets.pop();\n\n              break;\n          }\n\n          if (_buffer.currentChar !== ':') _buffer.isValue = _buffer.brackets[_buffer.brackets.length - 1] === '[';\n          return true;\n        };\n\n        var add_tokenSecondary = function add_tokenSecondary() {\n          if (_buffer.tokenSecondary.length === 0) return false;\n\n          _buffer.tokens.push(_buffer.tokenSecondary);\n\n          _buffer.tokenSecondary = '';\n          return true;\n        };\n\n        var add_tokenPrimary = function add_tokenPrimary(value) {\n          if (value.length === 0) return false;\n\n          _buffer.tokens.push(value);\n\n          return true;\n        };\n\n        var indent = function indent(number) {\n          var space = [];\n\n          for (var i = 0; i < number * 2; i++) {\n            space.push(' ');\n          }\n\n          return (number > 0 ? '\\n' : '') + space.join('');\n        };\n\n        var indentII = function indentII(number) {\n          var space = [];\n          if (number > 0) lines++;\n\n          for (var i = 0; i < number * 2; i++) {\n            space.push('&nbsp;');\n          }\n\n          return (number > 0 ? '<br>' : '') + space.join('');\n        };\n\n        var _buffer = {\n          inputText: JSON.stringify(something),\n          position: 0,\n          currentChar: '',\n          tokenPrimary: '',\n          tokenSecondary: '',\n          brackets: [],\n          isValue: false,\n          stringOpen: false,\n          stringStart: 0,\n          tokens: []\n        };\n\n        for (var i = 0; i < _buffer.inputText.length; i++) {\n          _buffer.position = i;\n          _buffer.currentChar = _buffer.inputText.charAt(_buffer.position);\n\n          var a = determine_value(),\n              b = determine_string(),\n              _c = escape_character();\n\n          if (!a && !b && !_c) if (!_buffer.stringOpen) _buffer.tokenSecondary += _buffer.currentChar;\n        }\n\n        var _buffer2 = {\n          brackets: [],\n          isValue: false,\n          tokens: []\n        };\n        _buffer2.tokens = _buffer.tokens.map(function (token) {\n          var type = '',\n              string = '',\n              value = '';\n\n          switch (token) {\n            case ',':\n              type = 'symbol';\n              string = token;\n              value = token;\n              _buffer2.isValue = _buffer2.brackets[_buffer2.brackets.length - 1] === '[';\n              break;\n\n            case ':':\n              type = 'symbol';\n              string = token;\n              value = token;\n              _buffer2.isValue = true;\n              break;\n\n            case '{':\n            case '[':\n              type = 'symbol';\n              string = token;\n              value = token;\n\n              _buffer2.brackets.push(token);\n\n              _buffer2.isValue = _buffer2.brackets[_buffer2.brackets.length - 1] === '[';\n              break;\n\n            case '}':\n            case ']':\n              type = 'symbol';\n              string = token;\n              value = token;\n\n              _buffer2.brackets.pop();\n\n              _buffer2.isValue = _buffer2.brackets[_buffer2.brackets.length - 1] === '[';\n              break;\n\n            case 'undefined':\n              type = 'primitive';\n              string = token;\n              value = undefined;\n              break;\n\n            case 'null':\n              type = 'primitive';\n              string = token;\n              value = null;\n              break;\n\n            case 'false':\n              type = 'primitive';\n              string = token;\n              value = false;\n              break;\n\n            case 'true':\n              type = 'primitive';\n              string = token;\n              value = true;\n              break;\n\n            default:\n              var C = token.charAt(0);\n\n              var stripQuotesFromKey = function stripQuotesFromKey(text) {\n                if (text.length === 0) return text;\n                if (['\"\"', \"''\"].indexOf(text) > -1) return \"''\";\n                var wrappedInQuotes = false;\n\n                for (var i = 0; i < 2; i++) {\n                  if ([text.charAt(0), text.charAt(text.length - 1)].indexOf(['\"', \"'\"][i]) > -1) {\n                    wrappedInQuotes = true;\n                    break;\n                  }\n                }\n\n                if (wrappedInQuotes && text.length >= 2) text = text.slice(1, -1);\n\n                var nonAlphaNumeric = text.replace(/\\w/g, ''),\n                    alphaNumeric = text.replace(/\\W+/g, ''),\n                    mayRemoveQuotes = function (nonAlphaNumeric, text) {\n                  var numberAndLetter = false;\n\n                  for (var i = 0; i < text.length; i++) {\n                    if (i === 0) if (isNaN(text.charAt(i))) break;\n\n                    if (isNaN(text.charAt(i))) {\n                      numberAndLetter = true;\n                      break;\n                    }\n                  }\n\n                  return !(nonAlphaNumeric.length > 0 || numberAndLetter);\n                }(nonAlphaNumeric, text),\n                    hasQuotes = function (string) {\n                  for (var i = 0; i < string.length; i++) {\n                    if ([\"'\", '\"'].indexOf(string.charAt(i)) > -1) return true;\n                  }\n\n                  return false;\n                }(nonAlphaNumeric);\n\n                if (hasQuotes) {\n                  var newText = '';\n                  var charList = text.split('');\n\n                  for (var ii = 0; ii < charList.length; ii++) {\n                    var _char2 = charList[ii];\n                    if ([\"'\", '\"'].indexOf(_char2) > -1) _char2 = '\\\\' + _char2;\n                    newText += _char2;\n                  }\n\n                  text = newText;\n                }\n\n                if (!mayRemoveQuotes) return \"'\" + text + \"'\";else return text;\n              };\n\n              if ('\\'\"'.indexOf(C) > -1) {\n                if (_buffer2.isValue) type = 'string';else type = 'key';\n                if (type === 'key') string = stripQuotesFromKey(token);\n\n                if (type === 'string') {\n                  string = '';\n                  var charList2 = token.slice(1, -1).split('');\n\n                  for (var ii = 0; ii < charList2.length; ii++) {\n                    var _char3 = charList2[ii];\n                    if ('\\'\\\"'.indexOf(_char3) > -1) _char3 = '\\\\' + _char3;\n                    string += _char3;\n                  }\n\n                  string = \"'\" + string + \"'\";\n                }\n\n                value = string;\n                break;\n              }\n\n              if (!isNaN(token)) {\n                type = 'number';\n                string = token;\n                value = Number(token);\n                break;\n              }\n\n              if (token.length > 0) if (!_buffer2.isValue) {\n                type = 'key';\n                string = token;\n                if (string.indexOf(' ') > -1) string = \"'\" + string + \"'\";\n                value = string;\n                break;\n              }\n          }\n\n          return {\n            type: type,\n            string: string,\n            value: value,\n            depth: _buffer2.brackets.length\n          };\n        });\n        var clean = '';\n\n        for (var i = 0; i < _buffer2.tokens.length; i++) {\n          var _token10 = _buffer2.tokens[i];\n          clean += _token10.string;\n        }\n\n        ;\n        var indentation = '';\n\n        for (var i = 0; i < _buffer2.tokens.length; i++) {\n          var _token11 = _buffer2.tokens[i];\n\n          switch (_token11.string) {\n            case '[':\n            case '{':\n              var _nextToken2 = i < _buffer2.tokens.length - 1 - 1 ? _buffer2.tokens[i + 1] : '';\n\n              if ('}]'.indexOf(_nextToken2.string) === -1) indentation += _token11.string + indent(_token11.depth);else indentation += _token11.string;\n              break;\n\n            case ']':\n            case '}':\n              var prevToken = i > 0 ? _buffer2.tokens[i - 1] : '';\n              if ('[{'.indexOf(prevToken.string) === -1) indentation += indent(_token11.depth) + _token11.string;else indentation += _token11.string;\n              break;\n\n            case ':':\n              indentation += _token11.string + ' ';\n              break;\n\n            case ',':\n              indentation += _token11.string + indent(_token11.depth);\n              break;\n\n            default:\n              indentation += _token11.string;\n              break;\n          }\n        }\n\n        var lines = 1;\n        ;\n        var markup = '';\n\n        var _lastIndex = _buffer2.tokens.length - 1;\n\n        for (var i = 0; i < _buffer2.tokens.length; i++) {\n          var _token12 = _buffer2.tokens[i];\n          var span = newSpan(i, _token12, _token12.depth);\n\n          switch (_token12.string) {\n            case '{':\n            case '[':\n              var _nextToken3 = i < _buffer2.tokens.length - 1 - 1 ? _buffer2.tokens[i + 1] : '';\n\n              if ('}]'.indexOf(_nextToken3.string) === -1) markup += span + indentII(_token12.depth);else markup += span;\n              break;\n\n            case '}':\n            case ']':\n              var _prevToken = i > 0 ? _buffer2.tokens[i - 1] : '';\n\n              if ('[{'.indexOf(_prevToken.string) === -1) markup += indentII(_token12.depth) + (_lastIndex === i ? '<br>' : '') + span;else markup += span;\n              break;\n\n            case ':':\n              markup += span + ' ';\n              break;\n\n            case ',':\n              markup += span + indentII(_token12.depth);\n              break;\n\n            default:\n              markup += span;\n              break;\n          }\n        }\n\n        lines += 2;\n        return {\n          tokens: _buffer2.tokens,\n          noSpaces: clean,\n          indented: indentation,\n          json: JSON.stringify(something),\n          jsObject: something,\n          markup: markup,\n          lines: lines\n        };\n      }\n    }\n  }]);\n\n  return JSONInput;\n}(Component);\n\nexport default JSONInput;","map":{"version":3,"names":["_objectSpread","React","Component","themes","identical","getType","err","format","defaultLocale","JSONInput","props","updateInternalProps","bind","createMarkup","onClick","onBlur","update","getCursorPosition","setCursorPosition","scheduledUpdate","setUpdateTime","renderLabels","newSpan","renderErrorMessage","onScroll","showPlaceholder","tokenize","onKeyPress","onKeyDown","onPaste","stopEvent","refContent","refLabels","renderCount","state","prevPlaceholder","markupText","plainText","json","jsObject","undefined","lines","error","locale","console","warn","colors","style","theme","dark_vscode_tribute","default","string","number","colon","keys","keys_whiteSpace","primitive","background","background_warning","outerBox","container","warningBox","errorMessage","body","labelColumn","labels","contentBox","confirmGood","totalHeight","height","totalWidth","width","onKeyPressUpdate","timer","setInterval","clearInterval","updateTime","waitAfterKeyPress","resetConfiguration","reset","id","hasError","createElement","name","display","overflow","margin","boxSizing","position","opacity","top","right","transform","pointerEvents","transitionDuration","transitionTimingFunction","viewBox","fillRule","clipRule","fill","d","fontFamily","backgroundColor","verticalAlign","left","resize","fontSize","ref","padding","color","contentEditable","flex","overflowX","overflowY","wordWrap","whiteSpace","outline","dangerouslySetInnerHTML","autoComplete","autoCorrect","autoCapitalize","spellCheck","paddingRight","overflowWrap","flexDirection","justifyContent","errorLine","line","Array","i","map","key","__html","token","depth","type","length","replace","countBR","isChildOf","node","parentNode","selection","window","getSelection","charCount","linebreakCount","focusNode","focusOffset","previousSibling","nodeName","textContent","nextPosition","indexOf","createRange","chars","range","document","selectNode","setStart","count","setEnd","nodeType","Node","TEXT_NODE","lp","childNodes","setPosition","collapse","removeAllRanges","addRange","focus","cursorOffset","updateCursorPosition","data","onChange","indented","markup","cursorPosition","setState","Date","getTime","event","preventDefault","stopPropagation","ctrlOrMetaIsPressed","ctrlKey","metaKey","viewOnly","execCommand","text","clipboardData","getData","scrollTop","target","placeholderDoesNotExist","placeholder","placeholderHasEmptyValues","placeholderDataType","unexpectedDataType","throwError","samePlaceholderValues","componentShouldUpdate","indentation","something","quarkize","prefix","buffer","active","symbol","space","delimiter","quarks","pushAndStore","char","push","finalPush","charAt","validToken","quotes","firstChar","lastChar","quoteType","nonAlphanumeric","nonAlpha","tokenFollowed","last","tokens_normalize","previousToken","setError","tokenID","reason","offset","tokens_merge","followedBySymbol","options","nextToken","followsSymbol","typeFollowed","newIndent","_depth","join","newLineBreak","byPass","_line","newLineBreakAndIndent","containerNode","cloneNode","hasChildren","hasChildNodes","children","tokens_unknown","tokens_proto","tokens_split","tokens_fallback","tokens_plainText","child","info","attributes","wholeText","concat","fallback","slice","tokul","buffer2","brackets","stringOpen","isValue","normalToken","pop","_string","_type","_char","lastIndex","mergedToken","tokens","u","alphanumeric","bracketList","found","invalidToken","tokenSequence","prohibited","firstToken","secondToken","permitted","double","brace","curly","missingOpen","square","cannotWrap","noTrailingOrLeadingComma","termSequence","firstTerm","types","symbols","secondTerm","comma","value","quote_primary","quote","missingClose","mustBeWrappedByQuotes","h","c","isNaN","numberAndLetterMissingQuotes","spaceMissingQuotes","unexpectedKey","unexpectedString","useInstead","badToken","goodToken","noEscapedSingleQuote","current","next","removePair","index","splice","delta","maxIterations","Math","ceil","round","tokenCount","pair","_tokenString","_tokenPosition","_closingBracketType","JSON","parse","message","subsMark","Error","errPositionStr","substring","errPosition","parseInt","charTotal","tokenIndex","exitWhile","backslashCount","unexpected","islastToken","_adjustment","countCarrigeReturn","_line_fallback","isFunction","functionToCheck","toString","call","modifyErrorText","noSpaces","escape_character","currentChar","extract","determine_string","add_tokenSecondary","stringStart","stringToken","inputText","add_tokenPrimary","determine_value","tokenSecondary","indent","indentII","stringify","tokenPrimary","a","b","C","stripQuotesFromKey","wrappedInQuotes","nonAlphaNumeric","alphaNumeric","mayRemoveQuotes","numberAndLetter","hasQuotes","newText","charList","split","ii","charList2","Number","clean","prevToken","span"],"sources":["D:/Projects/New/api-visualizer-tool/node_modules/react-json-editor-ajrm/es/index.js"],"sourcesContent":["/** @license react-json-editor-ajrm v2.5.13\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread\";\nimport React, { Component } from 'react';\nimport themes from './themes';\nimport { identical, getType } from './mitsuketa';\nimport err from './err';\nimport { format } from './locale';\nimport defaultLocale from './locale/en';\n\nclass JSONInput extends Component {\n  constructor(props) {\n    super(props);\n    this.updateInternalProps = this.updateInternalProps.bind(this);\n    this.createMarkup = this.createMarkup.bind(this);\n    this.onClick = this.onClick.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.update = this.update.bind(this);\n    this.getCursorPosition = this.getCursorPosition.bind(this);\n    this.setCursorPosition = this.setCursorPosition.bind(this);\n    this.scheduledUpdate = this.scheduledUpdate.bind(this);\n    this.setUpdateTime = this.setUpdateTime.bind(this);\n    this.renderLabels = this.renderLabels.bind(this);\n    this.newSpan = this.newSpan.bind(this);\n    this.renderErrorMessage = this.renderErrorMessage.bind(this);\n    this.onScroll = this.onScroll.bind(this);\n    this.showPlaceholder = this.showPlaceholder.bind(this);\n    this.tokenize = this.tokenize.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n    this.onPaste = this.onPaste.bind(this);\n    this.stopEvent = this.stopEvent.bind(this);\n    this.refContent = null;\n    this.refLabels = null;\n    this.updateInternalProps();\n    this.renderCount = 1;\n    this.state = {\n      prevPlaceholder: '',\n      markupText: '',\n      plainText: '',\n      json: '',\n      jsObject: undefined,\n      lines: false,\n      error: false\n    };\n\n    if (!this.props.locale) {\n      console.warn(\"[react-json-editor-ajrm - Deprecation Warning] You did not provide a 'locale' prop for your JSON input - This will be required in a future version. English has been set as a default.\");\n    }\n  }\n\n  updateInternalProps() {\n    let colors = {},\n        style = {},\n        theme = themes.dark_vscode_tribute;\n    if ('theme' in this.props) if (typeof this.props.theme === 'string') if (this.props.theme in themes) theme = themes[this.props.theme];\n    colors = theme;\n    if ('colors' in this.props) colors = {\n      default: 'default' in this.props.colors ? this.props.colors.default : colors.default,\n      string: 'string' in this.props.colors ? this.props.colors.string : colors.string,\n      number: 'number' in this.props.colors ? this.props.colors.number : colors.number,\n      colon: 'colon' in this.props.colors ? this.props.colors.colon : colors.colon,\n      keys: 'keys' in this.props.colors ? this.props.colors.keys : colors.keys,\n      keys_whiteSpace: 'keys_whiteSpace' in this.props.colors ? this.props.colors.keys_whiteSpace : colors.keys_whiteSpace,\n      primitive: 'primitive' in this.props.colors ? this.props.colors.primitive : colors.primitive,\n      error: 'error' in this.props.colors ? this.props.colors.error : colors.error,\n      background: 'background' in this.props.colors ? this.props.colors.background : colors.background,\n      background_warning: 'background_warning' in this.props.colors ? this.props.colors.background_warning : colors.background_warning\n    };\n    this.colors = colors;\n    if ('style' in this.props) style = {\n      outerBox: 'outerBox' in this.props.style ? this.props.style.outerBox : {},\n      container: 'container' in this.props.style ? this.props.style.container : {},\n      warningBox: 'warningBox' in this.props.style ? this.props.style.warningBox : {},\n      errorMessage: 'errorMessage' in this.props.style ? this.props.style.errorMessage : {},\n      body: 'body' in this.props.style ? this.props.style.body : {},\n      labelColumn: 'labelColumn' in this.props.style ? this.props.style.labelColumn : {},\n      labels: 'labels' in this.props.style ? this.props.style.labels : {},\n      contentBox: 'contentBox' in this.props.style ? this.props.style.contentBox : {}\n    };else style = {\n      outerBox: {},\n      container: {},\n      warningBox: {},\n      errorMessage: {},\n      body: {},\n      labelColumn: {},\n      labels: {},\n      contentBox: {}\n    };\n    this.style = style;\n    this.confirmGood = 'confirmGood' in this.props ? this.props.confirmGood : true;\n    const totalHeight = this.props.height || '610px',\n          totalWidth = this.props.width || '479px';\n    this.totalHeight = totalHeight;\n    this.totalWidth = totalWidth;\n\n    if (!('onKeyPressUpdate' in this.props) || this.props.onKeyPressUpdate) {\n      if (!this.timer) this.timer = setInterval(this.scheduledUpdate, 100);\n    } else if (this.timer) {\n      clearInterval(this.timer);\n      this.timer = false;\n    }\n\n    this.updateTime = false;\n    this.waitAfterKeyPress = 'waitAfterKeyPress' in this.props ? this.props.waitAfterKeyPress : 1000;\n    this.resetConfiguration = 'reset' in this.props ? this.props.reset : false;\n  }\n\n  render() {\n    const id = this.props.id,\n          markupText = this.state.markupText,\n          error = this.props.error || this.state.error,\n          colors = this.colors,\n          style = this.style,\n          confirmGood = this.confirmGood,\n          totalHeight = this.totalHeight,\n          totalWidth = this.totalWidth,\n          hasError = !!this.props.error || (error ? 'token' in error : false);\n    this.renderCount++;\n    return React.createElement(\"div\", {\n      name: \"outer-box\",\n      id: id && id + '-outer-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'none',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        position: 'relative'\n      }, style.outerBox)\n    }, confirmGood ? React.createElement(\"div\", {\n      style: {\n        opacity: hasError ? 0 : 1,\n        height: '30px',\n        width: '30px',\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        transform: 'translate(-25%,25%)',\n        pointerEvents: 'none',\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }\n    }, React.createElement(\"svg\", {\n      height: \"30px\",\n      width: \"30px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"green\",\n      opacity: \"0.85\",\n      d: \"M39.363,79L16,55.49l11.347-11.419L39.694,56.49L72.983,23L84,34.085L39.363,79z\"\n    }))) : void 0, React.createElement(\"div\", {\n      name: \"container\",\n      id: id && id + '-container',\n      style: _objectSpread({\n        display: 'block',\n        height: totalHeight,\n        width: totalWidth,\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        fontFamily: 'Roboto, sans-serif'\n      }, style.container),\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      name: \"warning-box\",\n      id: id && id + '-warning-box',\n      style: _objectSpread({\n        display: 'block',\n        overflow: 'hidden',\n        height: hasError ? '60px' : '0px',\n        width: '100%',\n        margin: 0,\n        backgroundColor: colors.background_warning,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.warningBox),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        boxSizing: 'border-box',\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'relative',\n        top: 0,\n        left: 0,\n        height: '60px',\n        width: '60px',\n        margin: 0,\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '50%',\n        left: '50%',\n        transform: 'translate(-50%, -50%)',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, React.createElement(\"svg\", {\n      height: \"25px\",\n      width: \"25px\",\n      viewBox: \"0 0 100 100\"\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"red\",\n      d: \"M73.9,5.75c0.467-0.467,1.067-0.7,1.8-0.7c0.7,0,1.283,0.233,1.75,0.7l16.8,16.8  c0.467,0.5,0.7,1.084,0.7,1.75c0,0.733-0.233,1.334-0.7,1.801L70.35,50l23.9,23.95c0.5,0.467,0.75,1.066,0.75,1.8  c0,0.667-0.25,1.25-0.75,1.75l-16.8,16.75c-0.534,0.467-1.117,0.7-1.75,0.7s-1.233-0.233-1.8-0.7L50,70.351L26.1,94.25  c-0.567,0.467-1.167,0.7-1.8,0.7c-0.667,0-1.283-0.233-1.85-0.7L5.75,77.5C5.25,77,5,76.417,5,75.75c0-0.733,0.25-1.333,0.75-1.8  L29.65,50L5.75,26.101C5.25,25.667,5,25.066,5,24.3c0-0.666,0.25-1.25,0.75-1.75l16.8-16.8c0.467-0.467,1.05-0.7,1.75-0.7  c0.733,0,1.333,0.233,1.8,0.7L50,29.65L73.9,5.75z\"\n    }))))), React.createElement(\"span\", {\n      style: {\n        display: 'inline-block',\n        height: '60px',\n        width: 'calc(100% - 60px)',\n        margin: 0,\n        overflow: 'hidden',\n        verticalAlign: 'top',\n        position: 'absolute',\n        pointerEvents: 'none'\n      },\n      onClick: this.onClick\n    }, this.renderErrorMessage())), React.createElement(\"div\", {\n      name: \"body\",\n      id: id && id + '-body',\n      style: _objectSpread({\n        display: 'flex',\n        overflow: 'none',\n        height: hasError ? 'calc(100% - 60px)' : '100%',\n        width: '',\n        margin: 0,\n        resize: 'none',\n        fontFamily: 'Roboto Mono, Monaco, monospace',\n        fontSize: '11px',\n        backgroundColor: colors.background,\n        transitionDuration: '0.2s',\n        transitionTimingFunction: 'cubic-bezier(0, 1, 0.5, 1)'\n      }, style.body),\n      onClick: this.onClick\n    }, React.createElement(\"span\", {\n      name: \"labels\",\n      id: id && id + '-labels',\n      ref: ref => this.refLabels = ref,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '44px',\n        margin: 0,\n        padding: '5px 0px 5px 10px',\n        overflow: 'hidden',\n        color: '#D4D4D4'\n      }, style.labelColumn),\n      onClick: this.onClick\n    }, this.renderLabels()), React.createElement(\"span\", {\n      id: id,\n      ref: ref => this.refContent = ref,\n      contentEditable: true,\n      style: _objectSpread({\n        display: 'inline-block',\n        boxSizing: 'border-box',\n        verticalAlign: 'top',\n        height: '100%',\n        width: '',\n        flex: 1,\n        margin: 0,\n        padding: '5px',\n        overflowX: 'hidden',\n        overflowY: 'auto',\n        wordWrap: 'break-word',\n        whiteSpace: 'pre-line',\n        color: '#D4D4D4',\n        outline: 'none'\n      }, style.contentBox),\n      dangerouslySetInnerHTML: this.createMarkup(markupText),\n      onKeyPress: this.onKeyPress,\n      onKeyDown: this.onKeyDown,\n      onClick: this.onClick,\n      onBlur: this.onBlur,\n      onScroll: this.onScroll,\n      onPaste: this.onPaste,\n      autoComplete: \"off\",\n      autoCorrect: \"off\",\n      autoCapitalize: \"off\",\n      spellCheck: false\n    }))));\n  }\n\n  renderErrorMessage() {\n    const locale = this.props.locale || defaultLocale,\n          error = this.props.error || this.state.error,\n          style = this.style;\n    if (!error) return void 0;\n    return React.createElement(\"p\", {\n      style: _objectSpread({\n        color: 'red',\n        fontSize: '12px',\n        position: 'absolute',\n        width: 'calc(100% - 60px)',\n        height: '60px',\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n        paddingRight: '10px',\n        overflowWrap: 'break-word',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center'\n      }, style.errorMessage)\n    }, format(locale.format, error));\n  }\n\n  renderLabels() {\n    const colors = this.colors,\n          style = this.style,\n          error = this.props.error || this.state.error,\n          errorLine = error ? error.line : -1,\n          lines = this.state.lines ? this.state.lines : 1;\n    let labels = new Array(lines);\n\n    for (var i = 0; i < lines - 1; i++) labels[i] = i + 1;\n\n    return labels.map(number => {\n      const color = number !== errorLine ? colors.default : 'red';\n      return React.createElement(\"div\", {\n        key: number,\n        style: _objectSpread({}, style.labels, {\n          color: color\n        })\n      }, number);\n    });\n  }\n\n  createMarkup(markupText) {\n    if (markupText === undefined) return {\n      __html: ''\n    };\n    return {\n      __html: '' + markupText\n    };\n  }\n\n  newSpan(i, token, depth) {\n    let colors = this.colors,\n        type = token.type,\n        string = token.string;\n    let color = '';\n\n    switch (type) {\n      case 'string':\n      case 'number':\n      case 'primitive':\n      case 'error':\n        color = colors[token.type];\n        break;\n\n      case 'key':\n        if (string === ' ') color = colors.keys_whiteSpace;else color = colors.keys;\n        break;\n\n      case 'symbol':\n        if (string === ':') color = colors.colon;else color = colors.default;\n        break;\n\n      default:\n        color = colors.default;\n        break;\n    }\n\n    if (string.length !== string.replace(/</g, '').replace(/>/g, '').length) string = '<xmp style=display:inline;>' + string + '</xmp>';\n    return '<span' + ' type=\"' + type + '\"' + ' value=\"' + string + '\"' + ' depth=\"' + depth + '\"' + ' style=\"color:' + color + '\"' + '>' + string + '</span>';\n  }\n\n  getCursorPosition(countBR) {\n    /**\r\n     * Need to deprecate countBR\r\n     * It is used to differenciate between good markup render, and aux render when error found\r\n     * Adjustments based on coundBR account for usage of <br> instead of <span> for linebreaks to determine acurate cursor position\r\n     * Find a way to consolidate render styles\r\n     */\n    const isChildOf = node => {\n      while (node !== null) {\n        if (node === this.refContent) return true;\n        node = node.parentNode;\n      }\n\n      return false;\n    };\n\n    let selection = window.getSelection(),\n        charCount = -1,\n        linebreakCount = 0,\n        node;\n\n    if (selection.focusNode && isChildOf(selection.focusNode)) {\n      node = selection.focusNode;\n      charCount = selection.focusOffset;\n\n      while (node) {\n        if (node === this.refContent) break;\n\n        if (node.previousSibling) {\n          node = node.previousSibling;\n          if (countBR) if (node.nodeName === 'BR') linebreakCount++;\n          charCount += node.textContent.length;\n        } else {\n          node = node.parentNode;\n          if (node === null) break;\n        }\n      }\n    }\n\n    return charCount + linebreakCount;\n  }\n\n  setCursorPosition(nextPosition) {\n    if ([false, null, undefined].indexOf(nextPosition) > -1) return;\n\n    const createRange = (node, chars, range) => {\n      if (!range) {\n        range = document.createRange();\n        range.selectNode(node);\n        range.setStart(node, 0);\n      }\n\n      if (chars.count === 0) {\n        range.setEnd(node, chars.count);\n      } else if (node && chars.count > 0) {\n        if (node.nodeType === Node.TEXT_NODE) {\n          if (node.textContent.length < chars.count) chars.count -= node.textContent.length;else {\n            range.setEnd(node, chars.count);\n            chars.count = 0;\n          }\n        } else for (var lp = 0; lp < node.childNodes.length; lp++) {\n          range = createRange(node.childNodes[lp], chars, range);\n          if (chars.count === 0) break;\n        }\n      }\n\n      return range;\n    };\n\n    const setPosition = chars => {\n      if (chars < 0) return;\n      let selection = window.getSelection(),\n          range = createRange(this.refContent, {\n        count: chars\n      });\n      if (!range) return;\n      range.collapse(false);\n      selection.removeAllRanges();\n      selection.addRange(range);\n    };\n\n    if (nextPosition > 0) setPosition(nextPosition);else this.refContent.focus();\n  }\n\n  update(cursorOffset = 0, updateCursorPosition = true) {\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onChange' in this.props) this.props.onChange({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    let cursorPosition = this.getCursorPosition(data.error) + cursorOffset;\n    this.setState({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n    this.updateTime = false;\n    if (updateCursorPosition) this.setCursorPosition(cursorPosition);\n  }\n\n  scheduledUpdate() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    const {\n      updateTime\n    } = this;\n    if (updateTime === false) return;\n    if (updateTime > new Date().getTime()) return;\n    this.update();\n  }\n\n  setUpdateTime() {\n    if ('onKeyPressUpdate' in this.props) if (this.props.onKeyPressUpdate === false) return;\n    this.updateTime = new Date().getTime() + this.waitAfterKeyPress;\n  }\n\n  stopEvent(event) {\n    if (!event) return;\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  onKeyPress(event) {\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n    if (this.props.viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n    if (!ctrlOrMetaIsPressed) this.setUpdateTime();\n  }\n\n  onKeyDown(event) {\n    const viewOnly = !!this.props.viewOnly;\n    const ctrlOrMetaIsPressed = event.ctrlKey || event.metaKey;\n\n    switch (event.key) {\n      case 'Tab':\n        this.stopEvent(event);\n        if (viewOnly) break;\n        document.execCommand(\"insertText\", false, \"  \");\n        this.setUpdateTime();\n        break;\n\n      case 'Backspace':\n      case 'Delete':\n        if (viewOnly) this.stopEvent(event);\n        this.setUpdateTime();\n        break;\n\n      case 'ArrowLeft':\n      case 'ArrowRight':\n      case 'ArrowUp':\n      case 'ArrowDown':\n        this.setUpdateTime();\n        break;\n\n      case 'a':\n      case 'c':\n        if (viewOnly && !ctrlOrMetaIsPressed) this.stopEvent(event);\n        break;\n\n      default:\n        if (viewOnly) this.stopEvent(event);\n        break;\n    }\n  }\n\n  onPaste(event) {\n    if (this.props.viewOnly) {\n      this.stopEvent(event);\n    } else {\n      event.preventDefault();\n      var text = event.clipboardData.getData('text/plain');\n      document.execCommand('insertText', false, text);\n    }\n\n    this.update();\n  }\n\n  onClick() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n  }\n\n  onBlur() {\n    if ('viewOnly' in this.props) if (this.props.viewOnly) return;\n    const container = this.refContent,\n          data = this.tokenize(container);\n    if ('onBlur' in this.props) this.props.onBlur({\n      plainText: data.indented,\n      markupText: data.markup,\n      json: data.json,\n      jsObject: data.jsObject,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  onScroll(event) {\n    this.refLabels.scrollTop = event.target.scrollTop;\n  }\n\n  componentDidUpdate() {\n    this.updateInternalProps();\n    this.showPlaceholder();\n  }\n\n  componentDidMount() {\n    this.showPlaceholder();\n  }\n\n  componentWillUnmount() {\n    if (this.timer) clearInterval(this.timer);\n  }\n\n  showPlaceholder() {\n    const placeholderDoesNotExist = !('placeholder' in this.props);\n    if (placeholderDoesNotExist) return;\n    const {\n      placeholder\n    } = this.props;\n    const placeholderHasEmptyValues = [undefined, null].indexOf(placeholder) > -1;\n    if (placeholderHasEmptyValues) return;\n    const {\n      prevPlaceholder,\n      jsObject\n    } = this.state;\n    const {\n      resetConfiguration\n    } = this;\n    const placeholderDataType = getType(placeholder);\n    const unexpectedDataType = ['object', 'array'].indexOf(placeholderDataType) === -1;\n    if (unexpectedDataType) err.throwError('showPlaceholder', 'placeholder', 'either an object or an array');\n    const samePlaceholderValues = identical(placeholder, prevPlaceholder); // Component will always re-render when new placeholder value is any different from previous placeholder value.\n\n    let componentShouldUpdate = !samePlaceholderValues;\n\n    if (!componentShouldUpdate) {\n      if (resetConfiguration) {\n        /**\r\n         * If 'reset' property is set true or is truthy,\r\n         * any difference between placeholder and current value\r\n         * should trigger component re-render\r\n         */\n        if (jsObject !== undefined) componentShouldUpdate = !identical(placeholder, jsObject);\n      }\n    }\n\n    if (!componentShouldUpdate) return;\n    const data = this.tokenize(placeholder);\n    this.setState({\n      prevPlaceholder: placeholder,\n      plainText: data.indentation,\n      markupText: data.markup,\n      lines: data.lines,\n      error: data.error\n    });\n  }\n\n  tokenize(something) {\n    if (typeof something !== 'object') return console.error('tokenize() expects object type properties only. Got \\'' + typeof something + '\\' type instead.');\n    const locale = this.props.locale || defaultLocale;\n    const newSpan = this.newSpan;\n    /**\r\n     *     DOM NODE || ONBLUR OR UPDATE\r\n     */\n\n    if ('nodeType' in something) {\n      const containerNode = something.cloneNode(true),\n            hasChildren = containerNode.hasChildNodes();\n      if (!hasChildren) return '';\n      const children = containerNode.childNodes;\n      let buffer = {\n        tokens_unknown: [],\n        tokens_proto: [],\n        tokens_split: [],\n        tokens_fallback: [],\n        tokens_normalize: [],\n        tokens_merge: [],\n        tokens_plainText: '',\n        indented: '',\n        json: '',\n        jsObject: undefined,\n        markup: ''\n      };\n\n      for (var i = 0; i < children.length; i++) {\n        let child = children[i];\n        let info = {};\n\n        switch (child.nodeName) {\n          case 'SPAN':\n            info = {\n              string: child.textContent,\n              type: child.attributes.type.textContent\n            };\n            buffer.tokens_unknown.push(info);\n            break;\n\n          case 'DIV':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          case 'BR':\n            if (child.textContent === '') buffer.tokens_unknown.push({\n              string: '\\n',\n              type: 'unknown'\n            });\n            break;\n\n          case '#text':\n            buffer.tokens_unknown.push({\n              string: child.wholeText,\n              type: 'unknown'\n            });\n            break;\n\n          case 'FONT':\n            buffer.tokens_unknown.push({\n              string: child.textContent,\n              type: 'unknown'\n            });\n            break;\n\n          default:\n            console.error('Unrecognized node:', {\n              child\n            });\n            break;\n        }\n      }\n\n      function quarkize(text, prefix = '') {\n        let buffer = {\n          active: false,\n          string: '',\n          number: '',\n          symbol: '',\n          space: '',\n          delimiter: '',\n          quarks: []\n        };\n\n        function pushAndStore(char, type) {\n          switch (type) {\n            case 'symbol':\n            case 'delimiter':\n              if (buffer.active) buffer.quarks.push({\n                string: buffer[buffer.active],\n                type: prefix + '-' + buffer.active\n              });\n              buffer[buffer.active] = '';\n              buffer.active = type;\n              buffer[buffer.active] = char;\n              break;\n\n            default:\n              if (type !== buffer.active || [buffer.string, char].indexOf('\\n') > -1) {\n                if (buffer.active) buffer.quarks.push({\n                  string: buffer[buffer.active],\n                  type: prefix + '-' + buffer.active\n                });\n                buffer[buffer.active] = '';\n                buffer.active = type;\n                buffer[buffer.active] = char;\n              } else buffer[type] += char;\n\n              break;\n          }\n        }\n\n        function finalPush() {\n          if (buffer.active) {\n            buffer.quarks.push({\n              string: buffer[buffer.active],\n              type: prefix + '-' + buffer.active\n            });\n            buffer[buffer.active] = '';\n            buffer.active = false;\n          }\n        }\n\n        for (var i = 0; i < text.length; i++) {\n          const char = text.charAt(i);\n\n          switch (char) {\n            case '\"':\n            case \"'\":\n              pushAndStore(char, 'delimiter');\n              break;\n\n            case ' ':\n            case '\\u00A0':\n              pushAndStore(char, 'space');\n              break;\n\n            case '{':\n            case '}':\n            case '[':\n            case ']':\n            case ':':\n            case ',':\n              pushAndStore(char, 'symbol');\n              break;\n\n            case '0':\n            case '1':\n            case '2':\n            case '3':\n            case '4':\n            case '5':\n            case '6':\n            case '7':\n            case '8':\n            case '9':\n              if (buffer.active === 'string') pushAndStore(char, 'string');else pushAndStore(char, 'number');\n              break;\n\n            case '-':\n              if (i < text.length - 1) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            case '.':\n              if (i < text.length - 1 && i > 0) if ('0123456789'.indexOf(text.charAt(i + 1)) > -1 && '0123456789'.indexOf(text.charAt(i - 1)) > -1) {\n                pushAndStore(char, 'number');\n                break;\n              }\n\n            default:\n              pushAndStore(char, 'string');\n              break;\n          }\n        }\n\n        finalPush();\n        return buffer.quarks;\n      }\n\n      for (var i = 0; i < buffer.tokens_unknown.length; i++) {\n        let token = buffer.tokens_unknown[i];\n        buffer.tokens_proto = buffer.tokens_proto.concat(quarkize(token.string, 'proto'));\n      }\n\n      function validToken(string, type) {\n        const quotes = '\\'\"';\n        let firstChar = '',\n            lastChar = '',\n            quoteType = false;\n\n        switch (type) {\n          case 'primitive':\n            if (['true', 'false', 'null', 'undefined'].indexOf(string) === -1) return false;\n            break;\n\n          case 'string':\n            if (string.length < 2) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n            if (quoteType === -1) return false;\n            if (firstChar !== lastChar) return false;\n\n            for (var i = 0; i < string.length; i++) {\n              if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n            }\n\n            break;\n\n          case 'key':\n            if (string.length === 0) return false;\n            firstChar = string.charAt(0), lastChar = string.charAt(string.length - 1), quoteType = quotes.indexOf(firstChar);\n\n            if (quoteType > -1) {\n              if (string.length === 1) return false;\n              if (firstChar !== lastChar) return false;\n\n              for (var i = 0; i < string.length; i++) {\n                if (i > 0 && i < string.length - 1) if (string.charAt(i) === quotes[quoteType]) if (string.charAt(i - 1) !== '\\\\') return false;\n              }\n            } else {\n              const nonAlphanumeric = '\\'\"`.,:;{}[]&<>=~*%\\\\|/-+!?@^ \\xa0';\n\n              for (var i = 0; i < nonAlphanumeric.length; i++) {\n                const nonAlpha = nonAlphanumeric.charAt(i);\n                if (string.indexOf(nonAlpha) > -1) return false;\n              }\n            }\n\n            break;\n\n          case 'number':\n            for (var i = 0; i < string.length; i++) {\n              if ('0123456789'.indexOf(string.charAt(i)) === -1) if (i === 0) {\n                if ('-' !== string.charAt(0)) return false;\n              } else if ('.' !== string.charAt(i)) return false;\n            }\n\n            break;\n\n          case 'symbol':\n            if (string.length > 1) return false;\n            if ('{[:]},'.indexOf(string) === -1) return false;\n            break;\n\n          case 'colon':\n            if (string.length > 1) return false;\n            if (':' !== string) return false;\n            break;\n\n          default:\n            return true;\n            break;\n        }\n\n        return true;\n      }\n\n      for (var i = 0; i < buffer.tokens_proto.length; i++) {\n        let token = buffer.tokens_proto[i];\n\n        if (token.type.indexOf('proto') === -1) {\n          if (!validToken(token.string, token.type)) {\n            buffer.tokens_split = buffer.tokens_split.concat(quarkize(token.string, 'split'));\n          } else buffer.tokens_split.push(token);\n        } else buffer.tokens_split.push(token);\n      }\n\n      for (var i = 0; i < buffer.tokens_split.length; i++) {\n        let token = buffer.tokens_split[i];\n        let type = token.type,\n            string = token.string,\n            length = string.length,\n            fallback = [];\n\n        if (type.indexOf('-') > -1) {\n          type = type.slice(type.indexOf('-') + 1);\n          if (type !== 'string') fallback.push('string');\n          fallback.push('key');\n          fallback.push('error');\n        }\n\n        let tokul = {\n          string: string,\n          length: length,\n          type: type,\n          fallback: fallback\n        };\n        buffer.tokens_fallback.push(tokul);\n      }\n\n      function tokenFollowed() {\n        const last = buffer.tokens_normalize.length - 1;\n        if (last < 1) return false;\n\n        for (var i = last; i >= 0; i--) {\n          const previousToken = buffer.tokens_normalize[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      for (var i = 0; i < buffer.tokens_fallback.length; i++) {\n        let token = buffer.tokens_fallback[i];\n        const type = token.type,\n              string = token.string;\n        let normalToken = {\n          type: type,\n          string: string\n        };\n\n        switch (type) {\n          case 'symbol':\n          case 'colon':\n            if (buffer2.stringOpen) {\n              if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n              break;\n            }\n\n            switch (string) {\n              case '[':\n              case '{':\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ']':\n              case '}':\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ',':\n                if (tokenFollowed().type === 'colon') break;\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              case ':':\n                normalToken.type = 'colon';\n                buffer2.isValue = true;\n                break;\n            }\n\n            break;\n\n          case 'delimiter':\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n\n            if (!buffer2.stringOpen) {\n              buffer2.stringOpen = string;\n              break;\n            }\n\n            if (i > 0) {\n              const previousToken = buffer.tokens_fallback[i - 1],\n                    _string = previousToken.string,\n                    _type = previousToken.type,\n                    _char = _string.charAt(_string.length - 1);\n\n              if (_type === 'string' && _char === '\\\\') break;\n            }\n\n            if (buffer2.stringOpen === string) {\n              buffer2.stringOpen = false;\n              break;\n            }\n\n            break;\n\n          case 'primitive':\n          case 'string':\n            if (['false', 'true', 'null', 'undefined'].indexOf(string) > -1) {\n              const lastIndex = buffer.tokens_normalize.length - 1;\n\n              if (lastIndex >= 0) {\n                if (buffer.tokens_normalize[lastIndex].type !== 'string') {\n                  normalToken.type = 'primitive';\n                  break;\n                }\n\n                normalToken.type = 'string';\n                break;\n              }\n\n              normalToken.type = 'primitive';\n              break;\n            }\n\n            if (string === '\\n') if (!buffer2.stringOpen) {\n              normalToken.type = 'linebreak';\n              break;\n            }\n            if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'space':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          case 'number':\n            if (buffer2.stringOpen) if (buffer2.isValue) normalToken.type = 'string';else normalToken.type = 'key';\n            break;\n\n          default:\n            break;\n        }\n\n        buffer.tokens_normalize.push(normalToken);\n      }\n\n      for (var i = 0; i < buffer.tokens_normalize.length; i++) {\n        const token = buffer.tokens_normalize[i];\n        let mergedToken = {\n          string: token.string,\n          type: token.type,\n          tokens: [i]\n        };\n        if (['symbol', 'colon'].indexOf(token.type) === -1) if (i + 1 < buffer.tokens_normalize.length) {\n          let count = 0;\n\n          for (var u = i + 1; u < buffer.tokens_normalize.length; u++) {\n            const nextToken = buffer.tokens_normalize[u];\n            if (token.type !== nextToken.type) break;\n            mergedToken.string += nextToken.string;\n            mergedToken.tokens.push(u);\n            count++;\n          }\n\n          i += count;\n        }\n        buffer.tokens_merge.push(mergedToken);\n      }\n\n      const quotes = '\\'\"',\n            alphanumeric = 'abcdefghijklmnopqrstuvwxyz' + 'ABCDEFGHIJKLMNOPQRSTUVWXYZ' + '0123456789' + '_$';\n      var error = false,\n          line = buffer.tokens_merge.length > 0 ? 1 : 0;\n      buffer2 = {\n        brackets: [],\n        stringOpen: false,\n        isValue: false\n      };\n\n      function setError(tokenID, reason, offset = 0) {\n        error = {\n          token: tokenID,\n          line: line,\n          reason: reason\n        };\n        buffer.tokens_merge[tokenID + offset].type = 'error';\n      }\n\n      function followedBySymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === buffer.tokens_merge.length - 1) return false;\n\n        for (var i = tokenID + 1; i < buffer.tokens_merge.length; i++) {\n          const nextToken = buffer.tokens_merge[i];\n\n          switch (nextToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(nextToken.string) > -1) return i;else return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function followsSymbol(tokenID, options) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (options === undefined) console.error('options argument must be an array.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            case 'symbol':\n            case 'colon':\n              if (options.indexOf(previousToken.string) > -1) return true;\n              return false;\n              break;\n\n            default:\n              return false;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      function typeFollowed(tokenID) {\n        if (tokenID === undefined) console.error('tokenID argument must be an integer.');\n        if (tokenID === 0) return false;\n\n        for (var i = tokenID - 1; i >= 0; i--) {\n          const previousToken = buffer.tokens_merge[i];\n\n          switch (previousToken.type) {\n            case 'space':\n            case 'linebreak':\n              break;\n\n            default:\n              return previousToken.type;\n              break;\n          }\n        }\n\n        return false;\n      }\n\n      let bracketList = [];\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        if (error) break;\n        let token = buffer.tokens_merge[i],\n            string = token.string,\n            type = token.type,\n            found = false;\n\n        switch (type) {\n          case 'space':\n            break;\n\n          case 'linebreak':\n            line++;\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '{':\n              case '[':\n                found = followsSymbol(i, ['}', ']']);\n\n                if (found) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: buffer.tokens_merge[found].string,\n                    secondToken: string\n                  }));\n                  break;\n                }\n\n                if (string === '[' && i > 0) if (!followsSymbol(i, [':', '[', ','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                    firstToken: \"[\",\n                    secondToken: [\":\", \"[\", \",\"]\n                  }));\n                  break;\n                }\n                if (string === '{') if (followsSymbol(i, ['{'])) {\n                  setError(i, format(locale.invalidToken.double, {\n                    token: \"{\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.push(string);\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case '}':\n              case ']':\n                if (string === '}') if (buffer2.brackets[buffer2.brackets.length - 1] !== '{') {\n                  setError(i, format(locale.brace.curly.missingOpen));\n                  break;\n                }\n                if (string === '}') if (followsSymbol(i, [','])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \",\",\n                    secondToken: \"}\"\n                  }));\n                  break;\n                }\n                if (string === ']') if (buffer2.brackets[buffer2.brackets.length - 1] !== '[') {\n                  setError(i, format(locale.brace.square.missingOpen));\n                  break;\n                }\n                if (string === ']') if (followsSymbol(i, [':'])) {\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \":\",\n                    secondToken: \"]\"\n                  }));\n                  break;\n                }\n                buffer2.brackets.pop();\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                bracketList.push({\n                  i: i,\n                  line: line,\n                  string: string\n                });\n                break;\n\n              case ',':\n                found = followsSymbol(i, ['{']);\n\n                if (found) {\n                  if (followedBySymbol(i, ['}'])) {\n                    setError(i, format(locale.brace.curly.cannotWrap, {\n                      token: \",\"\n                    }));\n                    break;\n                  }\n\n                  setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                    firstToken: \"{\",\n                    secondToken: \",\"\n                  }));\n                  break;\n                }\n\n                if (followedBySymbol(i, ['}', ',', ']'])) {\n                  setError(i, format(locale.noTrailingOrLeadingComma));\n                  break;\n                }\n\n                found = typeFollowed(i);\n\n                switch (found) {\n                  case 'key':\n                  case 'colon':\n                    setError(i, format(locale.invalidToken.termSequence.prohibited, {\n                      firstTerm: found === 'key' ? locale.types.key : locale.symbols.colon,\n                      secondTerm: locale.symbols.comma\n                    }));\n                    break;\n\n                  case 'symbol':\n                    if (followsSymbol(i, ['{'])) {\n                      setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                        firstToken: \"{\",\n                        secondToken: \",\"\n                      }));\n                      break;\n                    }\n\n                    break;\n\n                  default:\n                    break;\n                }\n\n                buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n                break;\n\n              default:\n                break;\n            }\n\n            buffer.json += string;\n            break;\n\n          case 'colon':\n            found = followsSymbol(i, ['[']);\n\n            if (found && followedBySymbol(i, [']'])) {\n              setError(i, format(locale.brace.square.cannotWrap, {\n                token: \":\"\n              }));\n              break;\n            }\n\n            if (found) {\n              setError(i, format(locale.invalidToken.tokenSequence.prohibited, {\n                firstToken: \"[\",\n                secondToken: \":\"\n              }));\n              break;\n            }\n\n            if (typeFollowed(i) !== 'key') {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.key\n              }));\n              break;\n            }\n\n            if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.symbols.colon,\n                secondTerm: locale.types.value\n              }));\n              break;\n            }\n\n            buffer2.isValue = true;\n            buffer.json += string;\n            break;\n\n          case 'key':\n          case 'string':\n            let firstChar = string.charAt(0),\n                lastChar = string.charAt(string.length - 1),\n                quote_primary = quotes.indexOf(firstChar);\n            if (quotes.indexOf(firstChar) === -1) if (quotes.indexOf(lastChar) !== -1) {\n              setError(i, format(locale.string.missingOpen, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(lastChar) === -1) if (quotes.indexOf(firstChar) !== -1) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if (quotes.indexOf(firstChar) > -1) if (firstChar !== lastChar) {\n              setError(i, format(locale.string.missingClose, {\n                quote: firstChar\n              }));\n              break;\n            }\n            if ('string' === type) if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) {\n              setError(i, format(locale.string.mustBeWrappedByQuotes));\n              break;\n            }\n            if ('key' === type) if (followedBySymbol(i, ['}', ']'])) {\n              setError(i, format(locale.invalidToken.termSequence.permitted, {\n                firstTerm: locale.types.key,\n                secondTerm: locale.symbols.colon\n              }));\n            }\n            if (quotes.indexOf(firstChar) === -1 && quotes.indexOf(lastChar) === -1) for (var h = 0; h < string.length; h++) {\n              if (error) break;\n              const c = string.charAt(h);\n\n              if (alphanumeric.indexOf(c) === -1) {\n                setError(i, format(locale.string.nonAlphanumeric, {\n                  token: c\n                }));\n                break;\n              }\n            }\n            if (firstChar === \"'\") string = '\"' + string.slice(1, -1) + '\"';else if (firstChar !== '\"') string = '\"' + string + '\"';\n            if ('key' === type) if ('key' === typeFollowed(i)) {\n              if (i > 0) if (!isNaN(buffer.tokens_merge[i - 1])) {\n                buffer.tokens_merge[i - 1] += buffer.tokens_merge[i];\n                setError(i, format(locale.key.numberAndLetterMissingQuotes));\n                break;\n              }\n              setError(i, format(locale.key.spaceMissingQuotes));\n              break;\n            }\n            if ('key' === type) if (!followsSymbol(i, ['{', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"{\", \",\"]\n              }));\n              break;\n            }\n            if ('string' === type) if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n            if ('key' === type) if (buffer2.isValue) {\n              setError(i, format(locale.string.unexpectedKey));\n              break;\n            }\n            if ('string' === type) if (!buffer2.isValue) {\n              setError(i, format(locale.key.unexpectedString));\n              break;\n            }\n            buffer.json += string;\n            break;\n\n          case 'number':\n          case 'primitive':\n            if (followsSymbol(i, ['{'])) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            } else if (typeFollowed(i) === 'key') {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n            } else if (!followsSymbol(i, ['[', ':', ','])) {\n              setError(i, format(locale.invalidToken.tokenSequence.permitted, {\n                firstToken: type,\n                secondToken: [\"[\", \":\", \",\"]\n              }));\n              break;\n            }\n\n            if (type !== 'key') if (!buffer2.isValue) {\n              buffer.tokens_merge[i].type = 'key';\n              type = buffer.tokens_merge[i].type;\n              string = '\"' + string + '\"';\n            }\n            if (type === 'primitive') if (string === 'undefined') setError(i, format(locale.invalidToken.useInstead, {\n              badToken: \"undefined\",\n              goodToken: \"null\"\n            }));\n            buffer.json += string;\n            break;\n        }\n      }\n\n      let noEscapedSingleQuote = '';\n\n      for (var i = 0; i < buffer.json.length; i++) {\n        let current = buffer.json.charAt(i),\n            next = '';\n\n        if (i + 1 < buffer.json.length) {\n          next = buffer.json.charAt(i + 1);\n\n          if (current === '\\\\' && next === \"'\") {\n            noEscapedSingleQuote += next;\n            i++;\n            continue;\n          }\n        }\n\n        noEscapedSingleQuote += current;\n      }\n\n      buffer.json = noEscapedSingleQuote;\n\n      if (!error) {\n        const maxIterations = Math.ceil(bracketList.length / 2);\n        let round = 0,\n            delta = false;\n\n        function removePair(index) {\n          bracketList.splice(index + 1, 1);\n          bracketList.splice(index, 1);\n          if (!delta) delta = true;\n        }\n\n        while (bracketList.length > 0) {\n          delta = false;\n\n          for (var tokenCount = 0; tokenCount < bracketList.length - 1; tokenCount++) {\n            const pair = bracketList[tokenCount].string + bracketList[tokenCount + 1].string;\n            if (['[]', '{}'].indexOf(pair) > -1) removePair(tokenCount);\n          }\n\n          round++;\n          if (!delta) break;\n          if (round >= maxIterations) break;\n        }\n\n        if (bracketList.length > 0) {\n          const _tokenString = bracketList[0].string,\n                _tokenPosition = bracketList[0].i,\n                _closingBracketType = _tokenString === '[' ? ']' : '}';\n\n          line = bracketList[0].line;\n          setError(_tokenPosition, format(locale.brace[_closingBracketType === ']' ? 'square' : 'curly'].missingClose));\n        }\n      }\n\n      if (!error) if ([undefined, ''].indexOf(buffer.json) === -1) try {\n        buffer.jsObject = JSON.parse(buffer.json);\n      } catch (err) {\n        const errorMessage = err.message,\n              subsMark = errorMessage.indexOf('position');\n        if (subsMark === -1) throw new Error('Error parsing failed');\n        const errPositionStr = errorMessage.substring(subsMark + 9, errorMessage.length),\n              errPosition = parseInt(errPositionStr);\n        let charTotal = 0,\n            tokenIndex = 0,\n            token = false,\n            _line = 1,\n            exitWhile = false;\n\n        while (charTotal < errPosition && !exitWhile) {\n          token = buffer.tokens_merge[tokenIndex];\n          if ('linebreak' === token.type) _line++;\n          if (['space', 'linebreak'].indexOf(token.type) === -1) charTotal += token.string.length;\n          if (charTotal >= errPosition) break;\n          tokenIndex++;\n          if (!buffer.tokens_merge[tokenIndex + 1]) exitWhile = true;\n        }\n\n        line = _line;\n        let backslashCount = 0;\n\n        for (let i = 0; i < token.string.length; i++) {\n          const char = token.string.charAt(i);\n          if (char === '\\\\') backslashCount = backslashCount > 0 ? backslashCount + 1 : 1;else {\n            if (backslashCount % 2 !== 0 || backslashCount === 0) if ('\\'\"bfnrt'.indexOf(char) === -1) {\n              setError(tokenIndex, format(locale.invalidToken.unexpected, {\n                token: '\\\\'\n              }));\n            }\n            backslashCount = 0;\n          }\n        }\n\n        if (!error) setError(tokenIndex, format(locale.invalidToken.unexpected, {\n          token: token.string\n        }));\n      }\n      let _line = 1,\n          _depth = 0;\n\n      function newIndent() {\n        var space = [];\n\n        for (var i = 0; i < _depth * 2; i++) space.push('&nbsp;');\n\n        return space.join('');\n      }\n\n      function newLineBreak(byPass = false) {\n        _line++;\n\n        if (_depth > 0 || byPass) {\n          return '<br>';\n        }\n\n        return '';\n      }\n\n      function newLineBreakAndIndent(byPass = false) {\n        return newLineBreak(byPass) + newIndent();\n      }\n\n      ;\n      if (!error) for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        const token = buffer.tokens_merge[i],\n              string = token.string,\n              type = token.type;\n\n        switch (type) {\n          case 'space':\n          case 'linebreak':\n            break;\n\n          case 'string':\n          case 'number':\n          case 'primitive':\n          case 'error':\n            buffer.markup += (followsSymbol(i, [',', '[']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n            break;\n\n          case 'key':\n            buffer.markup += newLineBreakAndIndent() + newSpan(i, token, _depth);\n            break;\n\n          case 'colon':\n            buffer.markup += newSpan(i, token, _depth) + '&nbsp;';\n            break;\n\n          case 'symbol':\n            switch (string) {\n              case '[':\n              case '{':\n                buffer.markup += (!followsSymbol(i, [':']) ? newLineBreakAndIndent() : '') + newSpan(i, token, _depth);\n                _depth++;\n                break;\n\n              case ']':\n              case '}':\n                _depth--;\n\n                const islastToken = i === buffer.tokens_merge.length - 1,\n                      _adjustment = i > 0 ? ['[', '{'].indexOf(buffer.tokens_merge[i - 1].string) > -1 ? '' : newLineBreakAndIndent(islastToken) : '';\n\n                buffer.markup += _adjustment + newSpan(i, token, _depth);\n                break;\n\n              case ',':\n                buffer.markup += newSpan(i, token, _depth);\n                break;\n            }\n\n            break;\n        }\n      }\n\n      if (error) {\n        let _line_fallback = 1;\n\n        function countCarrigeReturn(string) {\n          let count = 0;\n\n          for (var i = 0; i < string.length; i++) {\n            if (['\\n', '\\r'].indexOf(string[i]) > -1) count++;\n          }\n\n          return count;\n        }\n\n        _line = 1;\n\n        for (var i = 0; i < buffer.tokens_merge.length; i++) {\n          const token = buffer.tokens_merge[i],\n                type = token.type,\n                string = token.string;\n          if (type === 'linebreak') _line++;\n          buffer.markup += newSpan(i, token, _depth);\n          _line_fallback += countCarrigeReturn(string);\n        }\n\n        _line++;\n        _line_fallback++;\n        if (_line < _line_fallback) _line = _line_fallback;\n      }\n\n      for (var i = 0; i < buffer.tokens_merge.length; i++) {\n        let token = buffer.tokens_merge[i];\n        buffer.indented += token.string;\n        if (['space', 'linebreak'].indexOf(token.type) === -1) buffer.tokens_plainText += token.string;\n      }\n\n      if (error) {\n        function isFunction(functionToCheck) {\n          return functionToCheck && {}.toString.call(functionToCheck) === '[object Function]';\n        }\n\n        if ('modifyErrorText' in this.props) if (isFunction(this.props.modifyErrorText)) error.reason = this.props.modifyErrorText(error.reason);\n      }\n\n      return {\n        tokens: buffer.tokens_merge,\n        noSpaces: buffer.tokens_plainText,\n        indented: buffer.indented,\n        json: buffer.json,\n        jsObject: buffer.jsObject,\n        markup: buffer.markup,\n        lines: _line,\n        error: error\n      };\n    }\n\n    ;\n    /**\r\n     *     JS OBJECTS || PLACEHOLDER\r\n     */\n\n    if (!('nodeType' in something)) {\n      let buffer = {\n        inputText: JSON.stringify(something),\n        position: 0,\n        currentChar: '',\n        tokenPrimary: '',\n        tokenSecondary: '',\n        brackets: [],\n        isValue: false,\n        stringOpen: false,\n        stringStart: 0,\n        tokens: []\n      };\n\n      function escape_character() {\n        if (buffer.currentChar !== '\\\\') return false;\n        return true;\n      }\n\n      function extract(string, position) {\n        return string.slice(0, position) + string.slice(position + 1);\n      }\n\n      function determine_string() {\n        if ('\\'\"'.indexOf(buffer.currentChar) === -1) return false;\n\n        if (!buffer.stringOpen) {\n          add_tokenSecondary();\n          buffer.stringStart = buffer.position;\n          buffer.stringOpen = buffer.currentChar;\n          return true;\n        }\n\n        if (buffer.stringOpen === buffer.currentChar) {\n          add_tokenSecondary();\n          const stringToken = buffer.inputText.substring(buffer.stringStart, buffer.position + 1);\n          add_tokenPrimary(stringToken);\n          buffer.stringOpen = false;\n          return true;\n        }\n\n        return false;\n      }\n\n      function determine_value() {\n        if (':,{}[]'.indexOf(buffer.currentChar) === -1) return false;\n        if (buffer.stringOpen) return false;\n        add_tokenSecondary();\n        add_tokenPrimary(buffer.currentChar);\n\n        switch (buffer.currentChar) {\n          case ':':\n            buffer.isValue = true;\n            return true;\n            break;\n\n          case '{':\n          case '[':\n            buffer.brackets.push(buffer.currentChar);\n            break;\n\n          case '}':\n          case ']':\n            buffer.brackets.pop();\n            break;\n        }\n\n        if (buffer.currentChar !== ':') buffer.isValue = buffer.brackets[buffer.brackets.length - 1] === '[';\n        return true;\n      }\n\n      function add_tokenSecondary() {\n        if (buffer.tokenSecondary.length === 0) return false;\n        buffer.tokens.push(buffer.tokenSecondary);\n        buffer.tokenSecondary = '';\n        return true;\n      }\n\n      function add_tokenPrimary(value) {\n        if (value.length === 0) return false;\n        buffer.tokens.push(value);\n        return true;\n      }\n\n      for (var i = 0; i < buffer.inputText.length; i++) {\n        buffer.position = i;\n        buffer.currentChar = buffer.inputText.charAt(buffer.position);\n        const a = determine_value(),\n              b = determine_string(),\n              c = escape_character();\n        if (!a && !b && !c) if (!buffer.stringOpen) buffer.tokenSecondary += buffer.currentChar;\n      }\n\n      let buffer2 = {\n        brackets: [],\n        isValue: false,\n        tokens: []\n      };\n      buffer2.tokens = buffer.tokens.map(token => {\n        let type = '',\n            string = '',\n            value = '';\n\n        switch (token) {\n          case ',':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case ':':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.isValue = true;\n            break;\n\n          case '{':\n          case '[':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.push(token);\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case '}':\n          case ']':\n            type = 'symbol';\n            string = token;\n            value = token;\n            buffer2.brackets.pop();\n            buffer2.isValue = buffer2.brackets[buffer2.brackets.length - 1] === '[';\n            break;\n\n          case 'undefined':\n            type = 'primitive';\n            string = token;\n            value = undefined;\n            break;\n\n          case 'null':\n            type = 'primitive';\n            string = token;\n            value = null;\n            break;\n\n          case 'false':\n            type = 'primitive';\n            string = token;\n            value = false;\n            break;\n\n          case 'true':\n            type = 'primitive';\n            string = token;\n            value = true;\n            break;\n\n          default:\n            const C = token.charAt(0);\n\n            function stripQuotesFromKey(text) {\n              if (text.length === 0) return text;\n              if (['\"\"', \"''\"].indexOf(text) > -1) return \"''\";\n              let wrappedInQuotes = false;\n\n              for (var i = 0; i < 2; i++) {\n                if ([text.charAt(0), text.charAt(text.length - 1)].indexOf(['\"', \"'\"][i]) > -1) {\n                  wrappedInQuotes = true;\n                  break;\n                }\n              }\n\n              if (wrappedInQuotes && text.length >= 2) text = text.slice(1, -1);\n\n              const nonAlphaNumeric = text.replace(/\\w/g, ''),\n                    alphaNumeric = text.replace(/\\W+/g, ''),\n                    mayRemoveQuotes = ((nonAlphaNumeric, text) => {\n                let numberAndLetter = false;\n\n                for (var i = 0; i < text.length; i++) {\n                  if (i === 0) if (isNaN(text.charAt(i))) break;\n\n                  if (isNaN(text.charAt(i))) {\n                    numberAndLetter = true;\n                    break;\n                  }\n                }\n\n                return !(nonAlphaNumeric.length > 0 || numberAndLetter);\n              })(nonAlphaNumeric, text),\n                    hasQuotes = (string => {\n                for (var i = 0; i < string.length; i++) {\n                  if ([\"'\", '\"'].indexOf(string.charAt(i)) > -1) return true;\n                }\n\n                return false;\n              })(nonAlphaNumeric);\n\n              if (hasQuotes) {\n                let newText = '';\n                const charList = text.split('');\n\n                for (var ii = 0; ii < charList.length; ii++) {\n                  let char = charList[ii];\n                  if ([\"'\", '\"'].indexOf(char) > -1) char = '\\\\' + char;\n                  newText += char;\n                }\n\n                text = newText;\n              }\n\n              if (!mayRemoveQuotes) return \"'\" + text + \"'\";else return text;\n            }\n\n            if ('\\'\"'.indexOf(C) > -1) {\n              if (buffer2.isValue) type = 'string';else type = 'key';\n              if (type === 'key') string = stripQuotesFromKey(token);\n\n              if (type === 'string') {\n                string = '';\n                const charList2 = token.slice(1, -1).split('');\n\n                for (var ii = 0; ii < charList2.length; ii++) {\n                  let char = charList2[ii];\n                  if ('\\'\\\"'.indexOf(char) > -1) char = '\\\\' + char;\n                  string += char;\n                }\n\n                string = \"'\" + string + \"'\";\n              }\n\n              value = string;\n              break;\n            }\n\n            if (!isNaN(token)) {\n              type = 'number';\n              string = token;\n              value = Number(token);\n              break;\n            }\n\n            if (token.length > 0) if (!buffer2.isValue) {\n              type = 'key';\n              string = token;\n              if (string.indexOf(' ') > -1) string = \"'\" + string + \"'\";\n              value = string;\n              break;\n            }\n        }\n\n        return {\n          type: type,\n          string: string,\n          value: value,\n          depth: buffer2.brackets.length\n        };\n      });\n      let clean = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        clean += token.string;\n      }\n\n      function indent(number) {\n        var space = [];\n\n        for (var i = 0; i < number * 2; i++) space.push(' ');\n\n        return (number > 0 ? '\\n' : '') + space.join('');\n      }\n\n      ;\n      let indentation = '';\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n\n        switch (token.string) {\n          case '[':\n          case '{':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) indentation += token.string + indent(token.depth);else indentation += token.string;\n            break;\n\n          case ']':\n          case '}':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) indentation += indent(token.depth) + token.string;else indentation += token.string;\n            break;\n\n          case ':':\n            indentation += token.string + ' ';\n            break;\n\n          case ',':\n            indentation += token.string + indent(token.depth);\n            break;\n\n          default:\n            indentation += token.string;\n            break;\n        }\n      }\n\n      let lines = 1;\n\n      function indentII(number) {\n        var space = [];\n        if (number > 0) lines++;\n\n        for (var i = 0; i < number * 2; i++) space.push('&nbsp;');\n\n        return (number > 0 ? '<br>' : '') + space.join('');\n      }\n\n      ;\n      let markup = '';\n      const lastIndex = buffer2.tokens.length - 1;\n\n      for (var i = 0; i < buffer2.tokens.length; i++) {\n        let token = buffer2.tokens[i];\n        let span = newSpan(i, token, token.depth);\n\n        switch (token.string) {\n          case '{':\n          case '[':\n            const nextToken = i < buffer2.tokens.length - 1 - 1 ? buffer2.tokens[i + 1] : '';\n            if ('}]'.indexOf(nextToken.string) === -1) markup += span + indentII(token.depth);else markup += span;\n            break;\n\n          case '}':\n          case ']':\n            const prevToken = i > 0 ? buffer2.tokens[i - 1] : '';\n            if ('[{'.indexOf(prevToken.string) === -1) markup += indentII(token.depth) + (lastIndex === i ? '<br>' : '') + span;else markup += span;\n            break;\n\n          case ':':\n            markup += span + ' ';\n            break;\n\n          case ',':\n            markup += span + indentII(token.depth);\n            break;\n\n          default:\n            markup += span;\n            break;\n        }\n      }\n\n      lines += 2;\n      return {\n        tokens: buffer2.tokens,\n        noSpaces: clean,\n        indented: indentation,\n        json: JSON.stringify(something),\n        jsObject: something,\n        markup: markup,\n        lines: lines\n      };\n    }\n  }\n\n}\n\nexport default JSONInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}